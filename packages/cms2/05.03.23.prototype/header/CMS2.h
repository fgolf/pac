
#ifndef CMS2_H
#define CMS2_H

#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include "TString.h"
#include <vector> 
#include <string>          

typedef ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > LorentzVector;

// ################################################################################################# //
// CMSSW independent
// ################################################################################################# //
#ifndef CMS2_USE_CMSSW

// Handle Classes to handle branch loading 
// ------------------------------------------------------------------------------------------------- //

namespace tas
{
    struct BranchType
    {
        enum value_type
        {
            CLASS,
            BUILTIN,
            NOT_SET,

            static_size
        };
    };

    template <typename T>
    class Handle
    {
        public:
            
            // construct: 
            explicit Handle(const std::string& branch_name);

            // destroy:
            virtual ~Handle() {}

            // set the branch's entry 
            void GetEntry(const unsigned int entry);

            // initialize the handle's branches
            void Init(TTree& tree);

            // is the branch already loaded
            bool IsLoaded() const;

            // load the branch
            void Load();

            // clear the branch
            void Clear();

            // get the value
            const T& get();

        protected:

            // set the branch type private member (based on the TBranch) 
            void SetBranchType(const std::string& branch_class);

            // members:
            bool                   m_is_loaded;
            unsigned int           m_entry;
            std::string            m_branch_name;
            T*                     m_object_ptr;
            T                      m_object;
            BranchType::value_type m_branch_type;

            // the TTree owns the branch (this is only a reference pointer)
            TBranch*     m_branch;

        private:
            // no default constructor
            Handle() {}
    };

    template <typename T>
    /*explicit*/ Handle<T>::Handle(const std::string& branch_name)
        : m_is_loaded(false)
        , m_entry(0)
        , m_branch_name(branch_name)
        , m_object_ptr(NULL)
        , m_object()
        , m_branch_type(BranchType::NOT_SET)
        , m_branch(NULL)
    {
    }

    template <typename T>
    void Handle<T>::GetEntry(const unsigned int entry)
    {
        Clear();
        m_entry = entry;
    }

    template <typename T>
    bool Handle<T>::IsLoaded() const
    {
        return m_is_loaded;
    }
   
    template <typename T>
    void Handle<T>::Clear()
    {
        m_is_loaded = false;
    }

    template <typename T>
    void Handle<T>::Load()
    {
        if (m_branch)
        {
            m_branch->GetEntry(m_entry);
            m_is_loaded = true;
        }
        else
        {
            throw std::runtime_error("[CMS2] ERROR: branch " + m_branch_name + " does not exist!"); 
        }
    }

    template <typename T>
    void Handle<T>::SetBranchType(const std::string& branch_class)
    {
        if (branch_class.find("edm::Wrapper")!=std::string::npos)
        {
            m_branch_type = BranchType::BUILTIN;
        }
        else if 
        (
            branch_class.find("/B")!=std::string::npos || // char
            branch_class.find("/b")!=std::string::npos || // unsigned char
            branch_class.find("/S")!=std::string::npos || // short
            branch_class.find("/s")!=std::string::npos || // unsigned short
            branch_class.find("/I")!=std::string::npos || // int
            branch_class.find("/i")!=std::string::npos || // unsigned int
            branch_class.find("/F")!=std::string::npos || // float
            branch_class.find("/D")!=std::string::npos || // double
            branch_class.find("/L")!=std::string::npos || // long
            branch_class.find("/l")!=std::string::npos || // unsigned long
            branch_class.find("/O")!=std::string::npos    // bool
        )
        {
            m_branch_type = BranchType::BUILTIN;
        }
        else
        {
            m_branch_type = BranchType::CLASS;
        }
    }

    template <typename T>
    void Handle<T>::Init(TTree& tree)
    {
        // no protection if the branch pointer is NULL
        // (so you can use this if the branch doesn't exist
        // as long as you don't call it).
        m_branch = tree.GetBranch(m_branch_name.c_str());
        if (m_branch)
        {
            if (m_branch_type == BranchType::NOT_SET)
            {
                std::string branch_class = m_branch->GetClassName();
                if (branch_class.empty())  // built in types don't have a ClassName --> using title
                {
                    branch_class = m_branch->GetTitle();
                }
                SetBranchType(branch_class);
            }
            switch (m_branch_type)
            {
                case BranchType::CLASS  : m_branch->SetAddress(&m_object_ptr); break;
                case BranchType::BUILTIN: m_branch->SetAddress(&m_object)    ; break;
                default: throw std::runtime_error("[CMS2] ERROR: branch type not supported!"); 
            }
        }
    }

    template <typename T>
    const T& Handle<T>::get()
    {
        if (not IsLoaded())
        {
            Load();
        }
        switch (m_branch_type)
        {
            case BranchType::CLASS  : return *m_object_ptr;
            case BranchType::BUILTIN: return m_object;
            default: throw std::runtime_error("[CMS2] ERROR: branch type not supported!"); 
        }
    }
    
} // namespace tas


// CMS2 to handle all the branches for the TTree 
// ------------------------------------------------------------------------------------------------- //

class CMS2
{
    public:
        CMS2();

        // methods:
        void Init(TTree* const tree);
        void Init(TTree& tree);
        void GetEntry(const unsigned int entry);
		void LoadAllBranches();

        // trigger methods:
        bool passHLTTrigger(const TString& trigName);
        bool passL1Trigger(const TString& trigName);

        // static methods:
        static void progress(const int nEventsTotal, const int nEventsChain);
    
        // branch accessors
        const TBits& hlt_bits();
        const std::vector<TString>& evt_CMS2tag();
        const std::vector<TString>& evt_dataset();
        const std::vector<TString>& hlt_trigNames();
        const std::vector<TString>& l1_techtrigNames();
        const std::vector<TString>& l1_trigNames();
        const std::vector<TString>& evt_errCategory();
        const std::vector<TString>& evt_errModule();
        const std::vector<TString>& evt_errSeverity();
        const std::vector<TString>& sparm_comment();
        const std::vector<TString>& sparm_names();
        const bool& evt_eventHasHalo();
        const bool& hcalnoise_HasBadRBXTS4TS5();
        const bool& ls_isValid();
        const bool& filt_ecalBE();
        const bool& filt_ecalDR();
        const bool& filt_ecalLaser();
        const bool& filt_ecalTP();
        const bool& filt_eeBadSc();
        const bool& filt_greedyMuon();
        const bool& filt_hcalLaser();
        const bool& filt_inconsistentMuon();
        const bool& filt_jetIDFailure();
        const bool& filt_multiEvent();
        const bool& filt_trackingFailure();
        const bool& evt_hbheFilter();
        const std::vector<bool>& els_conv_vtx_flag();
        const std::vector<bool>& els_passingMvaPreselection();
        const std::vector<bool>& els_passingPflowPreselection();
        const std::vector<bool>& mus_isRPCMuon();
        const std::vector<bool>& mus_tightMatch();
        const std::vector<bool>& mus_updatedSta();
        const std::vector<bool>& pfcands_isMuIso();
        const std::vector<bool>& photons_haspixelSeed();
        const std::vector<double>& jets_closestElectron_DR();
        const std::vector<double>& jets_closestMuon_DR();
        const float& evt_bs_Xwidth();
        const float& evt_bs_XwidthErr();
        const float& evt_bs_Ywidth();
        const float& evt_bs_YwidthErr();
        const float& evt_bs_dxdz();
        const float& evt_bs_dxdzErr();
        const float& evt_bs_dydz();
        const float& evt_bs_dydzErr();
        const float& evt_bs_sigmaZ();
        const float& evt_bs_sigmaZErr();
        const float& evt_bs_xErr();
        const float& evt_bs_yErr();
        const float& evt_bs_zErr();
        const float& evt_bField();
        const float& evt_rho();
        const float& evt_rhoJEC();
        const float& evt_fixgrid_all_rho();
        const float& evt_fixgridfastjet_all_rho();
        const float& evt_kfactor();
        const float& evt_scale1fb();
        const float& evt_xsec_excl();
        const float& evt_xsec_incl();
        const float& gen_met();
        const float& gen_metPhi();
        const float& genps_alphaQCD();
        const float& genps_pthat();
        const float& genps_qScale();
        const float& genps_weight();
        const float& gen_sumEt();
        const float& hcalnoise_GetRecHitEnergy();
        const float& hcalnoise_GetRecHitEnergy15();
        const float& hcalnoise_GetTotalCalibCharge();
        const float& hcalnoise_TS4TS5NoiseSumE();
        const float& hcalnoise_TS4TS5NoiseSumEt();
        const float& hcalnoise_eventChargeFraction();
        const float& hcalnoise_eventEMEnergy();
        const float& hcalnoise_eventEMFraction();
        const float& hcalnoise_eventHadEnergy();
        const float& hcalnoise_eventTrackEnergy();
        const float& hcalnoise_flatNoiseSumE();
        const float& hcalnoise_flatNoiseSumEt();
        const float& hcalnoise_isolatedNoiseSumE();
        const float& hcalnoise_isolatedNoiseSumEt();
        const float& hcalnoise_max10GeVHitTime();
        const float& hcalnoise_max25GeVHitTime();
        const float& hcalnoise_maxE10TS();
        const float& hcalnoise_maxE2Over10TS();
        const float& hcalnoise_maxE2TS();
        const float& hcalnoise_min10GeVHitTime();
        const float& hcalnoise_min25GeVHitTime();
        const float& hcalnoise_minE10TS();
        const float& hcalnoise_minE2Over10TS();
        const float& hcalnoise_minE2TS();
        const float& hcalnoise_minHPDEMF();
        const float& hcalnoise_minRBXEMF();
        const float& hcalnoise_rms10GeVHitTime();
        const float& hcalnoise_rms25GeVHitTime();
        const float& hcalnoise_spikeNoiseSumE();
        const float& hcalnoise_spikeNoiseSumEt();
        const float& hcalnoise_triangleNoiseSumE();
        const float& hcalnoise_triangleNoiseSumEt();
        const float& evt_kt6calo_central_rho();
        const float& evt_kt6calo_muhlt_rho();
        const float& evt_kt6calo_rho();
        const float& evt_kt6pf_ctrChargedPU_rho();
        const float& evt_kt6pf_ctrNeutral_rho();
        const float& evt_kt6pf_ctrNeutralTight_rho();
        const float& evt_kt6pf_foregiso_rho();
        const float& l1_met_etTot();
        const float& l1_met_met();
        const float& l1_mht_htTot();
        const float& l1_mht_mht();
        const float& ls_avgInsDelLumi();
        const float& ls_avgInsDelLumiErr();
        const float& ls_avgInsRecLumi();
        const float& ls_avgInsRecLumiErr();
        const float& ls_deadFrac();
        const float& ls_intgDelLumi();
        const float& ls_intgRecLumi();
        const float& ls_lumiSectionLength();
        const float& evt_ecalendcapm_met();
        const float& evt_ecalendcapm_metPhi();
        const float& evt_ecalendcapp_met();
        const float& evt_ecalendcapp_metPhi();
        const float& evt_ecalmet();
        const float& evt_ecalmetPhi();
        const float& evt_endcapm_met();
        const float& evt_endcapm_metPhi();
        const float& evt_endcapp_met();
        const float& evt_endcapp_metPhi();
        const float& evt_hcalendcapm_met();
        const float& evt_hcalendcapm_metPhi();
        const float& evt_hcalendcapp_met();
        const float& evt_hcalendcapp_metPhi();
        const float& evt_hcalmet();
        const float& evt_hcalmetPhi();
        const float& evt_met();
        const float& evt_met_EtGt3();
        const float& evt_metHO();
        const float& evt_metHOPhi();
        const float& evt_metHOSig();
        const float& evt_metMuonCorr();
        const float& evt_metMuonCorrPhi();
        const float& evt_metMuonCorrSig();
        const float& evt_metMuonJESCorr();
        const float& evt_metMuonJESCorrPhi();
        const float& evt_metMuonJESCorrSig();
        const float& evt_metNoHF();
        const float& evt_metNoHFHO();
        const float& evt_metNoHFHOPhi();
        const float& evt_metNoHFHOSig();
        const float& evt_metNoHFPhi();
        const float& evt_metNoHFSig();
        const float& evt_metOpt();
        const float& evt_metOptHO();
        const float& evt_metOptHOPhi();
        const float& evt_metOptHOSig();
        const float& evt_metOptNoHF();
        const float& evt_metOptNoHFHO();
        const float& evt_metOptNoHFHOPhi();
        const float& evt_metOptNoHFHOSig();
        const float& evt_metOptNoHFPhi();
        const float& evt_metOptNoHFSig();
        const float& evt_metOptPhi();
        const float& evt_metOptSig();
        const float& evt_metPhi();
        const float& evt_metPhi_EtGt3();
        const float& evt_metSig();
        const float& evt_sumet();
        const float& evt_sumet_EtGt3();
        const float& evt_sumetHO();
        const float& evt_sumetMuonCorr();
        const float& evt_sumetMuonJESCorr();
        const float& evt_sumetNoHF();
        const float& evt_sumetNoHFHO();
        const float& evt_sumetOpt();
        const float& evt_sumetOptHO();
        const float& evt_sumetOptNoHF();
        const float& evt_sumetOptNoHFHO();
        const float& pdfinfo_pdf1();
        const float& pdfinfo_pdf2();
        const float& pdfinfo_scale();
        const float& pdfinfo_x1();
        const float& pdfinfo_x2();
        const float& evt_fixgrid_rho_all();
        const float& evt_fixgrid_rho_ctr();
        const float& evt_fixgrid_rho_fwd();
        const float& evt_pfmet();
        const float& evt_pfmetPhi();
        const float& evt_pfmetPhi_type1cor();
        const float& evt_pfmetSig();
        const float& evt_pfmetSignificance();
        const float& evt_pfmet_type1cor();
        const float& evt_pfsumet();
        const float& sparm_filterEfficiency();
        const float& sparm_pdfScale();
        const float& sparm_pdfWeight1();
        const float& sparm_pdfWeight2();
        const float& sparm_weight();
        const float& sparm_xsec();
        const float& evt_pf_tcmet();
        const float& evt_pf_tcmetPhi();
        const float& evt_pf_tcmetSig();
        const float& evt_pf_tcsumet();
        const float& evt_tcmet();
        const float& evt_tcmetPhi();
        const float& evt_tcmetSig();
        const float& evt_tcsumet();
        const float& evt_ww_rho_act();
        const float& evt_ww_rho();
        const float& evt_ww_rho_rnd();
        const float& evt_ww_rho_vor();
        const LorentzVector & evt_bsp4();
        const LorentzVector & l1_met_p4();
        const LorentzVector & l1_mht_p4();
        const std::vector<LorentzVector >& els_mc_motherp4();
        const std::vector<LorentzVector >& els_mc_p4();
        const std::vector<LorentzVector >& jets_mc_gp_p4();
        const std::vector<LorentzVector >& jets_mc_motherp4();
        const std::vector<LorentzVector >& jets_mc_p4();
        const std::vector<LorentzVector >& mus_mc_motherp4();
        const std::vector<LorentzVector >& mus_mc_p4();
        const std::vector<LorentzVector >& pfjets_mc_gp_p4();
        const std::vector<LorentzVector >& pfjets_mc_motherp4();
        const std::vector<LorentzVector >& pfjets_mc_p4();
        const std::vector<LorentzVector >& photons_mc_motherp4();
        const std::vector<LorentzVector >& photons_mc_p4();
        const std::vector<LorentzVector >& trk_mcp4();
        const std::vector<LorentzVector >& els_conv_pos_p4();
        const std::vector<LorentzVector >& els_inner_position();
        const std::vector<LorentzVector >& els_outer_position();
        const std::vector<LorentzVector >& els_p4();
        const std::vector<LorentzVector >& els_p4In();
        const std::vector<LorentzVector >& els_p4Out();
        const std::vector<LorentzVector >& els_trk_p4();
        const std::vector<LorentzVector >& els_vertex_p4();
        const std::vector<LorentzVector >& genjets_p4();
        const std::vector<LorentzVector >& genps_p4();
        const std::vector<LorentzVector >& genps_prod_vtx();
        const std::vector<LorentzVector >& gsftrks_inner_position();
        const std::vector<LorentzVector >& gsftrks_outer_p4();
        const std::vector<LorentzVector >& gsftrks_outer_position();
        const std::vector<LorentzVector >& gsftrks_p4();
        const std::vector<LorentzVector >& gsftrks_vertex_p4();
        const std::vector<LorentzVector >& hyp_ll_p4();
        const std::vector<LorentzVector >& hyp_ll_trk_p4();
        const std::vector<LorentzVector >& hyp_lt_p4();
        const std::vector<LorentzVector >& hyp_lt_trk_p4();
        const std::vector<LorentzVector >& hyp_p4();
        const std::vector<LorentzVector >& hyp_FVFit_p4();
        const std::vector<LorentzVector >& hyp_FVFit_v4();
        const std::vector<LorentzVector >& hyp_ll_mc_p4();
        const std::vector<LorentzVector >& hyp_lt_mc_p4();
        const std::vector<LorentzVector >& jets_p4();
        const std::vector<LorentzVector >& jets_vertex_p4();
        const std::vector<LorentzVector >& l1_emiso_p4();
        const std::vector<LorentzVector >& l1_emnoiso_p4();
        const std::vector<LorentzVector >& l1_jetsc_p4();
        const std::vector<LorentzVector >& l1_jetsf_p4();
        const std::vector<LorentzVector >& l1_jetst_p4();
        const std::vector<LorentzVector >& l1_mus_p4();
        const std::vector<LorentzVector >& mus_ecalpos_p4();
        const std::vector<LorentzVector >& mus_fitpicky_p4();
        const std::vector<LorentzVector >& mus_fittev_p4();
        const std::vector<LorentzVector >& mus_fittpfms_p4();
        const std::vector<LorentzVector >& mus_gfit_outerPos_p4();
        const std::vector<LorentzVector >& mus_gfit_p4();
        const std::vector<LorentzVector >& mus_gfit_vertex_p4();
        const std::vector<LorentzVector >& mus_p4();
        const std::vector<LorentzVector >& mus_pfp4();
        const std::vector<LorentzVector >& mus_pfposAtEcal_p4();
        const std::vector<LorentzVector >& mus_sta_p4();
        const std::vector<LorentzVector >& mus_sta_vertex_p4();
        const std::vector<LorentzVector >& mus_trk_p4();
        const std::vector<LorentzVector >& mus_vertex_p4();
        const std::vector<LorentzVector >& pfcands_p4();
        const std::vector<LorentzVector >& pfcands_posAtEcal_p4();
        const std::vector<LorentzVector >& pfels_p4();
        const std::vector<LorentzVector >& pfels_posAtEcal_p4();
        const std::vector<LorentzVector >& pfjets_p4();
        const std::vector<LorentzVector >& pfmus_p4();
        const std::vector<LorentzVector >& pfmus_posAtEcal_p4();
        const std::vector<LorentzVector >& taus_pf_p4();
        const std::vector<LorentzVector >& photons_p4();
        const std::vector<LorentzVector >& convs_refitPairMom_p4();
        const std::vector<LorentzVector >& convs_vtxpos();
        const std::vector<LorentzVector >& scs_p4();
        const std::vector<LorentzVector >& scs_pos_p4();
        const std::vector<LorentzVector >& scs_vtx_p4();
        const std::vector<LorentzVector >& svs_flight();
        const std::vector<LorentzVector >& svs_mc3_p4();
        const std::vector<LorentzVector >& svs_p4();
        const std::vector<LorentzVector >& svs_position();
        const std::vector<LorentzVector >& svs_refitp4();
        const std::vector<LorentzVector >& trks_inner_position();
        const std::vector<LorentzVector >& trks_outer_p4();
        const std::vector<LorentzVector >& trks_outer_position();
        const std::vector<LorentzVector >& trks_trk_p4();
        const std::vector<LorentzVector >& trks_vertex_p4();
        const std::vector<LorentzVector >& trkjets_p4();
        const std::vector<LorentzVector >& vtxs_position();
        const std::vector<LorentzVector >& bsvtxs_position();
        const std::vector<std::vector<LorentzVector > >& els_convs_pos_p4();
        const std::vector<std::vector<LorentzVector > >& genps_lepdaughter_p4();
        const std::vector<std::vector<LorentzVector > >& hlt_trigObjs_p4();
        const std::vector<std::vector<LorentzVector > >& hyp_jets_p4();
        const std::vector<std::vector<LorentzVector > >& hyp_other_jets_p4();
        const std::vector<float>& jpts_combinedSecondaryVertexBJetTag();
        const std::vector<float>& jpts_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& jpts_jetBProbabilityBJetTag();
        const std::vector<float>& jpts_jetProbabilityBJetTag();
        const std::vector<float>& jpts_simpleSecondaryVertexBJetTag();
        const std::vector<float>& jpts_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& jpts_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& jpts_softElectronByIP3dBJetTag();
        const std::vector<float>& jpts_softElectronByPtBJetTag();
        const std::vector<float>& jpts_softElectronTag();
        const std::vector<float>& jpts_softMuonBJetTag();
        const std::vector<float>& jpts_softMuonByIP3dBJetTag();
        const std::vector<float>& jpts_softMuonByPtBJetTag();
        const std::vector<float>& jpts_trackCountingHighEffBJetTag();
        const std::vector<float>& jpts_trackCountingHighPurBJetTag();
        const std::vector<float>& jets_combinedSecondaryVertexBJetTag();
        const std::vector<float>& jets_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& jets_jetBProbabilityBJetTag();
        const std::vector<float>& jets_jetProbabilityBJetTag();
        const std::vector<float>& jets_simpleSecondaryVertexBJetTag();
        const std::vector<float>& jets_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& jets_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& jets_softElectronByIP3dBJetTag();
        const std::vector<float>& jets_softElectronByPtBJetTag();
        const std::vector<float>& jets_softElectronTag();
        const std::vector<float>& jets_softMuonBJetTag();
        const std::vector<float>& jets_softMuonByIP3dBJetTag();
        const std::vector<float>& jets_softMuonByPtBJetTag();
        const std::vector<float>& jets_trackCountingHighEffBJetTag();
        const std::vector<float>& jets_trackCountingHighPurBJetTag();
        const std::vector<float>& pfjets_combinedSecondaryVertexBJetTag();
        const std::vector<float>& pfjets_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& pfjets_jetBProbabilityBJetTag();
        const std::vector<float>& pfjets_jetProbabilityBJetTag();
        const std::vector<float>& pfjets_simpleSecondaryVertexBJetTag();
        const std::vector<float>& pfjets_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& pfjets_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& pfjets_softElectronByIP3dBJetTag();
        const std::vector<float>& pfjets_softElectronByPtBJetTag();
        const std::vector<float>& pfjets_softElectronTag();
        const std::vector<float>& pfjets_softMuonBJetTag();
        const std::vector<float>& pfjets_softMuonByIP3dBJetTag();
        const std::vector<float>& pfjets_softMuonByPtBJetTag();
        const std::vector<float>& pfjets_trackCountingHighEffBJetTag();
        const std::vector<float>& pfjets_trackCountingHighPurBJetTag();
        const std::vector<float>& trkjets_combinedSecondaryVertexBJetTag();
        const std::vector<float>& trkjets_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& trkjets_jetBProbabilityBJetTag();
        const std::vector<float>& trkjets_jetProbabilityBJetTag();
        const std::vector<float>& trkjets_simpleSecondaryVertexBJetTag();
        const std::vector<float>& trkjets_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& trkjets_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& trkjets_softElectronByIP3dBJetTag();
        const std::vector<float>& trkjets_softElectronByPtBJetTag();
        const std::vector<float>& trkjets_softElectronTag();
        const std::vector<float>& trkjets_softMuonBJetTag();
        const std::vector<float>& trkjets_softMuonByIP3dBJetTag();
        const std::vector<float>& trkjets_softMuonByPtBJetTag();
        const std::vector<float>& trkjets_trackCountingHighEffBJetTag();
        const std::vector<float>& trkjets_trackCountingHighPurBJetTag();
        const std::vector<float>& evt_bs_covMatrix();
        const std::vector<float>& els_mc3dr();
        const std::vector<float>& els_mcdr();
        const std::vector<float>& jets_mc3dr();
        const std::vector<float>& jets_mcdr();
        const std::vector<float>& jets_mc_emEnergy();
        const std::vector<float>& jets_mc_gpdr();
        const std::vector<float>& jets_mc_hadEnergy();
        const std::vector<float>& jets_mc_invEnergy();
        const std::vector<float>& jets_mc_otherEnergy();
        const std::vector<float>& mus_mc3dr();
        const std::vector<float>& mus_mcdr();
        const std::vector<float>& pfjets_mc3dr();
        const std::vector<float>& pfjets_mcdr();
        const std::vector<float>& pfjets_mc_emEnergy();
        const std::vector<float>& pfjets_mc_gpdr();
        const std::vector<float>& pfjets_mc_hadEnergy();
        const std::vector<float>& pfjets_mc_invEnergy();
        const std::vector<float>& pfjets_mc_otherEnergy();
        const std::vector<float>& photons_mc3dr();
        const std::vector<float>& photons_mcdr();
        const std::vector<float>& trk_mc3dr();
        const std::vector<float>& trk_mcdr();
        const std::vector<float>& els_ecalJuraIso();
        const std::vector<float>& els_ecalJuraTowerIso();
        const std::vector<float>& els_hcalConeIso();
        const std::vector<float>& els_tkJuraIso();
        const std::vector<float>& els_jetdr();
        const std::vector<float>& els_musdr();
        const std::vector<float>& els_isoR03_chpf_radial();
        const std::vector<float>& els_isoR03_chpf_radialTight();
        const std::vector<float>& els_isoR03_chpf_radialTight_bv();
        const std::vector<float>& els_isoR03_chpf_radial_bv();
        const std::vector<float>& els_isoR03_empf_radial();
        const std::vector<float>& els_isoR03_empf_radialTight();
        const std::vector<float>& els_isoR03_empf_radialTight_bv();
        const std::vector<float>& els_isoR03_empf_radial_bv();
        const std::vector<float>& els_isoR03_nhpf_radial();
        const std::vector<float>& els_isoR03_nhpf_radialTight();
        const std::vector<float>& els_isoR03_nhpf_radialTight_bv();
        const std::vector<float>& els_isoR03_nhpf_radial_bv();
        const std::vector<float>& els_isoR03_pf2012n0p5_ch();
        const std::vector<float>& els_isoR03_pf2012n0p5_em();
        const std::vector<float>& els_isoR03_pf2012n0p5_nh();
        const std::vector<float>& els_isoR03_pf_radial();
        const std::vector<float>& els_isoR03_pf_radialTight();
        const std::vector<float>& els_isoR03_pf_radialTight_bv();
        const std::vector<float>& els_isoR03_pf_radial_bv();
        const std::vector<float>& els_chi2();
        const std::vector<float>& els_ckf_chi2();
        const std::vector<float>& els_ckf_ndof();
        const std::vector<float>& els_conv_dcot();
        const std::vector<float>& els_conv_dist();
        const std::vector<float>& els_conv_old_dcot();
        const std::vector<float>& els_conv_old_dist();
        const std::vector<float>& els_conv_old_radius();
        const std::vector<float>& els_conv_radius();
        const std::vector<float>& els_d0();
        const std::vector<float>& els_d0Err();
        const std::vector<float>& els_d0corr();
        const std::vector<float>& els_dEtaIn();
        const std::vector<float>& els_dEtaOut();
        const std::vector<float>& els_dPhiIn();
        const std::vector<float>& els_dPhiInPhiOut();
        const std::vector<float>& els_dPhiOut();
        const std::vector<float>& els_deltaEtaEleClusterTrackAtCalo();
        const std::vector<float>& els_deltaPhiEleClusterTrackAtCalo();
        const std::vector<float>& els_e1x5();
        const std::vector<float>& els_e2x5Max();
        const std::vector<float>& els_e3x3();
        const std::vector<float>& els_e5x5();
        const std::vector<float>& els_eMax();
        const std::vector<float>& els_eOverPIn();
        const std::vector<float>& els_eOverPOut();
        const std::vector<float>& els_eSC();
        const std::vector<float>& els_eSCPresh();
        const std::vector<float>& els_eSCRaw();
        const std::vector<float>& els_eSeed();
        const std::vector<float>& els_eSeedOverPIn();
        const std::vector<float>& els_eSeedOverPOut();
        const std::vector<float>& els_ecalEnergy();
        const std::vector<float>& els_ecalEnergyError();
        const std::vector<float>& els_ecalIso();
        const std::vector<float>& els_ecalIso04();
        const std::vector<float>& els_etaErr();
        const std::vector<float>& els_etaSC();
        const std::vector<float>& els_etaSCwidth();
        const std::vector<float>& els_fbrem();
        const std::vector<float>& els_hOverE();
        const std::vector<float>& els_hcalDepth1OverEcal();
        const std::vector<float>& els_hcalDepth1TowerSumEt();
        const std::vector<float>& els_hcalDepth1TowerSumEt04();
        const std::vector<float>& els_hcalDepth2OverEcal();
        const std::vector<float>& els_hcalDepth2TowerSumEt();
        const std::vector<float>& els_hcalDepth2TowerSumEt04();
        const std::vector<float>& els_hcalIso();
        const std::vector<float>& els_hcalIso04();
        const std::vector<float>& els_ip3d();
        const std::vector<float>& els_ip3derr();
        const std::vector<float>& els_iso03_pf();
        const std::vector<float>& els_iso03_pf2012_ch();
        const std::vector<float>& els_iso03_pf2012_em();
        const std::vector<float>& els_iso03_pf2012ext_ch();
        const std::vector<float>& els_iso03_pf2012ext_em();
        const std::vector<float>& els_iso03_pf2012ext_nh();
        const std::vector<float>& els_iso03_pf2012_nh();
        const std::vector<float>& els_iso03_pf_ch();
        const std::vector<float>& els_iso03_pf_gamma05();
        const std::vector<float>& els_iso03_pf_nhad05();
        const std::vector<float>& els_iso04_pf();
        const std::vector<float>& els_iso04_pf2012_ch();
        const std::vector<float>& els_iso04_pf2012_em();
        const std::vector<float>& els_iso04_pf2012ext_ch();
        const std::vector<float>& els_iso04_pf2012ext_em();
        const std::vector<float>& els_iso04_pf2012ext_nh();
        const std::vector<float>& els_iso04_pf2012_nh();
        const std::vector<float>& els_iso04_pf_ch();
        const std::vector<float>& els_iso04_pf_gamma05();
        const std::vector<float>& els_iso04_pf_nhad05();
        const std::vector<float>& els_layer1_charge();
        const std::vector<float>& els_lh();
        const std::vector<float>& els_mva();
        const std::vector<float>& els_ndof();
        const std::vector<float>& els_pfChargedHadronIso();
        const std::vector<float>& els_pfNeutralHadronIso();
        const std::vector<float>& els_pfPhotonIso();
        const std::vector<float>& els_phiErr();
        const std::vector<float>& els_phiSC();
        const std::vector<float>& els_phiSCwidth();
        const std::vector<float>& els_ptErr();
        const std::vector<float>& els_r9();
        const std::vector<float>& els_sigmaEtaEta();
        const std::vector<float>& els_sigmaIEtaIEta();
        const std::vector<float>& els_sigmaIEtaIEtaSC();
        const std::vector<float>& els_sigmaIEtaIPhi();
        const std::vector<float>& els_sigmaIPhiIPhi();
        const std::vector<float>& els_sigmaIPhiIPhiSC();
        const std::vector<float>& els_sigmaIphiIphi();
        const std::vector<float>& els_sigmaPhiPhi();
        const std::vector<float>& els_tkIso();
        const std::vector<float>& els_tkIso04();
        const std::vector<float>& els_trackMomentumError();
        const std::vector<float>& els_trkdr();
        const std::vector<float>& els_trkshFrac();
        const std::vector<float>& els_z0();
        const std::vector<float>& els_z0Err();
        const std::vector<float>& els_z0corr();
        const std::vector<float>& gsftrks_chi2();
        const std::vector<float>& gsftrks_d0();
        const std::vector<float>& gsftrks_d0Err();
        const std::vector<float>& gsftrks_d0corr();
        const std::vector<float>& gsftrks_d0corrPhi();
        const std::vector<float>& gsftrks_d0phiCov();
        const std::vector<float>& gsftrks_etaErr();
        const std::vector<float>& gsftrks_layer1_charge();
        const std::vector<float>& gsftrks_ndof();
        const std::vector<float>& gsftrks_phiErr();
        const std::vector<float>& gsftrks_ptErr();
        const std::vector<float>& gsftrks_z0();
        const std::vector<float>& gsftrks_z0Err();
        const std::vector<float>& gsftrks_z0corr();
        const std::vector<float>& hyp_Ht();
        const std::vector<float>& hyp_dPhi_nJet_metMuonJESCorr();
        const std::vector<float>& hyp_dPhi_nJet_muCorrMet();
        const std::vector<float>& hyp_dPhi_nJet_tcMet();
        const std::vector<float>& hyp_dPhi_nJet_unCorrMet();
        const std::vector<float>& hyp_ll_chi2();
        const std::vector<float>& hyp_ll_d0();
        const std::vector<float>& hyp_ll_d0Err();
        const std::vector<float>& hyp_ll_d0corr();
        const std::vector<float>& hyp_ll_dPhi_metMuonJESCorr();
        const std::vector<float>& hyp_ll_dPhi_muCorrMet();
        const std::vector<float>& hyp_ll_dPhi_tcMet();
        const std::vector<float>& hyp_ll_dPhi_unCorrMet();
        const std::vector<float>& hyp_ll_etaErr();
        const std::vector<float>& hyp_ll_ndof();
        const std::vector<float>& hyp_ll_phiErr();
        const std::vector<float>& hyp_ll_ptErr();
        const std::vector<float>& hyp_ll_z0();
        const std::vector<float>& hyp_ll_z0Err();
        const std::vector<float>& hyp_ll_z0corr();
        const std::vector<float>& hyp_lt_chi2();
        const std::vector<float>& hyp_lt_d0();
        const std::vector<float>& hyp_lt_d0Err();
        const std::vector<float>& hyp_lt_d0corr();
        const std::vector<float>& hyp_lt_dPhi_metMuonJESCorr();
        const std::vector<float>& hyp_lt_dPhi_muCorrMet();
        const std::vector<float>& hyp_lt_dPhi_tcMet();
        const std::vector<float>& hyp_lt_dPhi_unCorrMet();
        const std::vector<float>& hyp_lt_etaErr();
        const std::vector<float>& hyp_lt_ndof();
        const std::vector<float>& hyp_lt_phiErr();
        const std::vector<float>& hyp_lt_ptErr();
        const std::vector<float>& hyp_lt_z0();
        const std::vector<float>& hyp_lt_z0Err();
        const std::vector<float>& hyp_lt_z0corr();
        const std::vector<float>& hyp_mt2_metMuonJESCorr();
        const std::vector<float>& hyp_mt2_muCorrMet();
        const std::vector<float>& hyp_mt2_tcMet();
        const std::vector<float>& hyp_sumJetPt();
        const std::vector<float>& hyp_FVFit_chi2ndf();
        const std::vector<float>& hyp_FVFit_prob();
        const std::vector<float>& hyp_FVFit_v4cxx();
        const std::vector<float>& hyp_FVFit_v4cxy();
        const std::vector<float>& hyp_FVFit_v4cyy();
        const std::vector<float>& hyp_FVFit_v4czx();
        const std::vector<float>& hyp_FVFit_v4czy();
        const std::vector<float>& hyp_FVFit_v4czz();
        const std::vector<float>& jets_approximatefHPD();
        const std::vector<float>& jets_approximatefRBX();
        const std::vector<float>& jets_cor();
        const std::vector<float>& jets_corL1FastL2L3();
        const std::vector<float>& jets_corL1L2L3();
        const std::vector<float>& jets_emFrac();
        const std::vector<float>& jets_fHPD();
        const std::vector<float>& jets_fRBX();
        const std::vector<float>& jets_fSubDetector1();
        const std::vector<float>& jets_fSubDetector2();
        const std::vector<float>& jets_fSubDetector3();
        const std::vector<float>& jets_fSubDetector4();
        const std::vector<float>& jets_hitsInN90();
        const std::vector<float>& jets_n90Hits();
        const std::vector<float>& jets_nECALTowers();
        const std::vector<float>& jets_nHCALTowers();
        const std::vector<float>& jets_restrictedEMF();
        const std::vector<float>& mus_met_deltax();
        const std::vector<float>& mus_met_deltay();
        const std::vector<float>& mus_eledr();
        const std::vector<float>& mus_jetdr();
        const std::vector<float>& mus_isoR03_chpf_radial();
        const std::vector<float>& mus_isoR03_chpf_radialTight();
        const std::vector<float>& mus_isoR03_empf_radial();
        const std::vector<float>& mus_isoR03_empf_radialTight();
        const std::vector<float>& mus_isoR03_nhpf_radial();
        const std::vector<float>& mus_isoR03_nhpf_radialTight();
        const std::vector<float>& mus_isoR03_pf_radial();
        const std::vector<float>& mus_isoR03_pf_radialTight();
        const std::vector<float>& mus_backToBackCompat();
        const std::vector<float>& mus_caloCompatibility();
        const std::vector<float>& mus_chi2();
        const std::vector<float>& mus_chi2LocalMomentum();
        const std::vector<float>& mus_chi2LocalPosition();
        const std::vector<float>& mus_cosmicCompat();
        const std::vector<float>& mus_d0();
        const std::vector<float>& mus_d0Err();
        const std::vector<float>& mus_d0corr();
        const std::vector<float>& mus_e_em();
        const std::vector<float>& mus_e_emS9();
        const std::vector<float>& mus_e_had();
        const std::vector<float>& mus_e_hadS9();
        const std::vector<float>& mus_e_ho();
        const std::vector<float>& mus_e_hoS9();
        const std::vector<float>& mus_etaErr();
        const std::vector<float>& mus_gfit_chi2();
        const std::vector<float>& mus_gfit_d0();
        const std::vector<float>& mus_gfit_d0Err();
        const std::vector<float>& mus_gfit_d0corr();
        const std::vector<float>& mus_gfit_ndof();
        const std::vector<float>& mus_gfit_qoverp();
        const std::vector<float>& mus_gfit_qoverpError();
        const std::vector<float>& mus_gfit_z0();
        const std::vector<float>& mus_gfit_z0Err();
        const std::vector<float>& mus_gfit_z0corr();
        const std::vector<float>& mus_glbKink();
        const std::vector<float>& mus_glbTrackProbability();
        const std::vector<float>& mus_globalDeltaEtaPhi();
        const std::vector<float>& mus_ip3d();
        const std::vector<float>& mus_ip3derr();
        const std::vector<float>& mus_iso03_emEt();
        const std::vector<float>& mus_iso03_hadEt();
        const std::vector<float>& mus_iso03_hoEt();
        const std::vector<float>& mus_iso03_pf();
        const std::vector<float>& mus_iso03_sumPt();
        const std::vector<float>& mus_iso04_pf();
        const std::vector<float>& mus_iso05_emEt();
        const std::vector<float>& mus_iso05_hadEt();
        const std::vector<float>& mus_iso05_hoEt();
        const std::vector<float>& mus_iso05_sumPt();
        const std::vector<float>& mus_isoR03_pf_ChargedHadronPt();
        const std::vector<float>& mus_isoR03_pf_ChargedParticlePt();
        const std::vector<float>& mus_isoR03_pf_NeutralHadronEt();
        const std::vector<float>& mus_isoR03_pf_NeutralHadronEtHighThreshold();
        const std::vector<float>& mus_isoR03_pf_PUPt();
        const std::vector<float>& mus_isoR03_pf_PhotonEt();
        const std::vector<float>& mus_isoR03_pf_PhotonEtHighThreshold();
        const std::vector<float>& mus_isoR04_pf_ChargedHadronPt();
        const std::vector<float>& mus_isoR04_pf_ChargedParticlePt();
        const std::vector<float>& mus_isoR04_pf_NeutralHadronEt();
        const std::vector<float>& mus_isoR04_pf_NeutralHadronEtHighThreshold();
        const std::vector<float>& mus_isoR04_pf_PUPt();
        const std::vector<float>& mus_isoR04_pf_PhotonEt();
        const std::vector<float>& mus_isoR04_pf_PhotonEtHighThreshold();
        const std::vector<float>& mus_iso_ecalvetoDep();
        const std::vector<float>& mus_iso_hcalvetoDep();
        const std::vector<float>& mus_iso_hovetoDep();
        const std::vector<float>& mus_iso_trckvetoDep();
        const std::vector<float>& mus_localDistance();
        const std::vector<float>& mus_ndof();
        const std::vector<float>& mus_overlapCompat();
        const std::vector<float>& mus_pfdeltaP();
        const std::vector<float>& mus_pfecalE();
        const std::vector<float>& mus_pfhcalE();
        const std::vector<float>& mus_pfmva_emu();
        const std::vector<float>& mus_pfmva_epi();
        const std::vector<float>& mus_pfmva_nothing_gamma();
        const std::vector<float>& mus_pfmva_nothing_nh();
        const std::vector<float>& mus_pfmva_pimu();
        const std::vector<float>& mus_pfpS1E();
        const std::vector<float>& mus_pfpS2E();
        const std::vector<float>& mus_pfrawEcalE();
        const std::vector<float>& mus_pfrawHcalE();
        const std::vector<float>& mus_phiErr();
        const std::vector<float>& mus_ptErr();
        const std::vector<float>& mus_qoverp();
        const std::vector<float>& mus_qoverpError();
        const std::vector<float>& mus_segmCompatibility();
        const std::vector<float>& mus_staRelChi2();
        const std::vector<float>& mus_sta_chi2();
        const std::vector<float>& mus_sta_d0();
        const std::vector<float>& mus_sta_d0Err();
        const std::vector<float>& mus_sta_d0corr();
        const std::vector<float>& mus_sta_ndof();
        const std::vector<float>& mus_sta_qoverp();
        const std::vector<float>& mus_sta_qoverpError();
        const std::vector<float>& mus_sta_z0();
        const std::vector<float>& mus_sta_z0Err();
        const std::vector<float>& mus_sta_z0corr();
        const std::vector<float>& mus_timeAtIpInOut();
        const std::vector<float>& mus_timeAtIpInOutErr();
        const std::vector<float>& mus_timeAtIpOutIn();
        const std::vector<float>& mus_timeAtIpOutInErr();
        const std::vector<float>& mus_timeCompat();
        const std::vector<float>& mus_trkKink();
        const std::vector<float>& mus_trkRelChi2();
        const std::vector<float>& mus_vertexCompat();
        const std::vector<float>& mus_vertexphi();
        const std::vector<float>& mus_z0();
        const std::vector<float>& mus_z0Err();
        const std::vector<float>& mus_z0corr();
        const std::vector<float>& pfjets_mvavalue();
        const std::vector<float>& pfjets_full53xmva_beta();
        const std::vector<float>& pfjets_full53xmva_betaStar();
        const std::vector<float>& pfjets_full53xmva_d0();
        const std::vector<float>& pfjets_full53xmva_dRMean();
        const std::vector<float>& pfjets_full53xmva_dZ();
        const std::vector<float>& pfjets_full53xmva_frac01();
        const std::vector<float>& pfjets_full53xmva_frac02();
        const std::vector<float>& pfjets_full53xmva_frac03();
        const std::vector<float>& pfjets_full53xmva_frac04();
        const std::vector<float>& pfjets_full53xmva_frac05();
        const std::vector<float>& pfjets_full53xmva_nCharged();
        const std::vector<float>& pfjets_full53xmva_nNeutrals();
        const std::vector<float>& pfjets_full53xmva_nvtx();
        const std::vector<float>& pfjets_full53xmvavalue();
        const std::vector<float>& pfjets_full5xmvavalue();
        const std::vector<float>& trkjet_met();
        const std::vector<float>& trkjet_metPhi();
        const std::vector<float>& trkjet_sumet();
        const std::vector<float>& trk_met();
        const std::vector<float>& trk_metPhi();
        const std::vector<float>& trk_sumet();
        const std::vector<float>& pfcands_deltaP();
        const std::vector<float>& pfcands_ecalE();
        const std::vector<float>& pfcands_hcalE();
        const std::vector<float>& pfcands_mva_emu();
        const std::vector<float>& pfcands_mva_epi();
        const std::vector<float>& pfcands_mva_nothing_gamma();
        const std::vector<float>& pfcands_mva_nothing_nh();
        const std::vector<float>& pfcands_mva_pimu();
        const std::vector<float>& pfcands_pS1E();
        const std::vector<float>& pfcands_pS2E();
        const std::vector<float>& pfcands_rawEcalE();
        const std::vector<float>& pfcands_rawHcalE();
        const std::vector<float>& pfels_deltaP();
        const std::vector<float>& pfels_ecalE();
        const std::vector<float>& pfels_hcalE();
        const std::vector<float>& pfels_iso04ChargedHadrons();
        const std::vector<float>& pfels_iso04NeutralHadrons();
        const std::vector<float>& pfels_iso04Photons();
        const std::vector<float>& pfels_isoChargedHadrons();
        const std::vector<float>& pfels_isoNeutralHadrons();
        const std::vector<float>& pfels_isoPhotons();
        const std::vector<float>& pfels_mva_emu();
        const std::vector<float>& pfels_mva_epi();
        const std::vector<float>& pfels_mva_nothing_gamma();
        const std::vector<float>& pfels_mva_nothing_nh();
        const std::vector<float>& pfels_mva_pimu();
        const std::vector<float>& pfels_pS1E();
        const std::vector<float>& pfels_pS2E();
        const std::vector<float>& pfels_rawEcalE();
        const std::vector<float>& pfels_rawHcalE();
        const std::vector<float>& pfjets_area();
        const std::vector<float>& pfjets_chargedEmE();
        const std::vector<float>& pfjets_chargedHadronE();
        const std::vector<float>& pfjets_cor();
        const std::vector<float>& pfjets_corL1Fast();
        const std::vector<float>& pfjets_corL1FastL2L3();
        const std::vector<float>& pfjets_corL1FastL2L3residual();
        const std::vector<float>& pfjets_corL1L2L3();
        const std::vector<float>& pfjets_electronE();
        const std::vector<float>& pfjets_hfEmE();
        const std::vector<float>& pfjets_hfHadronE();
        const std::vector<float>& pfjets_muonE();
        const std::vector<float>& pfjets_neutralEmE();
        const std::vector<float>& pfjets_neutralHadronE();
        const std::vector<float>& pfjets_photonE();
        const std::vector<float>& pfmus_deltaP();
        const std::vector<float>& pfmus_ecalE();
        const std::vector<float>& pfmus_hcalE();
        const std::vector<float>& pfmus_iso04ChargedHadrons();
        const std::vector<float>& pfmus_iso04NeutralHadrons();
        const std::vector<float>& pfmus_iso04Photons();
        const std::vector<float>& pfmus_isoChargedHadrons();
        const std::vector<float>& pfmus_isoNeutralHadrons();
        const std::vector<float>& pfmus_isoPhotons();
        const std::vector<float>& pfmus_mva_emu();
        const std::vector<float>& pfmus_mva_epi();
        const std::vector<float>& pfmus_mva_nothing_gamma();
        const std::vector<float>& pfmus_mva_nothing_nh();
        const std::vector<float>& pfmus_mva_pimu();
        const std::vector<float>& pfmus_pS1E();
        const std::vector<float>& pfmus_pS2E();
        const std::vector<float>& pfmus_rawEcalE();
        const std::vector<float>& pfmus_rawHcalE();
        const std::vector<float>& taus_pf_againstElectronDeadECAL();
        const std::vector<float>& taus_pf_againstElectronLoose();
        const std::vector<float>& taus_pf_againstElectronLooseMVA2();
        const std::vector<float>& taus_pf_againstElectronLooseMVA3();
        const std::vector<float>& taus_pf_againstElectronMVA();
        const std::vector<float>& taus_pf_againstElectronMVA2category();
        const std::vector<float>& taus_pf_againstElectronMVA2raw();
        const std::vector<float>& taus_pf_againstElectronMVA3category();
        const std::vector<float>& taus_pf_againstElectronMVA3raw();
        const std::vector<float>& taus_pf_againstElectronMedium();
        const std::vector<float>& taus_pf_againstElectronMediumMVA2();
        const std::vector<float>& taus_pf_againstElectronMediumMVA3();
        const std::vector<float>& taus_pf_againstElectronTight();
        const std::vector<float>& taus_pf_againstElectronTightMVA2();
        const std::vector<float>& taus_pf_againstElectronTightMVA3();
        const std::vector<float>& taus_pf_againstElectronVLooseMVA2();
        const std::vector<float>& taus_pf_againstElectronVTightMVA3();
        const std::vector<float>& taus_pf_againstMuonLoose();
        const std::vector<float>& taus_pf_againstMuonLoose2();
        const std::vector<float>& taus_pf_againstMuonMedium();
        const std::vector<float>& taus_pf_againstMuonMedium2();
        const std::vector<float>& taus_pf_againstMuonTight();
        const std::vector<float>& taus_pf_againstMuonTight2();
        const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw();
        const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw3Hits();
        const std::vector<float>& taus_pf_byDecayModeFinding();
        const std::vector<float>& taus_pf_byIsolationMVA2raw();
        const std::vector<float>& taus_pf_byIsolationMVAraw();
        const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr3Hits();
        const std::vector<float>& taus_pf_byLooseIsolationMVA();
        const std::vector<float>& taus_pf_byLooseIsolationMVA2();
        const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr3Hits();
        const std::vector<float>& taus_pf_byMediumIsolationMVA();
        const std::vector<float>& taus_pf_byMediumIsolationMVA2();
        const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr3Hits();
        const std::vector<float>& taus_pf_byTightIsolationMVA();
        const std::vector<float>& taus_pf_byTightIsolationMVA2();
        const std::vector<float>& taus_pf_byVLooseCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& photons_e1x5();
        const std::vector<float>& photons_e2x5Max();
        const std::vector<float>& photons_e3x3();
        const std::vector<float>& photons_e5x5();
        const std::vector<float>& photons_ecalIso03();
        const std::vector<float>& photons_ecalIso04();
        const std::vector<float>& photons_hOverE();
        const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR03();
        const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR04();
        const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR03();
        const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR04();
        const std::vector<float>& photons_hcalIso03();
        const std::vector<float>& photons_hcalIso04();
        const std::vector<float>& photons_hcalTowerSumEtBcConeDR03();
        const std::vector<float>& photons_hcalTowerSumEtBcConeDR04();
        const std::vector<float>& photons_ntkIsoHollow03();
        const std::vector<float>& photons_ntkIsoHollow04();
        const std::vector<float>& photons_ntkIsoSolid03();
        const std::vector<float>& photons_ntkIsoSolid04();
        const std::vector<float>& photons_sigmaEtaEta();
        const std::vector<float>& photons_sigmaIEtaIEta();
        const std::vector<float>& photons_swissSeed();
        const std::vector<float>& photons_tkIsoHollow03();
        const std::vector<float>& photons_tkIsoHollow04();
        const std::vector<float>& photons_tkIsoSolid03();
        const std::vector<float>& photons_tkIsoSolid04();
        const std::vector<float>& puInfo_trueNumInteractions();
        const std::vector<float>& convs_chi2();
        const std::vector<float>& convs_dl();
        const std::vector<float>& convs_ndof();
        const std::vector<float>& sparm_values();
        const std::vector<float>& scs_clustersSize();
        const std::vector<float>& scs_crystalsSize();
        const std::vector<float>& scs_e1x3();
        const std::vector<float>& scs_e1x5();
        const std::vector<float>& scs_e2nd();
        const std::vector<float>& scs_e2x2();
        const std::vector<float>& scs_e2x5Max();
        const std::vector<float>& scs_e3x1();
        const std::vector<float>& scs_e3x2();
        const std::vector<float>& scs_e3x3();
        const std::vector<float>& scs_e4x4();
        const std::vector<float>& scs_e5x5();
        const std::vector<float>& scs_eMax();
        const std::vector<float>& scs_eSeed();
        const std::vector<float>& scs_energy();
        const std::vector<float>& scs_eta();
        const std::vector<float>& scs_hoe();
        const std::vector<float>& scs_laserCorMax();
        const std::vector<float>& scs_laserCorMean();
        const std::vector<float>& scs_laserCorSeed();
        const std::vector<float>& scs_phi();
        const std::vector<float>& scs_preshowerEnergy();
        const std::vector<float>& scs_rawEnergy();
        const std::vector<float>& scs_sigmaEtaEta();
        const std::vector<float>& scs_sigmaEtaPhi();
        const std::vector<float>& scs_sigmaIEtaIEta();
        const std::vector<float>& scs_sigmaIEtaIEtaSC();
        const std::vector<float>& scs_sigmaIEtaIPhi();
        const std::vector<float>& scs_sigmaIEtaIPhiSC();
        const std::vector<float>& scs_sigmaIPhiIPhi();
        const std::vector<float>& scs_sigmaIPhiIPhiSC();
        const std::vector<float>& scs_sigmaPhiPhi();
        const std::vector<float>& scs_timeSeed();
        const std::vector<float>& svs_anglePV();
        const std::vector<float>& svs_chi2();
        const std::vector<float>& svs_dist3Dsig();
        const std::vector<float>& svs_dist3Dval();
        const std::vector<float>& svs_distXYsig();
        const std::vector<float>& svs_distXYval();
        const std::vector<float>& svs_ndof();
        const std::vector<float>& svs_prob();
        const std::vector<float>& svs_xError();
        const std::vector<float>& svs_yError();
        const std::vector<float>& svs_zError();
        const std::vector<float>& mus_tcmet_deltax();
        const std::vector<float>& mus_tcmet_deltay();
        const std::vector<float>& pfcands_dzpv();
        const std::vector<float>& pfcands_trkiso();
        const std::vector<float>& trks_chi2();
        const std::vector<float>& trks_d0();
        const std::vector<float>& trks_d0Err();
        const std::vector<float>& trks_d0corr();
        const std::vector<float>& trks_d0corrPhi();
        const std::vector<float>& trks_d0phiCov();
        const std::vector<float>& trks_etaErr();
        const std::vector<float>& trks_layer1_charge();
        const std::vector<float>& trks_ndof();
        const std::vector<float>& trks_phiErr();
        const std::vector<float>& trks_ptErr();
        const std::vector<float>& trks_validFraction();
        const std::vector<float>& trks_z0();
        const std::vector<float>& trks_z0Err();
        const std::vector<float>& trks_z0corr();
        const std::vector<float>& trkjets_cor();
        const std::vector<float>& trks_d0Errvtx();
        const std::vector<float>& trks_d0vtx();
        const std::vector<float>& vtxs_chi2();
        const std::vector<float>& vtxs_ndof();
        const std::vector<float>& vtxs_sumpt();
        const std::vector<float>& vtxs_xError();
        const std::vector<float>& vtxs_yError();
        const std::vector<float>& vtxs_zError();
        const std::vector<float>& bsvtxs_chi2();
        const std::vector<float>& bsvtxs_ndof();
        const std::vector<float>& bsvtxs_sumpt();
        const std::vector<float>& bsvtxs_xError();
        const std::vector<float>& bsvtxs_yError();
        const std::vector<float>& bsvtxs_zError();
        const std::vector<std::vector<float> >& els_convs_dcot();
        const std::vector<std::vector<float> >& els_convs_dist();
        const std::vector<std::vector<float> >& els_convs_radius();
        const std::vector<std::vector<float> >& mus_stationShowerDeltaR();
        const std::vector<std::vector<float> >& mus_stationShowerSizeT();
        const std::vector<std::vector<float> >& puInfo_instLumi();
        const std::vector<std::vector<float> >& puInfo_sump_highpt();
        const std::vector<std::vector<float> >& puInfo_sumpt_lowpt();
        const std::vector<std::vector<float> >& puInfo_zpositions();
        const std::vector<std::vector<float> >& vtxs_covMatrix();
        const std::vector<std::vector<float> >& bsvtxs_covMatrix();
        const int& evt_cscLooseHaloId();
        const int& evt_cscTightHaloId();
        const int& evt_ecalLooseHaloId();
        const int& evt_ecalTightHaloId();
        const int& evt_extremeTightHaloId();
        const int& evt_globalLooseHaloId();
        const int& evt_globalTightHaloId();
        const int& evt_hcalLooseHaloId();
        const int& evt_hcalTightHaloId();
        const int& evt_looseHaloId();
        const int& evt_nHaloLikeTracks();
        const int& evt_nHaloTriggerCandidates();
        const int& evt_tightHaloId();
        const int& evt_bsType();
        const int& evt_bunchCrossing();
        const int& evt_experimentType();
        const int& evt_isRealData();
        const int& evt_orbitNumber();
        const int& evt_storeNumber();
        const int& hcalnoise_GetRecHitCount();
        const int& hcalnoise_GetRecHitCount15();
        const int& hcalnoise_maxHPDHits();
        const int& hcalnoise_maxHPDNoOtherHits();
        const int& hcalnoise_maxRBXHits();
        const int& hcalnoise_maxZeros();
        const int& hcalnoise_noiseFilterStatus();
        const int& hcalnoise_noiseType();
        const int& hcalnoise_num10GeVHits();
        const int& hcalnoise_num25GeVHits();
        const int& hcalnoise_numFlatNoiseChannels();
        const int& hcalnoise_numIsolatedNoiseChannels();
        const int& hcalnoise_numProblematicRBXs();
        const int& hcalnoise_numSpikeNoiseChannels();
        const int& hcalnoise_numTS4TS5NoiseChannels();
        const int& hcalnoise_numTriangleNoiseChannels();
        const int& hcalnoise_passHighLevelNoiseFilter();
        const int& hcalnoise_passLooseNoiseFilter();
        const int& hcalnoise_passTightNoiseFilter();
        const int& l1_nemiso();
        const int& l1_nemnoiso();
        const int& l1_njetsc();
        const int& l1_njetsf();
        const int& l1_njetst();
        const int& l1_nmus();
        const int& ls_lumiSecQual();
        const int& pdfinfo_id1();
        const int& pdfinfo_id2();
        const int& sparm_subProcessId();
        const std::vector<int>& evt_ecaliPhiSuspects();
        const std::vector<int>& evt_globaliPhiSuspects();
        const std::vector<int>& evt_hcaliPhiSuspects();
        const std::vector<int>& els_mc3_id();
        const std::vector<int>& els_mc3idx();
        const std::vector<int>& els_mc3_motherid();
        const std::vector<int>& els_mc3_motheridx();
        const std::vector<int>& els_mc_id();
        const std::vector<int>& els_mcidx();
        const std::vector<int>& els_mc_motherid();
        const std::vector<int>& jets_mc3_id();
        const std::vector<int>& jets_mc3idx();
        const std::vector<int>& jets_mc_gpidx();
        const std::vector<int>& jets_mc_id();
        const std::vector<int>& jets_mcidx();
        const std::vector<int>& jets_mc_motherid();
        const std::vector<int>& mus_mc3_id();
        const std::vector<int>& mus_mc3idx();
        const std::vector<int>& mus_mc3_motherid();
        const std::vector<int>& mus_mc3_motheridx();
        const std::vector<int>& mus_mc_id();
        const std::vector<int>& mus_mcidx();
        const std::vector<int>& mus_mc_motherid();
        const std::vector<int>& pfjets_mc3_id();
        const std::vector<int>& pfjets_mc3idx();
        const std::vector<int>& pfjets_mc_gpidx();
        const std::vector<int>& pfjets_mc_id();
        const std::vector<int>& pfjets_mcidx();
        const std::vector<int>& pfjets_mc_motherid();
        const std::vector<int>& photons_mc3_id();
        const std::vector<int>& photons_mc3idx();
        const std::vector<int>& photons_mc3_motherid();
        const std::vector<int>& photons_mc3_motheridx();
        const std::vector<int>& photons_mc_id();
        const std::vector<int>& photons_mcidx();
        const std::vector<int>& photons_mc_motherid();
        const std::vector<int>& trk_mc3_id();
        const std::vector<int>& trk_mc3idx();
        const std::vector<int>& trk_mc3_motherid();
        const std::vector<int>& trk_mc3_motheridx();
        const std::vector<int>& trk_mc_id();
        const std::vector<int>& trk_mcidx();
        const std::vector<int>& trk_mc_motherid();
        const std::vector<int>& els_closestJet();
        const std::vector<int>& els_closestMuon();
        const std::vector<int>& els_pfelsidx();
        const std::vector<int>& els_category();
        const std::vector<int>& els_charge();
        const std::vector<int>& els_ckf_laywithmeas();
        const std::vector<int>& els_class();
        const std::vector<int>& els_conv_delMissHits();
        const std::vector<int>& els_conv_flag();
        const std::vector<int>& els_conv_gsftkidx();
        const std::vector<int>& els_conv_old_delMissHits();
        const std::vector<int>& els_conv_old_flag();
        const std::vector<int>& els_conv_old_gsftkidx();
        const std::vector<int>& els_conv_old_tkidx();
        const std::vector<int>& els_conv_tkidx();
        const std::vector<int>& els_exp_innerlayers();
        const std::vector<int>& els_exp_outerlayers();
        const std::vector<int>& els_fiduciality();
        const std::vector<int>& els_gsftrkidx();
        const std::vector<int>& els_layer1_det();
        const std::vector<int>& els_layer1_layer();
        const std::vector<int>& els_layer1_sizerphi();
        const std::vector<int>& els_layer1_sizerz();
        const std::vector<int>& els_lostHits();
        const std::vector<int>& els_lost_pixelhits();
        const std::vector<int>& els_nSeed();
        const std::vector<int>& els_sccharge();
        const std::vector<int>& els_scindex();
        const std::vector<int>& els_trk_charge();
        const std::vector<int>& els_trkidx();
        const std::vector<int>& els_type();
        const std::vector<int>& els_validHits();
        const std::vector<int>& els_valid_pixelhits();
        const std::vector<int>& genps_id();
        const std::vector<int>& genps_id_mother();
        const std::vector<int>& genps_status();
        const std::vector<int>& gsftrks_charge();
        const std::vector<int>& gsftrks_exp_innerlayers();
        const std::vector<int>& gsftrks_exp_outerlayers();
        const std::vector<int>& gsftrks_layer1_det();
        const std::vector<int>& gsftrks_layer1_layer();
        const std::vector<int>& gsftrks_layer1_sizerphi();
        const std::vector<int>& gsftrks_layer1_sizerz();
        const std::vector<int>& gsftrks_lostHits();
        const std::vector<int>& gsftrks_lost_pixelhits();
        const std::vector<int>& gsftrks_nlayers();
        const std::vector<int>& gsftrks_nlayers3D();
        const std::vector<int>& gsftrks_nlayersLost();
        const std::vector<int>& gsftrks_validHits();
        const std::vector<int>& gsftrks_valid_pixelhits();
        const std::vector<int>& hyp_ll_charge();
        const std::vector<int>& hyp_ll_id();
        const std::vector<int>& hyp_ll_index();
        const std::vector<int>& hyp_ll_lostHits();
        const std::vector<int>& hyp_ll_validHits();
        const std::vector<int>& hyp_lt_charge();
        const std::vector<int>& hyp_lt_id();
        const std::vector<int>& hyp_lt_index();
        const std::vector<int>& hyp_lt_lostHits();
        const std::vector<int>& hyp_lt_validHits();
        const std::vector<int>& hyp_njets();
        const std::vector<int>& hyp_nojets();
        const std::vector<int>& hyp_type();
        const std::vector<int>& hyp_FVFit_ndf();
        const std::vector<int>& hyp_FVFit_status();
        const std::vector<int>& hyp_ll_mc_id();
        const std::vector<int>& hyp_ll_mc_motherid();
        const std::vector<int>& hyp_lt_mc_id();
        const std::vector<int>& hyp_lt_mc_motherid();
        const std::vector<int>& pfjets_mcflavorAlgo();
        const std::vector<int>& pfjets_mcflavorPhys();
        const std::vector<int>& jets_closestElectron();
        const std::vector<int>& jets_closestMuon();
        const std::vector<int>& l1_emiso_ieta();
        const std::vector<int>& l1_emiso_iphi();
        const std::vector<int>& l1_emiso_rawId();
        const std::vector<int>& l1_emiso_type();
        const std::vector<int>& l1_emnoiso_ieta();
        const std::vector<int>& l1_emnoiso_iphi();
        const std::vector<int>& l1_emnoiso_rawId();
        const std::vector<int>& l1_emnoiso_type();
        const std::vector<int>& l1_jetsc_ieta();
        const std::vector<int>& l1_jetsc_iphi();
        const std::vector<int>& l1_jetsc_rawId();
        const std::vector<int>& l1_jetsc_type();
        const std::vector<int>& l1_jetsf_ieta();
        const std::vector<int>& l1_jetsf_iphi();
        const std::vector<int>& l1_jetsf_rawId();
        const std::vector<int>& l1_jetsf_type();
        const std::vector<int>& l1_jetst_ieta();
        const std::vector<int>& l1_jetst_iphi();
        const std::vector<int>& l1_jetst_rawId();
        const std::vector<int>& l1_jetst_type();
        const std::vector<int>& l1_mus_flags();
        const std::vector<int>& l1_mus_q();
        const std::vector<int>& l1_mus_qual();
        const std::vector<int>& l1_mus_qualFlags();
        const std::vector<int>& mus_met_flag();
        const std::vector<int>& mus_closestEle();
        const std::vector<int>& mus_closestJet();
        const std::vector<int>& mus_pfmusidx();
        const std::vector<int>& mus_charge();
        const std::vector<int>& mus_gfit_validHits();
        const std::vector<int>& mus_gfit_validSTAHits();
        const std::vector<int>& mus_gfit_validSiHits();
        const std::vector<int>& mus_goodmask();
        const std::vector<int>& mus_iso03_ntrk();
        const std::vector<int>& mus_iso05_ntrk();
        const std::vector<int>& mus_lostHits();
        const std::vector<int>& mus_muonBestTrackType();
        const std::vector<int>& mus_nOverlaps();
        const std::vector<int>& mus_nmatches();
        const std::vector<int>& mus_numberOfMatchedStations();
        const std::vector<int>& mus_overlap0();
        const std::vector<int>& mus_overlap1();
        const std::vector<int>& mus_pfcharge();
        const std::vector<int>& mus_pfflag();
        const std::vector<int>& mus_pfparticleId();
        const std::vector<int>& mus_pid_PFMuon();
        const std::vector<int>& mus_pid_TM2DCompatibilityLoose();
        const std::vector<int>& mus_pid_TM2DCompatibilityTight();
        const std::vector<int>& mus_pid_TMLastStationLoose();
        const std::vector<int>& mus_pid_TMLastStationTight();
        const std::vector<int>& mus_sta_validHits();
        const std::vector<int>& mus_timeDirection();
        const std::vector<int>& mus_timeNumStationsUsed();
        const std::vector<int>& mus_trk_charge();
        const std::vector<int>& mus_trkidx();
        const std::vector<int>& mus_type();
        const std::vector<int>& mus_validHits();
        const std::vector<int>& pfcands_charge();
        const std::vector<int>& pfcands_flag();
        const std::vector<int>& pfcands_particleId();
        const std::vector<int>& pfcands_pfelsidx();
        const std::vector<int>& pfcands_pfmusidx();
        const std::vector<int>& pfcands_trkidx();
        const std::vector<int>& pfcands_vtxidx();
        const std::vector<int>& pfels_elsidx();
        const std::vector<int>& pfels_charge();
        const std::vector<int>& pfels_flag();
        const std::vector<int>& pfels_particleId();
        const std::vector<int>& pfjets_chargedHadronMultiplicity();
        const std::vector<int>& pfjets_chargedMultiplicity();
        const std::vector<int>& pfjets_electronMultiplicity();
        const std::vector<int>& pfjets_hfEmMultiplicity();
        const std::vector<int>& pfjets_hfHadronMultiplicity();
        const std::vector<int>& pfjets_muonMultiplicity();
        const std::vector<int>& pfjets_neutralHadronMultiplicity();
        const std::vector<int>& pfjets_neutralMultiplicity();
        const std::vector<int>& pfjets_photonMultiplicity();
        const std::vector<int>& pfmus_musidx();
        const std::vector<int>& pfmus_charge();
        const std::vector<int>& pfmus_flag();
        const std::vector<int>& pfmus_particleId();
        const std::vector<int>& taus_pf_charge();
        const std::vector<int>& taus_pf_pfjetIndex();
        const std::vector<int>& photons_fiduciality();
        const std::vector<int>& photons_scindex();
        const std::vector<int>& puInfo_bunchCrossing();
        const std::vector<int>& puInfo_nPUvertices();
        const std::vector<int>& convs_algo();
        const std::vector<int>& convs_isConverted();
        const std::vector<int>& convs_quality();
        const std::vector<int>& scs_detIdSeed();
        const std::vector<int>& scs_elsidx();
        const std::vector<int>& scs_severitySeed();
        const std::vector<int>& svs_isKs();
        const std::vector<int>& svs_isLambda();
        const std::vector<int>& svs_mc3_id();
        const std::vector<int>& svs_nTrks();
        const std::vector<int>& mus_tcmet_flag();
        const std::vector<int>& trks_algo();
        const std::vector<int>& trks_charge();
        const std::vector<int>& trks_exp_innerlayers();
        const std::vector<int>& trks_exp_outerlayers();
        const std::vector<int>& trks_layer1_det();
        const std::vector<int>& trks_layer1_layer();
        const std::vector<int>& trks_layer1_sizerphi();
        const std::vector<int>& trks_layer1_sizerz();
        const std::vector<int>& trks_lostHits();
        const std::vector<int>& trks_lost_pixelhits();
        const std::vector<int>& trks_nLoops();
        const std::vector<int>& trks_nlayers();
        const std::vector<int>& trks_nlayers3D();
        const std::vector<int>& trks_nlayersLost();
        const std::vector<int>& trks_pvidx0();
        const std::vector<int>& trks_pvidx1();
        const std::vector<int>& trks_qualityMask();
        const std::vector<int>& trks_validHits();
        const std::vector<int>& trks_valid_pixelhits();
        const std::vector<int>& trks_elsidx();
        const std::vector<int>& trk_musidx();
        const std::vector<int>& trkjets_ntrks();
        const std::vector<int>& trkjets_vtxs_idx();
        const std::vector<int>& vtxs_isFake();
        const std::vector<int>& vtxs_isValid();
        const std::vector<int>& vtxs_tracksSize();
        const std::vector<int>& bsvtxs_isFake();
        const std::vector<int>& bsvtxs_isValid();
        const std::vector<int>& bsvtxs_tracksSize();
        const std::vector<std::vector<int> >& els_convs_delMissHits();
        const std::vector<std::vector<int> >& els_convs_flag();
        const std::vector<std::vector<int> >& els_convs_gsftkidx();
        const std::vector<std::vector<int> >& els_convs_tkidx();
        const std::vector<std::vector<int> >& genps_lepdaughter_id();
        const std::vector<std::vector<int> >& genps_lepdaughter_idx();
        const std::vector<std::vector<int> >& hlt_trigObjs_id();
        const std::vector<std::vector<int> >& hyp_jets_idx();
        const std::vector<std::vector<int> >& hyp_other_jets_idx();
        const std::vector<std::vector<int> >& mus_nStationCorrelatedHits();
        const std::vector<std::vector<int> >& mus_nStationHits();
        const std::vector<std::vector<int> >& pfjets_pfcandIndicies();
        const std::vector<std::vector<int> >& taus_pf_pfcandIndicies();
        const std::vector<std::vector<int> >& puInfo_ntrks_highpt();
        const std::vector<std::vector<int> >& puInfo_ntrks_lowpt();
        const std::vector<std::vector<int> >& convs_nHitsBeforeVtx();
        const std::vector<std::vector<int> >& convs_tkalgo();
        const std::vector<std::vector<int> >& convs_tkidx();
        const unsigned int& els_HLT_Ele17_Ele8_L1sL1DoubleEG137_version();
        const unsigned int& els_HLT_Ele17_Ele8_LeadingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_Mass50_LeadingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_Mass50_TrailingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_TrailingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_version();
        const unsigned int& els_HLT_Ele20_SC4_Mass50_LeadingLeg_version();
        const unsigned int& els_HLT_Ele20_SC4_Mass50_TrailingLeg_version();
        const unsigned int& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_version();
        const unsigned int& els_HLT_Ele27_WP80_version();
        const unsigned int& els_HLT_Ele32_SC17_Mass50_LeadingLeg_version();
        const unsigned int& els_HLT_Ele32_SC17_Mass50_TrailingLeg_version();
        const unsigned int& els_HLT_Mu17_Ele8_TrailingLeg_version();
        const unsigned int& els_HLT_Mu17_Ele8_version();
        const unsigned int& els_HLT_Mu8_Ele17_version();
        const unsigned int& evt_nels();
        const unsigned int& evt_detectorStatus();
        const unsigned int& evt_event();
        const unsigned int& evt_lumiBlock();
        const unsigned int& evt_run();
        const unsigned int& genps_flavorHistoryFilterResult();
        const unsigned int& evt_ngenjets();
        const unsigned int& genps_signalProcessID();
        const unsigned int& evt_njets();
        const unsigned int& l1_bits1();
        const unsigned int& l1_bits2();
        const unsigned int& l1_bits3();
        const unsigned int& l1_bits4();
        const unsigned int& l1_techbits1();
        const unsigned int& l1_techbits2();
        const unsigned int& ls_lsNumber();
        const unsigned int& ls_numOrbit();
        const unsigned int& ls_startOrbit();
        const unsigned int& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_version();
        const unsigned int& mus_HLT_IsoMu24_eta2p1_version();
        const unsigned int& mus_HLT_Mu17_Ele8_LeadingLeg_version();
        const unsigned int& mus_HLT_Mu17_Ele8_version();
        const unsigned int& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_version();
        const unsigned int& mus_HLT_Mu17_Mu8_LeadingLeg_version();
        const unsigned int& mus_HLT_Mu17_Mu8_TrailingLeg_version();
        const unsigned int& mus_HLT_Mu17_Mu8_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_LeadingLeg_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLeg_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_version();
        const unsigned int& mus_HLT_Mu8_Ele17_TrailingLeg_version();
        const unsigned int& mus_HLT_Mu8_Ele17_version();
        const unsigned int& evt_nphotons();
        const unsigned int& evt_ecalRecoStatus();
        const unsigned int& evt_nscs();
        const unsigned int& evt_ntrkjets();
        const unsigned int& evt_nvtxs();
        const unsigned int& evt_nbsvtxs();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_L1sL1DoubleEG137();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Ele27_WP80();
        const std::vector<unsigned int>& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22();
        const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Mu17_Ele8();
        const std::vector<unsigned int>& els_HLT_Mu17_Ele8_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Mu8_Ele17();
        const std::vector<unsigned int>& els_id2012ext_loose();
        const std::vector<unsigned int>& els_id2012ext_medium();
        const std::vector<unsigned int>& els_id2012ext_tight();
        const std::vector<unsigned int>& els_id2012ext_veto();
        const std::vector<unsigned int>& els_id2012_loose();
        const std::vector<unsigned int>& els_id2012_medium();
        const std::vector<unsigned int>& els_id2012_tight();
        const std::vector<unsigned int>& els_id2012_veto();
        const std::vector<unsigned int>& hlt_prescales();
        const std::vector<unsigned int>& l1_prescales();
        const std::vector<unsigned int>& l1_techtrigprescales();
        const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1();
        const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1();
        const std::vector<unsigned int>& mus_HLT_Mu17_Ele8();
        const std::vector<unsigned int>& mus_HLT_Mu17_Ele8_LeadingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_LeadingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_TrailingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_LeadingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered();
        const std::vector<unsigned int>& mus_HLT_Mu8_Ele17();
        const std::vector<unsigned int>& mus_HLT_Mu8_Ele17_TrailingLeg();
        const unsigned long long& evt_timestamp();
        const int& evt_nEvts();
        const float& evt_filt_eff();

    private:
    
        // handles
        tas::Handle< TBits > hlt_bits_handle;
        tas::Handle< std::vector<TString> > evt_CMS2tag_handle;
        tas::Handle< std::vector<TString> > evt_dataset_handle;
        tas::Handle< std::vector<TString> > hlt_trigNames_handle;
        tas::Handle< std::vector<TString> > l1_techtrigNames_handle;
        tas::Handle< std::vector<TString> > l1_trigNames_handle;
        tas::Handle< std::vector<TString> > evt_errCategory_handle;
        tas::Handle< std::vector<TString> > evt_errModule_handle;
        tas::Handle< std::vector<TString> > evt_errSeverity_handle;
        tas::Handle< std::vector<TString> > sparm_comment_handle;
        tas::Handle< std::vector<TString> > sparm_names_handle;
        tas::Handle< bool > evt_eventHasHalo_handle;
        tas::Handle< bool > hcalnoise_HasBadRBXTS4TS5_handle;
        tas::Handle< bool > ls_isValid_handle;
        tas::Handle< bool > filt_ecalBE_handle;
        tas::Handle< bool > filt_ecalDR_handle;
        tas::Handle< bool > filt_ecalLaser_handle;
        tas::Handle< bool > filt_ecalTP_handle;
        tas::Handle< bool > filt_eeBadSc_handle;
        tas::Handle< bool > filt_greedyMuon_handle;
        tas::Handle< bool > filt_hcalLaser_handle;
        tas::Handle< bool > filt_inconsistentMuon_handle;
        tas::Handle< bool > filt_jetIDFailure_handle;
        tas::Handle< bool > filt_multiEvent_handle;
        tas::Handle< bool > filt_trackingFailure_handle;
        tas::Handle< bool > evt_hbheFilter_handle;
        tas::Handle< std::vector<bool> > els_conv_vtx_flag_handle;
        tas::Handle< std::vector<bool> > els_passingMvaPreselection_handle;
        tas::Handle< std::vector<bool> > els_passingPflowPreselection_handle;
        tas::Handle< std::vector<bool> > mus_isRPCMuon_handle;
        tas::Handle< std::vector<bool> > mus_tightMatch_handle;
        tas::Handle< std::vector<bool> > mus_updatedSta_handle;
        tas::Handle< std::vector<bool> > pfcands_isMuIso_handle;
        tas::Handle< std::vector<bool> > photons_haspixelSeed_handle;
        tas::Handle< std::vector<double> > jets_closestElectron_DR_handle;
        tas::Handle< std::vector<double> > jets_closestMuon_DR_handle;
        tas::Handle< float > evt_bs_Xwidth_handle;
        tas::Handle< float > evt_bs_XwidthErr_handle;
        tas::Handle< float > evt_bs_Ywidth_handle;
        tas::Handle< float > evt_bs_YwidthErr_handle;
        tas::Handle< float > evt_bs_dxdz_handle;
        tas::Handle< float > evt_bs_dxdzErr_handle;
        tas::Handle< float > evt_bs_dydz_handle;
        tas::Handle< float > evt_bs_dydzErr_handle;
        tas::Handle< float > evt_bs_sigmaZ_handle;
        tas::Handle< float > evt_bs_sigmaZErr_handle;
        tas::Handle< float > evt_bs_xErr_handle;
        tas::Handle< float > evt_bs_yErr_handle;
        tas::Handle< float > evt_bs_zErr_handle;
        tas::Handle< float > evt_bField_handle;
        tas::Handle< float > evt_rho_handle;
        tas::Handle< float > evt_rhoJEC_handle;
        tas::Handle< float > evt_fixgrid_all_rho_handle;
        tas::Handle< float > evt_fixgridfastjet_all_rho_handle;
        tas::Handle< float > evt_kfactor_handle;
        tas::Handle< float > evt_scale1fb_handle;
        tas::Handle< float > evt_xsec_excl_handle;
        tas::Handle< float > evt_xsec_incl_handle;
        tas::Handle< float > gen_met_handle;
        tas::Handle< float > gen_metPhi_handle;
        tas::Handle< float > genps_alphaQCD_handle;
        tas::Handle< float > genps_pthat_handle;
        tas::Handle< float > genps_qScale_handle;
        tas::Handle< float > genps_weight_handle;
        tas::Handle< float > gen_sumEt_handle;
        tas::Handle< float > hcalnoise_GetRecHitEnergy_handle;
        tas::Handle< float > hcalnoise_GetRecHitEnergy15_handle;
        tas::Handle< float > hcalnoise_GetTotalCalibCharge_handle;
        tas::Handle< float > hcalnoise_TS4TS5NoiseSumE_handle;
        tas::Handle< float > hcalnoise_TS4TS5NoiseSumEt_handle;
        tas::Handle< float > hcalnoise_eventChargeFraction_handle;
        tas::Handle< float > hcalnoise_eventEMEnergy_handle;
        tas::Handle< float > hcalnoise_eventEMFraction_handle;
        tas::Handle< float > hcalnoise_eventHadEnergy_handle;
        tas::Handle< float > hcalnoise_eventTrackEnergy_handle;
        tas::Handle< float > hcalnoise_flatNoiseSumE_handle;
        tas::Handle< float > hcalnoise_flatNoiseSumEt_handle;
        tas::Handle< float > hcalnoise_isolatedNoiseSumE_handle;
        tas::Handle< float > hcalnoise_isolatedNoiseSumEt_handle;
        tas::Handle< float > hcalnoise_max10GeVHitTime_handle;
        tas::Handle< float > hcalnoise_max25GeVHitTime_handle;
        tas::Handle< float > hcalnoise_maxE10TS_handle;
        tas::Handle< float > hcalnoise_maxE2Over10TS_handle;
        tas::Handle< float > hcalnoise_maxE2TS_handle;
        tas::Handle< float > hcalnoise_min10GeVHitTime_handle;
        tas::Handle< float > hcalnoise_min25GeVHitTime_handle;
        tas::Handle< float > hcalnoise_minE10TS_handle;
        tas::Handle< float > hcalnoise_minE2Over10TS_handle;
        tas::Handle< float > hcalnoise_minE2TS_handle;
        tas::Handle< float > hcalnoise_minHPDEMF_handle;
        tas::Handle< float > hcalnoise_minRBXEMF_handle;
        tas::Handle< float > hcalnoise_rms10GeVHitTime_handle;
        tas::Handle< float > hcalnoise_rms25GeVHitTime_handle;
        tas::Handle< float > hcalnoise_spikeNoiseSumE_handle;
        tas::Handle< float > hcalnoise_spikeNoiseSumEt_handle;
        tas::Handle< float > hcalnoise_triangleNoiseSumE_handle;
        tas::Handle< float > hcalnoise_triangleNoiseSumEt_handle;
        tas::Handle< float > evt_kt6calo_central_rho_handle;
        tas::Handle< float > evt_kt6calo_muhlt_rho_handle;
        tas::Handle< float > evt_kt6calo_rho_handle;
        tas::Handle< float > evt_kt6pf_ctrChargedPU_rho_handle;
        tas::Handle< float > evt_kt6pf_ctrNeutral_rho_handle;
        tas::Handle< float > evt_kt6pf_ctrNeutralTight_rho_handle;
        tas::Handle< float > evt_kt6pf_foregiso_rho_handle;
        tas::Handle< float > l1_met_etTot_handle;
        tas::Handle< float > l1_met_met_handle;
        tas::Handle< float > l1_mht_htTot_handle;
        tas::Handle< float > l1_mht_mht_handle;
        tas::Handle< float > ls_avgInsDelLumi_handle;
        tas::Handle< float > ls_avgInsDelLumiErr_handle;
        tas::Handle< float > ls_avgInsRecLumi_handle;
        tas::Handle< float > ls_avgInsRecLumiErr_handle;
        tas::Handle< float > ls_deadFrac_handle;
        tas::Handle< float > ls_intgDelLumi_handle;
        tas::Handle< float > ls_intgRecLumi_handle;
        tas::Handle< float > ls_lumiSectionLength_handle;
        tas::Handle< float > evt_ecalendcapm_met_handle;
        tas::Handle< float > evt_ecalendcapm_metPhi_handle;
        tas::Handle< float > evt_ecalendcapp_met_handle;
        tas::Handle< float > evt_ecalendcapp_metPhi_handle;
        tas::Handle< float > evt_ecalmet_handle;
        tas::Handle< float > evt_ecalmetPhi_handle;
        tas::Handle< float > evt_endcapm_met_handle;
        tas::Handle< float > evt_endcapm_metPhi_handle;
        tas::Handle< float > evt_endcapp_met_handle;
        tas::Handle< float > evt_endcapp_metPhi_handle;
        tas::Handle< float > evt_hcalendcapm_met_handle;
        tas::Handle< float > evt_hcalendcapm_metPhi_handle;
        tas::Handle< float > evt_hcalendcapp_met_handle;
        tas::Handle< float > evt_hcalendcapp_metPhi_handle;
        tas::Handle< float > evt_hcalmet_handle;
        tas::Handle< float > evt_hcalmetPhi_handle;
        tas::Handle< float > evt_met_handle;
        tas::Handle< float > evt_met_EtGt3_handle;
        tas::Handle< float > evt_metHO_handle;
        tas::Handle< float > evt_metHOPhi_handle;
        tas::Handle< float > evt_metHOSig_handle;
        tas::Handle< float > evt_metMuonCorr_handle;
        tas::Handle< float > evt_metMuonCorrPhi_handle;
        tas::Handle< float > evt_metMuonCorrSig_handle;
        tas::Handle< float > evt_metMuonJESCorr_handle;
        tas::Handle< float > evt_metMuonJESCorrPhi_handle;
        tas::Handle< float > evt_metMuonJESCorrSig_handle;
        tas::Handle< float > evt_metNoHF_handle;
        tas::Handle< float > evt_metNoHFHO_handle;
        tas::Handle< float > evt_metNoHFHOPhi_handle;
        tas::Handle< float > evt_metNoHFHOSig_handle;
        tas::Handle< float > evt_metNoHFPhi_handle;
        tas::Handle< float > evt_metNoHFSig_handle;
        tas::Handle< float > evt_metOpt_handle;
        tas::Handle< float > evt_metOptHO_handle;
        tas::Handle< float > evt_metOptHOPhi_handle;
        tas::Handle< float > evt_metOptHOSig_handle;
        tas::Handle< float > evt_metOptNoHF_handle;
        tas::Handle< float > evt_metOptNoHFHO_handle;
        tas::Handle< float > evt_metOptNoHFHOPhi_handle;
        tas::Handle< float > evt_metOptNoHFHOSig_handle;
        tas::Handle< float > evt_metOptNoHFPhi_handle;
        tas::Handle< float > evt_metOptNoHFSig_handle;
        tas::Handle< float > evt_metOptPhi_handle;
        tas::Handle< float > evt_metOptSig_handle;
        tas::Handle< float > evt_metPhi_handle;
        tas::Handle< float > evt_metPhi_EtGt3_handle;
        tas::Handle< float > evt_metSig_handle;
        tas::Handle< float > evt_sumet_handle;
        tas::Handle< float > evt_sumet_EtGt3_handle;
        tas::Handle< float > evt_sumetHO_handle;
        tas::Handle< float > evt_sumetMuonCorr_handle;
        tas::Handle< float > evt_sumetMuonJESCorr_handle;
        tas::Handle< float > evt_sumetNoHF_handle;
        tas::Handle< float > evt_sumetNoHFHO_handle;
        tas::Handle< float > evt_sumetOpt_handle;
        tas::Handle< float > evt_sumetOptHO_handle;
        tas::Handle< float > evt_sumetOptNoHF_handle;
        tas::Handle< float > evt_sumetOptNoHFHO_handle;
        tas::Handle< float > pdfinfo_pdf1_handle;
        tas::Handle< float > pdfinfo_pdf2_handle;
        tas::Handle< float > pdfinfo_scale_handle;
        tas::Handle< float > pdfinfo_x1_handle;
        tas::Handle< float > pdfinfo_x2_handle;
        tas::Handle< float > evt_fixgrid_rho_all_handle;
        tas::Handle< float > evt_fixgrid_rho_ctr_handle;
        tas::Handle< float > evt_fixgrid_rho_fwd_handle;
        tas::Handle< float > evt_pfmet_handle;
        tas::Handle< float > evt_pfmetPhi_handle;
        tas::Handle< float > evt_pfmetPhi_type1cor_handle;
        tas::Handle< float > evt_pfmetSig_handle;
        tas::Handle< float > evt_pfmetSignificance_handle;
        tas::Handle< float > evt_pfmet_type1cor_handle;
        tas::Handle< float > evt_pfsumet_handle;
        tas::Handle< float > sparm_filterEfficiency_handle;
        tas::Handle< float > sparm_pdfScale_handle;
        tas::Handle< float > sparm_pdfWeight1_handle;
        tas::Handle< float > sparm_pdfWeight2_handle;
        tas::Handle< float > sparm_weight_handle;
        tas::Handle< float > sparm_xsec_handle;
        tas::Handle< float > evt_pf_tcmet_handle;
        tas::Handle< float > evt_pf_tcmetPhi_handle;
        tas::Handle< float > evt_pf_tcmetSig_handle;
        tas::Handle< float > evt_pf_tcsumet_handle;
        tas::Handle< float > evt_tcmet_handle;
        tas::Handle< float > evt_tcmetPhi_handle;
        tas::Handle< float > evt_tcmetSig_handle;
        tas::Handle< float > evt_tcsumet_handle;
        tas::Handle< float > evt_ww_rho_act_handle;
        tas::Handle< float > evt_ww_rho_handle;
        tas::Handle< float > evt_ww_rho_rnd_handle;
        tas::Handle< float > evt_ww_rho_vor_handle;
        tas::Handle< LorentzVector  > evt_bsp4_handle;
        tas::Handle< LorentzVector  > l1_met_p4_handle;
        tas::Handle< LorentzVector  > l1_mht_p4_handle;
        tas::Handle< std::vector<LorentzVector > > els_mc_motherp4_handle;
        tas::Handle< std::vector<LorentzVector > > els_mc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > jets_mc_gp_p4_handle;
        tas::Handle< std::vector<LorentzVector > > jets_mc_motherp4_handle;
        tas::Handle< std::vector<LorentzVector > > jets_mc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_mc_motherp4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_mc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfjets_mc_gp_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfjets_mc_motherp4_handle;
        tas::Handle< std::vector<LorentzVector > > pfjets_mc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > photons_mc_motherp4_handle;
        tas::Handle< std::vector<LorentzVector > > photons_mc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > trk_mcp4_handle;
        tas::Handle< std::vector<LorentzVector > > els_conv_pos_p4_handle;
        tas::Handle< std::vector<LorentzVector > > els_inner_position_handle;
        tas::Handle< std::vector<LorentzVector > > els_outer_position_handle;
        tas::Handle< std::vector<LorentzVector > > els_p4_handle;
        tas::Handle< std::vector<LorentzVector > > els_p4In_handle;
        tas::Handle< std::vector<LorentzVector > > els_p4Out_handle;
        tas::Handle< std::vector<LorentzVector > > els_trk_p4_handle;
        tas::Handle< std::vector<LorentzVector > > els_vertex_p4_handle;
        tas::Handle< std::vector<LorentzVector > > genjets_p4_handle;
        tas::Handle< std::vector<LorentzVector > > genps_p4_handle;
        tas::Handle< std::vector<LorentzVector > > genps_prod_vtx_handle;
        tas::Handle< std::vector<LorentzVector > > gsftrks_inner_position_handle;
        tas::Handle< std::vector<LorentzVector > > gsftrks_outer_p4_handle;
        tas::Handle< std::vector<LorentzVector > > gsftrks_outer_position_handle;
        tas::Handle< std::vector<LorentzVector > > gsftrks_p4_handle;
        tas::Handle< std::vector<LorentzVector > > gsftrks_vertex_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_ll_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_ll_trk_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_lt_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_lt_trk_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_FVFit_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_FVFit_v4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_ll_mc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > hyp_lt_mc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > jets_p4_handle;
        tas::Handle< std::vector<LorentzVector > > jets_vertex_p4_handle;
        tas::Handle< std::vector<LorentzVector > > l1_emiso_p4_handle;
        tas::Handle< std::vector<LorentzVector > > l1_emnoiso_p4_handle;
        tas::Handle< std::vector<LorentzVector > > l1_jetsc_p4_handle;
        tas::Handle< std::vector<LorentzVector > > l1_jetsf_p4_handle;
        tas::Handle< std::vector<LorentzVector > > l1_jetst_p4_handle;
        tas::Handle< std::vector<LorentzVector > > l1_mus_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_ecalpos_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_fitpicky_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_fittev_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_fittpfms_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_gfit_outerPos_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_gfit_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_gfit_vertex_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_pfp4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_pfposAtEcal_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_sta_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_sta_vertex_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_trk_p4_handle;
        tas::Handle< std::vector<LorentzVector > > mus_vertex_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfcands_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfcands_posAtEcal_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfels_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfels_posAtEcal_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfjets_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfmus_p4_handle;
        tas::Handle< std::vector<LorentzVector > > pfmus_posAtEcal_p4_handle;
        tas::Handle< std::vector<LorentzVector > > taus_pf_p4_handle;
        tas::Handle< std::vector<LorentzVector > > photons_p4_handle;
        tas::Handle< std::vector<LorentzVector > > convs_refitPairMom_p4_handle;
        tas::Handle< std::vector<LorentzVector > > convs_vtxpos_handle;
        tas::Handle< std::vector<LorentzVector > > scs_p4_handle;
        tas::Handle< std::vector<LorentzVector > > scs_pos_p4_handle;
        tas::Handle< std::vector<LorentzVector > > scs_vtx_p4_handle;
        tas::Handle< std::vector<LorentzVector > > svs_flight_handle;
        tas::Handle< std::vector<LorentzVector > > svs_mc3_p4_handle;
        tas::Handle< std::vector<LorentzVector > > svs_p4_handle;
        tas::Handle< std::vector<LorentzVector > > svs_position_handle;
        tas::Handle< std::vector<LorentzVector > > svs_refitp4_handle;
        tas::Handle< std::vector<LorentzVector > > trks_inner_position_handle;
        tas::Handle< std::vector<LorentzVector > > trks_outer_p4_handle;
        tas::Handle< std::vector<LorentzVector > > trks_outer_position_handle;
        tas::Handle< std::vector<LorentzVector > > trks_trk_p4_handle;
        tas::Handle< std::vector<LorentzVector > > trks_vertex_p4_handle;
        tas::Handle< std::vector<LorentzVector > > trkjets_p4_handle;
        tas::Handle< std::vector<LorentzVector > > vtxs_position_handle;
        tas::Handle< std::vector<LorentzVector > > bsvtxs_position_handle;
        tas::Handle< std::vector<std::vector<LorentzVector > > > els_convs_pos_p4_handle;
        tas::Handle< std::vector<std::vector<LorentzVector > > > genps_lepdaughter_p4_handle;
        tas::Handle< std::vector<std::vector<LorentzVector > > > hlt_trigObjs_p4_handle;
        tas::Handle< std::vector<std::vector<LorentzVector > > > hyp_jets_p4_handle;
        tas::Handle< std::vector<std::vector<LorentzVector > > > hyp_other_jets_p4_handle;
        tas::Handle< std::vector<float> > jpts_combinedSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_combinedSecondaryVertexMVABJetTag_handle;
        tas::Handle< std::vector<float> > jpts_jetBProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_jetProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_simpleSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::Handle< std::vector<float> > jpts_softElectronByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_softElectronByPtBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_softElectronTag_handle;
        tas::Handle< std::vector<float> > jpts_softMuonBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_softMuonByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_softMuonByPtBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_trackCountingHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > jpts_trackCountingHighPurBJetTag_handle;
        tas::Handle< std::vector<float> > jets_combinedSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > jets_combinedSecondaryVertexMVABJetTag_handle;
        tas::Handle< std::vector<float> > jets_jetBProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > jets_jetProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > jets_simpleSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > jets_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > jets_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::Handle< std::vector<float> > jets_softElectronByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > jets_softElectronByPtBJetTag_handle;
        tas::Handle< std::vector<float> > jets_softElectronTag_handle;
        tas::Handle< std::vector<float> > jets_softMuonBJetTag_handle;
        tas::Handle< std::vector<float> > jets_softMuonByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > jets_softMuonByPtBJetTag_handle;
        tas::Handle< std::vector<float> > jets_trackCountingHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > jets_trackCountingHighPurBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_combinedSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_combinedSecondaryVertexMVABJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_jetBProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_jetProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_simpleSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::Handle< std::vector<float> > pfjets_softElectronByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_softElectronByPtBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_softElectronTag_handle;
        tas::Handle< std::vector<float> > pfjets_softMuonBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_softMuonByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_softMuonByPtBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_trackCountingHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > pfjets_trackCountingHighPurBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_combinedSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_combinedSecondaryVertexMVABJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_jetBProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_jetProbabilityBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_simpleSecondaryVertexBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::Handle< std::vector<float> > trkjets_softElectronByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_softElectronByPtBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_softElectronTag_handle;
        tas::Handle< std::vector<float> > trkjets_softMuonBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_softMuonByIP3dBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_softMuonByPtBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_trackCountingHighEffBJetTag_handle;
        tas::Handle< std::vector<float> > trkjets_trackCountingHighPurBJetTag_handle;
        tas::Handle< std::vector<float> > evt_bs_covMatrix_handle;
        tas::Handle< std::vector<float> > els_mc3dr_handle;
        tas::Handle< std::vector<float> > els_mcdr_handle;
        tas::Handle< std::vector<float> > jets_mc3dr_handle;
        tas::Handle< std::vector<float> > jets_mcdr_handle;
        tas::Handle< std::vector<float> > jets_mc_emEnergy_handle;
        tas::Handle< std::vector<float> > jets_mc_gpdr_handle;
        tas::Handle< std::vector<float> > jets_mc_hadEnergy_handle;
        tas::Handle< std::vector<float> > jets_mc_invEnergy_handle;
        tas::Handle< std::vector<float> > jets_mc_otherEnergy_handle;
        tas::Handle< std::vector<float> > mus_mc3dr_handle;
        tas::Handle< std::vector<float> > mus_mcdr_handle;
        tas::Handle< std::vector<float> > pfjets_mc3dr_handle;
        tas::Handle< std::vector<float> > pfjets_mcdr_handle;
        tas::Handle< std::vector<float> > pfjets_mc_emEnergy_handle;
        tas::Handle< std::vector<float> > pfjets_mc_gpdr_handle;
        tas::Handle< std::vector<float> > pfjets_mc_hadEnergy_handle;
        tas::Handle< std::vector<float> > pfjets_mc_invEnergy_handle;
        tas::Handle< std::vector<float> > pfjets_mc_otherEnergy_handle;
        tas::Handle< std::vector<float> > photons_mc3dr_handle;
        tas::Handle< std::vector<float> > photons_mcdr_handle;
        tas::Handle< std::vector<float> > trk_mc3dr_handle;
        tas::Handle< std::vector<float> > trk_mcdr_handle;
        tas::Handle< std::vector<float> > els_ecalJuraIso_handle;
        tas::Handle< std::vector<float> > els_ecalJuraTowerIso_handle;
        tas::Handle< std::vector<float> > els_hcalConeIso_handle;
        tas::Handle< std::vector<float> > els_tkJuraIso_handle;
        tas::Handle< std::vector<float> > els_jetdr_handle;
        tas::Handle< std::vector<float> > els_musdr_handle;
        tas::Handle< std::vector<float> > els_isoR03_chpf_radial_handle;
        tas::Handle< std::vector<float> > els_isoR03_chpf_radialTight_handle;
        tas::Handle< std::vector<float> > els_isoR03_chpf_radialTight_bv_handle;
        tas::Handle< std::vector<float> > els_isoR03_chpf_radial_bv_handle;
        tas::Handle< std::vector<float> > els_isoR03_empf_radial_handle;
        tas::Handle< std::vector<float> > els_isoR03_empf_radialTight_handle;
        tas::Handle< std::vector<float> > els_isoR03_empf_radialTight_bv_handle;
        tas::Handle< std::vector<float> > els_isoR03_empf_radial_bv_handle;
        tas::Handle< std::vector<float> > els_isoR03_nhpf_radial_handle;
        tas::Handle< std::vector<float> > els_isoR03_nhpf_radialTight_handle;
        tas::Handle< std::vector<float> > els_isoR03_nhpf_radialTight_bv_handle;
        tas::Handle< std::vector<float> > els_isoR03_nhpf_radial_bv_handle;
        tas::Handle< std::vector<float> > els_isoR03_pf2012n0p5_ch_handle;
        tas::Handle< std::vector<float> > els_isoR03_pf2012n0p5_em_handle;
        tas::Handle< std::vector<float> > els_isoR03_pf2012n0p5_nh_handle;
        tas::Handle< std::vector<float> > els_isoR03_pf_radial_handle;
        tas::Handle< std::vector<float> > els_isoR03_pf_radialTight_handle;
        tas::Handle< std::vector<float> > els_isoR03_pf_radialTight_bv_handle;
        tas::Handle< std::vector<float> > els_isoR03_pf_radial_bv_handle;
        tas::Handle< std::vector<float> > els_chi2_handle;
        tas::Handle< std::vector<float> > els_ckf_chi2_handle;
        tas::Handle< std::vector<float> > els_ckf_ndof_handle;
        tas::Handle< std::vector<float> > els_conv_dcot_handle;
        tas::Handle< std::vector<float> > els_conv_dist_handle;
        tas::Handle< std::vector<float> > els_conv_old_dcot_handle;
        tas::Handle< std::vector<float> > els_conv_old_dist_handle;
        tas::Handle< std::vector<float> > els_conv_old_radius_handle;
        tas::Handle< std::vector<float> > els_conv_radius_handle;
        tas::Handle< std::vector<float> > els_d0_handle;
        tas::Handle< std::vector<float> > els_d0Err_handle;
        tas::Handle< std::vector<float> > els_d0corr_handle;
        tas::Handle< std::vector<float> > els_dEtaIn_handle;
        tas::Handle< std::vector<float> > els_dEtaOut_handle;
        tas::Handle< std::vector<float> > els_dPhiIn_handle;
        tas::Handle< std::vector<float> > els_dPhiInPhiOut_handle;
        tas::Handle< std::vector<float> > els_dPhiOut_handle;
        tas::Handle< std::vector<float> > els_deltaEtaEleClusterTrackAtCalo_handle;
        tas::Handle< std::vector<float> > els_deltaPhiEleClusterTrackAtCalo_handle;
        tas::Handle< std::vector<float> > els_e1x5_handle;
        tas::Handle< std::vector<float> > els_e2x5Max_handle;
        tas::Handle< std::vector<float> > els_e3x3_handle;
        tas::Handle< std::vector<float> > els_e5x5_handle;
        tas::Handle< std::vector<float> > els_eMax_handle;
        tas::Handle< std::vector<float> > els_eOverPIn_handle;
        tas::Handle< std::vector<float> > els_eOverPOut_handle;
        tas::Handle< std::vector<float> > els_eSC_handle;
        tas::Handle< std::vector<float> > els_eSCPresh_handle;
        tas::Handle< std::vector<float> > els_eSCRaw_handle;
        tas::Handle< std::vector<float> > els_eSeed_handle;
        tas::Handle< std::vector<float> > els_eSeedOverPIn_handle;
        tas::Handle< std::vector<float> > els_eSeedOverPOut_handle;
        tas::Handle< std::vector<float> > els_ecalEnergy_handle;
        tas::Handle< std::vector<float> > els_ecalEnergyError_handle;
        tas::Handle< std::vector<float> > els_ecalIso_handle;
        tas::Handle< std::vector<float> > els_ecalIso04_handle;
        tas::Handle< std::vector<float> > els_etaErr_handle;
        tas::Handle< std::vector<float> > els_etaSC_handle;
        tas::Handle< std::vector<float> > els_etaSCwidth_handle;
        tas::Handle< std::vector<float> > els_fbrem_handle;
        tas::Handle< std::vector<float> > els_hOverE_handle;
        tas::Handle< std::vector<float> > els_hcalDepth1OverEcal_handle;
        tas::Handle< std::vector<float> > els_hcalDepth1TowerSumEt_handle;
        tas::Handle< std::vector<float> > els_hcalDepth1TowerSumEt04_handle;
        tas::Handle< std::vector<float> > els_hcalDepth2OverEcal_handle;
        tas::Handle< std::vector<float> > els_hcalDepth2TowerSumEt_handle;
        tas::Handle< std::vector<float> > els_hcalDepth2TowerSumEt04_handle;
        tas::Handle< std::vector<float> > els_hcalIso_handle;
        tas::Handle< std::vector<float> > els_hcalIso04_handle;
        tas::Handle< std::vector<float> > els_ip3d_handle;
        tas::Handle< std::vector<float> > els_ip3derr_handle;
        tas::Handle< std::vector<float> > els_iso03_pf_handle;
        tas::Handle< std::vector<float> > els_iso03_pf2012_ch_handle;
        tas::Handle< std::vector<float> > els_iso03_pf2012_em_handle;
        tas::Handle< std::vector<float> > els_iso03_pf2012ext_ch_handle;
        tas::Handle< std::vector<float> > els_iso03_pf2012ext_em_handle;
        tas::Handle< std::vector<float> > els_iso03_pf2012ext_nh_handle;
        tas::Handle< std::vector<float> > els_iso03_pf2012_nh_handle;
        tas::Handle< std::vector<float> > els_iso03_pf_ch_handle;
        tas::Handle< std::vector<float> > els_iso03_pf_gamma05_handle;
        tas::Handle< std::vector<float> > els_iso03_pf_nhad05_handle;
        tas::Handle< std::vector<float> > els_iso04_pf_handle;
        tas::Handle< std::vector<float> > els_iso04_pf2012_ch_handle;
        tas::Handle< std::vector<float> > els_iso04_pf2012_em_handle;
        tas::Handle< std::vector<float> > els_iso04_pf2012ext_ch_handle;
        tas::Handle< std::vector<float> > els_iso04_pf2012ext_em_handle;
        tas::Handle< std::vector<float> > els_iso04_pf2012ext_nh_handle;
        tas::Handle< std::vector<float> > els_iso04_pf2012_nh_handle;
        tas::Handle< std::vector<float> > els_iso04_pf_ch_handle;
        tas::Handle< std::vector<float> > els_iso04_pf_gamma05_handle;
        tas::Handle< std::vector<float> > els_iso04_pf_nhad05_handle;
        tas::Handle< std::vector<float> > els_layer1_charge_handle;
        tas::Handle< std::vector<float> > els_lh_handle;
        tas::Handle< std::vector<float> > els_mva_handle;
        tas::Handle< std::vector<float> > els_ndof_handle;
        tas::Handle< std::vector<float> > els_pfChargedHadronIso_handle;
        tas::Handle< std::vector<float> > els_pfNeutralHadronIso_handle;
        tas::Handle< std::vector<float> > els_pfPhotonIso_handle;
        tas::Handle< std::vector<float> > els_phiErr_handle;
        tas::Handle< std::vector<float> > els_phiSC_handle;
        tas::Handle< std::vector<float> > els_phiSCwidth_handle;
        tas::Handle< std::vector<float> > els_ptErr_handle;
        tas::Handle< std::vector<float> > els_r9_handle;
        tas::Handle< std::vector<float> > els_sigmaEtaEta_handle;
        tas::Handle< std::vector<float> > els_sigmaIEtaIEta_handle;
        tas::Handle< std::vector<float> > els_sigmaIEtaIEtaSC_handle;
        tas::Handle< std::vector<float> > els_sigmaIEtaIPhi_handle;
        tas::Handle< std::vector<float> > els_sigmaIPhiIPhi_handle;
        tas::Handle< std::vector<float> > els_sigmaIPhiIPhiSC_handle;
        tas::Handle< std::vector<float> > els_sigmaIphiIphi_handle;
        tas::Handle< std::vector<float> > els_sigmaPhiPhi_handle;
        tas::Handle< std::vector<float> > els_tkIso_handle;
        tas::Handle< std::vector<float> > els_tkIso04_handle;
        tas::Handle< std::vector<float> > els_trackMomentumError_handle;
        tas::Handle< std::vector<float> > els_trkdr_handle;
        tas::Handle< std::vector<float> > els_trkshFrac_handle;
        tas::Handle< std::vector<float> > els_z0_handle;
        tas::Handle< std::vector<float> > els_z0Err_handle;
        tas::Handle< std::vector<float> > els_z0corr_handle;
        tas::Handle< std::vector<float> > gsftrks_chi2_handle;
        tas::Handle< std::vector<float> > gsftrks_d0_handle;
        tas::Handle< std::vector<float> > gsftrks_d0Err_handle;
        tas::Handle< std::vector<float> > gsftrks_d0corr_handle;
        tas::Handle< std::vector<float> > gsftrks_d0corrPhi_handle;
        tas::Handle< std::vector<float> > gsftrks_d0phiCov_handle;
        tas::Handle< std::vector<float> > gsftrks_etaErr_handle;
        tas::Handle< std::vector<float> > gsftrks_layer1_charge_handle;
        tas::Handle< std::vector<float> > gsftrks_ndof_handle;
        tas::Handle< std::vector<float> > gsftrks_phiErr_handle;
        tas::Handle< std::vector<float> > gsftrks_ptErr_handle;
        tas::Handle< std::vector<float> > gsftrks_z0_handle;
        tas::Handle< std::vector<float> > gsftrks_z0Err_handle;
        tas::Handle< std::vector<float> > gsftrks_z0corr_handle;
        tas::Handle< std::vector<float> > hyp_Ht_handle;
        tas::Handle< std::vector<float> > hyp_dPhi_nJet_metMuonJESCorr_handle;
        tas::Handle< std::vector<float> > hyp_dPhi_nJet_muCorrMet_handle;
        tas::Handle< std::vector<float> > hyp_dPhi_nJet_tcMet_handle;
        tas::Handle< std::vector<float> > hyp_dPhi_nJet_unCorrMet_handle;
        tas::Handle< std::vector<float> > hyp_ll_chi2_handle;
        tas::Handle< std::vector<float> > hyp_ll_d0_handle;
        tas::Handle< std::vector<float> > hyp_ll_d0Err_handle;
        tas::Handle< std::vector<float> > hyp_ll_d0corr_handle;
        tas::Handle< std::vector<float> > hyp_ll_dPhi_metMuonJESCorr_handle;
        tas::Handle< std::vector<float> > hyp_ll_dPhi_muCorrMet_handle;
        tas::Handle< std::vector<float> > hyp_ll_dPhi_tcMet_handle;
        tas::Handle< std::vector<float> > hyp_ll_dPhi_unCorrMet_handle;
        tas::Handle< std::vector<float> > hyp_ll_etaErr_handle;
        tas::Handle< std::vector<float> > hyp_ll_ndof_handle;
        tas::Handle< std::vector<float> > hyp_ll_phiErr_handle;
        tas::Handle< std::vector<float> > hyp_ll_ptErr_handle;
        tas::Handle< std::vector<float> > hyp_ll_z0_handle;
        tas::Handle< std::vector<float> > hyp_ll_z0Err_handle;
        tas::Handle< std::vector<float> > hyp_ll_z0corr_handle;
        tas::Handle< std::vector<float> > hyp_lt_chi2_handle;
        tas::Handle< std::vector<float> > hyp_lt_d0_handle;
        tas::Handle< std::vector<float> > hyp_lt_d0Err_handle;
        tas::Handle< std::vector<float> > hyp_lt_d0corr_handle;
        tas::Handle< std::vector<float> > hyp_lt_dPhi_metMuonJESCorr_handle;
        tas::Handle< std::vector<float> > hyp_lt_dPhi_muCorrMet_handle;
        tas::Handle< std::vector<float> > hyp_lt_dPhi_tcMet_handle;
        tas::Handle< std::vector<float> > hyp_lt_dPhi_unCorrMet_handle;
        tas::Handle< std::vector<float> > hyp_lt_etaErr_handle;
        tas::Handle< std::vector<float> > hyp_lt_ndof_handle;
        tas::Handle< std::vector<float> > hyp_lt_phiErr_handle;
        tas::Handle< std::vector<float> > hyp_lt_ptErr_handle;
        tas::Handle< std::vector<float> > hyp_lt_z0_handle;
        tas::Handle< std::vector<float> > hyp_lt_z0Err_handle;
        tas::Handle< std::vector<float> > hyp_lt_z0corr_handle;
        tas::Handle< std::vector<float> > hyp_mt2_metMuonJESCorr_handle;
        tas::Handle< std::vector<float> > hyp_mt2_muCorrMet_handle;
        tas::Handle< std::vector<float> > hyp_mt2_tcMet_handle;
        tas::Handle< std::vector<float> > hyp_sumJetPt_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_chi2ndf_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_prob_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_v4cxx_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_v4cxy_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_v4cyy_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_v4czx_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_v4czy_handle;
        tas::Handle< std::vector<float> > hyp_FVFit_v4czz_handle;
        tas::Handle< std::vector<float> > jets_approximatefHPD_handle;
        tas::Handle< std::vector<float> > jets_approximatefRBX_handle;
        tas::Handle< std::vector<float> > jets_cor_handle;
        tas::Handle< std::vector<float> > jets_corL1FastL2L3_handle;
        tas::Handle< std::vector<float> > jets_corL1L2L3_handle;
        tas::Handle< std::vector<float> > jets_emFrac_handle;
        tas::Handle< std::vector<float> > jets_fHPD_handle;
        tas::Handle< std::vector<float> > jets_fRBX_handle;
        tas::Handle< std::vector<float> > jets_fSubDetector1_handle;
        tas::Handle< std::vector<float> > jets_fSubDetector2_handle;
        tas::Handle< std::vector<float> > jets_fSubDetector3_handle;
        tas::Handle< std::vector<float> > jets_fSubDetector4_handle;
        tas::Handle< std::vector<float> > jets_hitsInN90_handle;
        tas::Handle< std::vector<float> > jets_n90Hits_handle;
        tas::Handle< std::vector<float> > jets_nECALTowers_handle;
        tas::Handle< std::vector<float> > jets_nHCALTowers_handle;
        tas::Handle< std::vector<float> > jets_restrictedEMF_handle;
        tas::Handle< std::vector<float> > mus_met_deltax_handle;
        tas::Handle< std::vector<float> > mus_met_deltay_handle;
        tas::Handle< std::vector<float> > mus_eledr_handle;
        tas::Handle< std::vector<float> > mus_jetdr_handle;
        tas::Handle< std::vector<float> > mus_isoR03_chpf_radial_handle;
        tas::Handle< std::vector<float> > mus_isoR03_chpf_radialTight_handle;
        tas::Handle< std::vector<float> > mus_isoR03_empf_radial_handle;
        tas::Handle< std::vector<float> > mus_isoR03_empf_radialTight_handle;
        tas::Handle< std::vector<float> > mus_isoR03_nhpf_radial_handle;
        tas::Handle< std::vector<float> > mus_isoR03_nhpf_radialTight_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_radial_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_radialTight_handle;
        tas::Handle< std::vector<float> > mus_backToBackCompat_handle;
        tas::Handle< std::vector<float> > mus_caloCompatibility_handle;
        tas::Handle< std::vector<float> > mus_chi2_handle;
        tas::Handle< std::vector<float> > mus_chi2LocalMomentum_handle;
        tas::Handle< std::vector<float> > mus_chi2LocalPosition_handle;
        tas::Handle< std::vector<float> > mus_cosmicCompat_handle;
        tas::Handle< std::vector<float> > mus_d0_handle;
        tas::Handle< std::vector<float> > mus_d0Err_handle;
        tas::Handle< std::vector<float> > mus_d0corr_handle;
        tas::Handle< std::vector<float> > mus_e_em_handle;
        tas::Handle< std::vector<float> > mus_e_emS9_handle;
        tas::Handle< std::vector<float> > mus_e_had_handle;
        tas::Handle< std::vector<float> > mus_e_hadS9_handle;
        tas::Handle< std::vector<float> > mus_e_ho_handle;
        tas::Handle< std::vector<float> > mus_e_hoS9_handle;
        tas::Handle< std::vector<float> > mus_etaErr_handle;
        tas::Handle< std::vector<float> > mus_gfit_chi2_handle;
        tas::Handle< std::vector<float> > mus_gfit_d0_handle;
        tas::Handle< std::vector<float> > mus_gfit_d0Err_handle;
        tas::Handle< std::vector<float> > mus_gfit_d0corr_handle;
        tas::Handle< std::vector<float> > mus_gfit_ndof_handle;
        tas::Handle< std::vector<float> > mus_gfit_qoverp_handle;
        tas::Handle< std::vector<float> > mus_gfit_qoverpError_handle;
        tas::Handle< std::vector<float> > mus_gfit_z0_handle;
        tas::Handle< std::vector<float> > mus_gfit_z0Err_handle;
        tas::Handle< std::vector<float> > mus_gfit_z0corr_handle;
        tas::Handle< std::vector<float> > mus_glbKink_handle;
        tas::Handle< std::vector<float> > mus_glbTrackProbability_handle;
        tas::Handle< std::vector<float> > mus_globalDeltaEtaPhi_handle;
        tas::Handle< std::vector<float> > mus_ip3d_handle;
        tas::Handle< std::vector<float> > mus_ip3derr_handle;
        tas::Handle< std::vector<float> > mus_iso03_emEt_handle;
        tas::Handle< std::vector<float> > mus_iso03_hadEt_handle;
        tas::Handle< std::vector<float> > mus_iso03_hoEt_handle;
        tas::Handle< std::vector<float> > mus_iso03_pf_handle;
        tas::Handle< std::vector<float> > mus_iso03_sumPt_handle;
        tas::Handle< std::vector<float> > mus_iso04_pf_handle;
        tas::Handle< std::vector<float> > mus_iso05_emEt_handle;
        tas::Handle< std::vector<float> > mus_iso05_hadEt_handle;
        tas::Handle< std::vector<float> > mus_iso05_hoEt_handle;
        tas::Handle< std::vector<float> > mus_iso05_sumPt_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_ChargedHadronPt_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_ChargedParticlePt_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_NeutralHadronEt_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_NeutralHadronEtHighThreshold_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_PUPt_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_PhotonEt_handle;
        tas::Handle< std::vector<float> > mus_isoR03_pf_PhotonEtHighThreshold_handle;
        tas::Handle< std::vector<float> > mus_isoR04_pf_ChargedHadronPt_handle;
        tas::Handle< std::vector<float> > mus_isoR04_pf_ChargedParticlePt_handle;
        tas::Handle< std::vector<float> > mus_isoR04_pf_NeutralHadronEt_handle;
        tas::Handle< std::vector<float> > mus_isoR04_pf_NeutralHadronEtHighThreshold_handle;
        tas::Handle< std::vector<float> > mus_isoR04_pf_PUPt_handle;
        tas::Handle< std::vector<float> > mus_isoR04_pf_PhotonEt_handle;
        tas::Handle< std::vector<float> > mus_isoR04_pf_PhotonEtHighThreshold_handle;
        tas::Handle< std::vector<float> > mus_iso_ecalvetoDep_handle;
        tas::Handle< std::vector<float> > mus_iso_hcalvetoDep_handle;
        tas::Handle< std::vector<float> > mus_iso_hovetoDep_handle;
        tas::Handle< std::vector<float> > mus_iso_trckvetoDep_handle;
        tas::Handle< std::vector<float> > mus_localDistance_handle;
        tas::Handle< std::vector<float> > mus_ndof_handle;
        tas::Handle< std::vector<float> > mus_overlapCompat_handle;
        tas::Handle< std::vector<float> > mus_pfdeltaP_handle;
        tas::Handle< std::vector<float> > mus_pfecalE_handle;
        tas::Handle< std::vector<float> > mus_pfhcalE_handle;
        tas::Handle< std::vector<float> > mus_pfmva_emu_handle;
        tas::Handle< std::vector<float> > mus_pfmva_epi_handle;
        tas::Handle< std::vector<float> > mus_pfmva_nothing_gamma_handle;
        tas::Handle< std::vector<float> > mus_pfmva_nothing_nh_handle;
        tas::Handle< std::vector<float> > mus_pfmva_pimu_handle;
        tas::Handle< std::vector<float> > mus_pfpS1E_handle;
        tas::Handle< std::vector<float> > mus_pfpS2E_handle;
        tas::Handle< std::vector<float> > mus_pfrawEcalE_handle;
        tas::Handle< std::vector<float> > mus_pfrawHcalE_handle;
        tas::Handle< std::vector<float> > mus_phiErr_handle;
        tas::Handle< std::vector<float> > mus_ptErr_handle;
        tas::Handle< std::vector<float> > mus_qoverp_handle;
        tas::Handle< std::vector<float> > mus_qoverpError_handle;
        tas::Handle< std::vector<float> > mus_segmCompatibility_handle;
        tas::Handle< std::vector<float> > mus_staRelChi2_handle;
        tas::Handle< std::vector<float> > mus_sta_chi2_handle;
        tas::Handle< std::vector<float> > mus_sta_d0_handle;
        tas::Handle< std::vector<float> > mus_sta_d0Err_handle;
        tas::Handle< std::vector<float> > mus_sta_d0corr_handle;
        tas::Handle< std::vector<float> > mus_sta_ndof_handle;
        tas::Handle< std::vector<float> > mus_sta_qoverp_handle;
        tas::Handle< std::vector<float> > mus_sta_qoverpError_handle;
        tas::Handle< std::vector<float> > mus_sta_z0_handle;
        tas::Handle< std::vector<float> > mus_sta_z0Err_handle;
        tas::Handle< std::vector<float> > mus_sta_z0corr_handle;
        tas::Handle< std::vector<float> > mus_timeAtIpInOut_handle;
        tas::Handle< std::vector<float> > mus_timeAtIpInOutErr_handle;
        tas::Handle< std::vector<float> > mus_timeAtIpOutIn_handle;
        tas::Handle< std::vector<float> > mus_timeAtIpOutInErr_handle;
        tas::Handle< std::vector<float> > mus_timeCompat_handle;
        tas::Handle< std::vector<float> > mus_trkKink_handle;
        tas::Handle< std::vector<float> > mus_trkRelChi2_handle;
        tas::Handle< std::vector<float> > mus_vertexCompat_handle;
        tas::Handle< std::vector<float> > mus_vertexphi_handle;
        tas::Handle< std::vector<float> > mus_z0_handle;
        tas::Handle< std::vector<float> > mus_z0Err_handle;
        tas::Handle< std::vector<float> > mus_z0corr_handle;
        tas::Handle< std::vector<float> > pfjets_mvavalue_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_beta_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_betaStar_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_d0_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_dRMean_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_dZ_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_frac01_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_frac02_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_frac03_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_frac04_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_frac05_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_nCharged_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_nNeutrals_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmva_nvtx_handle;
        tas::Handle< std::vector<float> > pfjets_full53xmvavalue_handle;
        tas::Handle< std::vector<float> > pfjets_full5xmvavalue_handle;
        tas::Handle< std::vector<float> > trkjet_met_handle;
        tas::Handle< std::vector<float> > trkjet_metPhi_handle;
        tas::Handle< std::vector<float> > trkjet_sumet_handle;
        tas::Handle< std::vector<float> > trk_met_handle;
        tas::Handle< std::vector<float> > trk_metPhi_handle;
        tas::Handle< std::vector<float> > trk_sumet_handle;
        tas::Handle< std::vector<float> > pfcands_deltaP_handle;
        tas::Handle< std::vector<float> > pfcands_ecalE_handle;
        tas::Handle< std::vector<float> > pfcands_hcalE_handle;
        tas::Handle< std::vector<float> > pfcands_mva_emu_handle;
        tas::Handle< std::vector<float> > pfcands_mva_epi_handle;
        tas::Handle< std::vector<float> > pfcands_mva_nothing_gamma_handle;
        tas::Handle< std::vector<float> > pfcands_mva_nothing_nh_handle;
        tas::Handle< std::vector<float> > pfcands_mva_pimu_handle;
        tas::Handle< std::vector<float> > pfcands_pS1E_handle;
        tas::Handle< std::vector<float> > pfcands_pS2E_handle;
        tas::Handle< std::vector<float> > pfcands_rawEcalE_handle;
        tas::Handle< std::vector<float> > pfcands_rawHcalE_handle;
        tas::Handle< std::vector<float> > pfels_deltaP_handle;
        tas::Handle< std::vector<float> > pfels_ecalE_handle;
        tas::Handle< std::vector<float> > pfels_hcalE_handle;
        tas::Handle< std::vector<float> > pfels_iso04ChargedHadrons_handle;
        tas::Handle< std::vector<float> > pfels_iso04NeutralHadrons_handle;
        tas::Handle< std::vector<float> > pfels_iso04Photons_handle;
        tas::Handle< std::vector<float> > pfels_isoChargedHadrons_handle;
        tas::Handle< std::vector<float> > pfels_isoNeutralHadrons_handle;
        tas::Handle< std::vector<float> > pfels_isoPhotons_handle;
        tas::Handle< std::vector<float> > pfels_mva_emu_handle;
        tas::Handle< std::vector<float> > pfels_mva_epi_handle;
        tas::Handle< std::vector<float> > pfels_mva_nothing_gamma_handle;
        tas::Handle< std::vector<float> > pfels_mva_nothing_nh_handle;
        tas::Handle< std::vector<float> > pfels_mva_pimu_handle;
        tas::Handle< std::vector<float> > pfels_pS1E_handle;
        tas::Handle< std::vector<float> > pfels_pS2E_handle;
        tas::Handle< std::vector<float> > pfels_rawEcalE_handle;
        tas::Handle< std::vector<float> > pfels_rawHcalE_handle;
        tas::Handle< std::vector<float> > pfjets_area_handle;
        tas::Handle< std::vector<float> > pfjets_chargedEmE_handle;
        tas::Handle< std::vector<float> > pfjets_chargedHadronE_handle;
        tas::Handle< std::vector<float> > pfjets_cor_handle;
        tas::Handle< std::vector<float> > pfjets_corL1Fast_handle;
        tas::Handle< std::vector<float> > pfjets_corL1FastL2L3_handle;
        tas::Handle< std::vector<float> > pfjets_corL1FastL2L3residual_handle;
        tas::Handle< std::vector<float> > pfjets_corL1L2L3_handle;
        tas::Handle< std::vector<float> > pfjets_electronE_handle;
        tas::Handle< std::vector<float> > pfjets_hfEmE_handle;
        tas::Handle< std::vector<float> > pfjets_hfHadronE_handle;
        tas::Handle< std::vector<float> > pfjets_muonE_handle;
        tas::Handle< std::vector<float> > pfjets_neutralEmE_handle;
        tas::Handle< std::vector<float> > pfjets_neutralHadronE_handle;
        tas::Handle< std::vector<float> > pfjets_photonE_handle;
        tas::Handle< std::vector<float> > pfmus_deltaP_handle;
        tas::Handle< std::vector<float> > pfmus_ecalE_handle;
        tas::Handle< std::vector<float> > pfmus_hcalE_handle;
        tas::Handle< std::vector<float> > pfmus_iso04ChargedHadrons_handle;
        tas::Handle< std::vector<float> > pfmus_iso04NeutralHadrons_handle;
        tas::Handle< std::vector<float> > pfmus_iso04Photons_handle;
        tas::Handle< std::vector<float> > pfmus_isoChargedHadrons_handle;
        tas::Handle< std::vector<float> > pfmus_isoNeutralHadrons_handle;
        tas::Handle< std::vector<float> > pfmus_isoPhotons_handle;
        tas::Handle< std::vector<float> > pfmus_mva_emu_handle;
        tas::Handle< std::vector<float> > pfmus_mva_epi_handle;
        tas::Handle< std::vector<float> > pfmus_mva_nothing_gamma_handle;
        tas::Handle< std::vector<float> > pfmus_mva_nothing_nh_handle;
        tas::Handle< std::vector<float> > pfmus_mva_pimu_handle;
        tas::Handle< std::vector<float> > pfmus_pS1E_handle;
        tas::Handle< std::vector<float> > pfmus_pS2E_handle;
        tas::Handle< std::vector<float> > pfmus_rawEcalE_handle;
        tas::Handle< std::vector<float> > pfmus_rawHcalE_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronDeadECAL_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronLoose_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronLooseMVA2_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronLooseMVA3_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMVA_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMVA2category_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMVA2raw_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMVA3category_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMVA3raw_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMedium_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMediumMVA2_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronMediumMVA3_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronTight_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronTightMVA2_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronTightMVA3_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronVLooseMVA2_handle;
        tas::Handle< std::vector<float> > taus_pf_againstElectronVTightMVA3_handle;
        tas::Handle< std::vector<float> > taus_pf_againstMuonLoose_handle;
        tas::Handle< std::vector<float> > taus_pf_againstMuonLoose2_handle;
        tas::Handle< std::vector<float> > taus_pf_againstMuonMedium_handle;
        tas::Handle< std::vector<float> > taus_pf_againstMuonMedium2_handle;
        tas::Handle< std::vector<float> > taus_pf_againstMuonTight_handle;
        tas::Handle< std::vector<float> > taus_pf_againstMuonTight2_handle;
        tas::Handle< std::vector<float> > taus_pf_byCombinedIsolationDeltaBetaCorrRaw_handle;
        tas::Handle< std::vector<float> > taus_pf_byCombinedIsolationDeltaBetaCorrRaw3Hits_handle;
        tas::Handle< std::vector<float> > taus_pf_byDecayModeFinding_handle;
        tas::Handle< std::vector<float> > taus_pf_byIsolationMVA2raw_handle;
        tas::Handle< std::vector<float> > taus_pf_byIsolationMVAraw_handle;
        tas::Handle< std::vector<float> > taus_pf_byLooseCombinedIsolationDeltaBetaCorr_handle;
        tas::Handle< std::vector<float> > taus_pf_byLooseCombinedIsolationDeltaBetaCorr3Hits_handle;
        tas::Handle< std::vector<float> > taus_pf_byLooseIsolationMVA_handle;
        tas::Handle< std::vector<float> > taus_pf_byLooseIsolationMVA2_handle;
        tas::Handle< std::vector<float> > taus_pf_byMediumCombinedIsolationDeltaBetaCorr_handle;
        tas::Handle< std::vector<float> > taus_pf_byMediumCombinedIsolationDeltaBetaCorr3Hits_handle;
        tas::Handle< std::vector<float> > taus_pf_byMediumIsolationMVA_handle;
        tas::Handle< std::vector<float> > taus_pf_byMediumIsolationMVA2_handle;
        tas::Handle< std::vector<float> > taus_pf_byTightCombinedIsolationDeltaBetaCorr_handle;
        tas::Handle< std::vector<float> > taus_pf_byTightCombinedIsolationDeltaBetaCorr3Hits_handle;
        tas::Handle< std::vector<float> > taus_pf_byTightIsolationMVA_handle;
        tas::Handle< std::vector<float> > taus_pf_byTightIsolationMVA2_handle;
        tas::Handle< std::vector<float> > taus_pf_byVLooseCombinedIsolationDeltaBetaCorr_handle;
        tas::Handle< std::vector<float> > photons_e1x5_handle;
        tas::Handle< std::vector<float> > photons_e2x5Max_handle;
        tas::Handle< std::vector<float> > photons_e3x3_handle;
        tas::Handle< std::vector<float> > photons_e5x5_handle;
        tas::Handle< std::vector<float> > photons_ecalIso03_handle;
        tas::Handle< std::vector<float> > photons_ecalIso04_handle;
        tas::Handle< std::vector<float> > photons_hOverE_handle;
        tas::Handle< std::vector<float> > photons_hcalDepth1TowerSumEtBcConeDR03_handle;
        tas::Handle< std::vector<float> > photons_hcalDepth1TowerSumEtBcConeDR04_handle;
        tas::Handle< std::vector<float> > photons_hcalDepth2TowerSumEtBcConeDR03_handle;
        tas::Handle< std::vector<float> > photons_hcalDepth2TowerSumEtBcConeDR04_handle;
        tas::Handle< std::vector<float> > photons_hcalIso03_handle;
        tas::Handle< std::vector<float> > photons_hcalIso04_handle;
        tas::Handle< std::vector<float> > photons_hcalTowerSumEtBcConeDR03_handle;
        tas::Handle< std::vector<float> > photons_hcalTowerSumEtBcConeDR04_handle;
        tas::Handle< std::vector<float> > photons_ntkIsoHollow03_handle;
        tas::Handle< std::vector<float> > photons_ntkIsoHollow04_handle;
        tas::Handle< std::vector<float> > photons_ntkIsoSolid03_handle;
        tas::Handle< std::vector<float> > photons_ntkIsoSolid04_handle;
        tas::Handle< std::vector<float> > photons_sigmaEtaEta_handle;
        tas::Handle< std::vector<float> > photons_sigmaIEtaIEta_handle;
        tas::Handle< std::vector<float> > photons_swissSeed_handle;
        tas::Handle< std::vector<float> > photons_tkIsoHollow03_handle;
        tas::Handle< std::vector<float> > photons_tkIsoHollow04_handle;
        tas::Handle< std::vector<float> > photons_tkIsoSolid03_handle;
        tas::Handle< std::vector<float> > photons_tkIsoSolid04_handle;
        tas::Handle< std::vector<float> > puInfo_trueNumInteractions_handle;
        tas::Handle< std::vector<float> > convs_chi2_handle;
        tas::Handle< std::vector<float> > convs_dl_handle;
        tas::Handle< std::vector<float> > convs_ndof_handle;
        tas::Handle< std::vector<float> > sparm_values_handle;
        tas::Handle< std::vector<float> > scs_clustersSize_handle;
        tas::Handle< std::vector<float> > scs_crystalsSize_handle;
        tas::Handle< std::vector<float> > scs_e1x3_handle;
        tas::Handle< std::vector<float> > scs_e1x5_handle;
        tas::Handle< std::vector<float> > scs_e2nd_handle;
        tas::Handle< std::vector<float> > scs_e2x2_handle;
        tas::Handle< std::vector<float> > scs_e2x5Max_handle;
        tas::Handle< std::vector<float> > scs_e3x1_handle;
        tas::Handle< std::vector<float> > scs_e3x2_handle;
        tas::Handle< std::vector<float> > scs_e3x3_handle;
        tas::Handle< std::vector<float> > scs_e4x4_handle;
        tas::Handle< std::vector<float> > scs_e5x5_handle;
        tas::Handle< std::vector<float> > scs_eMax_handle;
        tas::Handle< std::vector<float> > scs_eSeed_handle;
        tas::Handle< std::vector<float> > scs_energy_handle;
        tas::Handle< std::vector<float> > scs_eta_handle;
        tas::Handle< std::vector<float> > scs_hoe_handle;
        tas::Handle< std::vector<float> > scs_laserCorMax_handle;
        tas::Handle< std::vector<float> > scs_laserCorMean_handle;
        tas::Handle< std::vector<float> > scs_laserCorSeed_handle;
        tas::Handle< std::vector<float> > scs_phi_handle;
        tas::Handle< std::vector<float> > scs_preshowerEnergy_handle;
        tas::Handle< std::vector<float> > scs_rawEnergy_handle;
        tas::Handle< std::vector<float> > scs_sigmaEtaEta_handle;
        tas::Handle< std::vector<float> > scs_sigmaEtaPhi_handle;
        tas::Handle< std::vector<float> > scs_sigmaIEtaIEta_handle;
        tas::Handle< std::vector<float> > scs_sigmaIEtaIEtaSC_handle;
        tas::Handle< std::vector<float> > scs_sigmaIEtaIPhi_handle;
        tas::Handle< std::vector<float> > scs_sigmaIEtaIPhiSC_handle;
        tas::Handle< std::vector<float> > scs_sigmaIPhiIPhi_handle;
        tas::Handle< std::vector<float> > scs_sigmaIPhiIPhiSC_handle;
        tas::Handle< std::vector<float> > scs_sigmaPhiPhi_handle;
        tas::Handle< std::vector<float> > scs_timeSeed_handle;
        tas::Handle< std::vector<float> > svs_anglePV_handle;
        tas::Handle< std::vector<float> > svs_chi2_handle;
        tas::Handle< std::vector<float> > svs_dist3Dsig_handle;
        tas::Handle< std::vector<float> > svs_dist3Dval_handle;
        tas::Handle< std::vector<float> > svs_distXYsig_handle;
        tas::Handle< std::vector<float> > svs_distXYval_handle;
        tas::Handle< std::vector<float> > svs_ndof_handle;
        tas::Handle< std::vector<float> > svs_prob_handle;
        tas::Handle< std::vector<float> > svs_xError_handle;
        tas::Handle< std::vector<float> > svs_yError_handle;
        tas::Handle< std::vector<float> > svs_zError_handle;
        tas::Handle< std::vector<float> > mus_tcmet_deltax_handle;
        tas::Handle< std::vector<float> > mus_tcmet_deltay_handle;
        tas::Handle< std::vector<float> > pfcands_dzpv_handle;
        tas::Handle< std::vector<float> > pfcands_trkiso_handle;
        tas::Handle< std::vector<float> > trks_chi2_handle;
        tas::Handle< std::vector<float> > trks_d0_handle;
        tas::Handle< std::vector<float> > trks_d0Err_handle;
        tas::Handle< std::vector<float> > trks_d0corr_handle;
        tas::Handle< std::vector<float> > trks_d0corrPhi_handle;
        tas::Handle< std::vector<float> > trks_d0phiCov_handle;
        tas::Handle< std::vector<float> > trks_etaErr_handle;
        tas::Handle< std::vector<float> > trks_layer1_charge_handle;
        tas::Handle< std::vector<float> > trks_ndof_handle;
        tas::Handle< std::vector<float> > trks_phiErr_handle;
        tas::Handle< std::vector<float> > trks_ptErr_handle;
        tas::Handle< std::vector<float> > trks_validFraction_handle;
        tas::Handle< std::vector<float> > trks_z0_handle;
        tas::Handle< std::vector<float> > trks_z0Err_handle;
        tas::Handle< std::vector<float> > trks_z0corr_handle;
        tas::Handle< std::vector<float> > trkjets_cor_handle;
        tas::Handle< std::vector<float> > trks_d0Errvtx_handle;
        tas::Handle< std::vector<float> > trks_d0vtx_handle;
        tas::Handle< std::vector<float> > vtxs_chi2_handle;
        tas::Handle< std::vector<float> > vtxs_ndof_handle;
        tas::Handle< std::vector<float> > vtxs_sumpt_handle;
        tas::Handle< std::vector<float> > vtxs_xError_handle;
        tas::Handle< std::vector<float> > vtxs_yError_handle;
        tas::Handle< std::vector<float> > vtxs_zError_handle;
        tas::Handle< std::vector<float> > bsvtxs_chi2_handle;
        tas::Handle< std::vector<float> > bsvtxs_ndof_handle;
        tas::Handle< std::vector<float> > bsvtxs_sumpt_handle;
        tas::Handle< std::vector<float> > bsvtxs_xError_handle;
        tas::Handle< std::vector<float> > bsvtxs_yError_handle;
        tas::Handle< std::vector<float> > bsvtxs_zError_handle;
        tas::Handle< std::vector<std::vector<float> > > els_convs_dcot_handle;
        tas::Handle< std::vector<std::vector<float> > > els_convs_dist_handle;
        tas::Handle< std::vector<std::vector<float> > > els_convs_radius_handle;
        tas::Handle< std::vector<std::vector<float> > > mus_stationShowerDeltaR_handle;
        tas::Handle< std::vector<std::vector<float> > > mus_stationShowerSizeT_handle;
        tas::Handle< std::vector<std::vector<float> > > puInfo_instLumi_handle;
        tas::Handle< std::vector<std::vector<float> > > puInfo_sump_highpt_handle;
        tas::Handle< std::vector<std::vector<float> > > puInfo_sumpt_lowpt_handle;
        tas::Handle< std::vector<std::vector<float> > > puInfo_zpositions_handle;
        tas::Handle< std::vector<std::vector<float> > > vtxs_covMatrix_handle;
        tas::Handle< std::vector<std::vector<float> > > bsvtxs_covMatrix_handle;
        tas::Handle< int > evt_cscLooseHaloId_handle;
        tas::Handle< int > evt_cscTightHaloId_handle;
        tas::Handle< int > evt_ecalLooseHaloId_handle;
        tas::Handle< int > evt_ecalTightHaloId_handle;
        tas::Handle< int > evt_extremeTightHaloId_handle;
        tas::Handle< int > evt_globalLooseHaloId_handle;
        tas::Handle< int > evt_globalTightHaloId_handle;
        tas::Handle< int > evt_hcalLooseHaloId_handle;
        tas::Handle< int > evt_hcalTightHaloId_handle;
        tas::Handle< int > evt_looseHaloId_handle;
        tas::Handle< int > evt_nHaloLikeTracks_handle;
        tas::Handle< int > evt_nHaloTriggerCandidates_handle;
        tas::Handle< int > evt_tightHaloId_handle;
        tas::Handle< int > evt_bsType_handle;
        tas::Handle< int > evt_bunchCrossing_handle;
        tas::Handle< int > evt_experimentType_handle;
        tas::Handle< int > evt_isRealData_handle;
        tas::Handle< int > evt_orbitNumber_handle;
        tas::Handle< int > evt_storeNumber_handle;
        tas::Handle< int > hcalnoise_GetRecHitCount_handle;
        tas::Handle< int > hcalnoise_GetRecHitCount15_handle;
        tas::Handle< int > hcalnoise_maxHPDHits_handle;
        tas::Handle< int > hcalnoise_maxHPDNoOtherHits_handle;
        tas::Handle< int > hcalnoise_maxRBXHits_handle;
        tas::Handle< int > hcalnoise_maxZeros_handle;
        tas::Handle< int > hcalnoise_noiseFilterStatus_handle;
        tas::Handle< int > hcalnoise_noiseType_handle;
        tas::Handle< int > hcalnoise_num10GeVHits_handle;
        tas::Handle< int > hcalnoise_num25GeVHits_handle;
        tas::Handle< int > hcalnoise_numFlatNoiseChannels_handle;
        tas::Handle< int > hcalnoise_numIsolatedNoiseChannels_handle;
        tas::Handle< int > hcalnoise_numProblematicRBXs_handle;
        tas::Handle< int > hcalnoise_numSpikeNoiseChannels_handle;
        tas::Handle< int > hcalnoise_numTS4TS5NoiseChannels_handle;
        tas::Handle< int > hcalnoise_numTriangleNoiseChannels_handle;
        tas::Handle< int > hcalnoise_passHighLevelNoiseFilter_handle;
        tas::Handle< int > hcalnoise_passLooseNoiseFilter_handle;
        tas::Handle< int > hcalnoise_passTightNoiseFilter_handle;
        tas::Handle< int > l1_nemiso_handle;
        tas::Handle< int > l1_nemnoiso_handle;
        tas::Handle< int > l1_njetsc_handle;
        tas::Handle< int > l1_njetsf_handle;
        tas::Handle< int > l1_njetst_handle;
        tas::Handle< int > l1_nmus_handle;
        tas::Handle< int > ls_lumiSecQual_handle;
        tas::Handle< int > pdfinfo_id1_handle;
        tas::Handle< int > pdfinfo_id2_handle;
        tas::Handle< int > sparm_subProcessId_handle;
        tas::Handle< std::vector<int> > evt_ecaliPhiSuspects_handle;
        tas::Handle< std::vector<int> > evt_globaliPhiSuspects_handle;
        tas::Handle< std::vector<int> > evt_hcaliPhiSuspects_handle;
        tas::Handle< std::vector<int> > els_mc3_id_handle;
        tas::Handle< std::vector<int> > els_mc3idx_handle;
        tas::Handle< std::vector<int> > els_mc3_motherid_handle;
        tas::Handle< std::vector<int> > els_mc3_motheridx_handle;
        tas::Handle< std::vector<int> > els_mc_id_handle;
        tas::Handle< std::vector<int> > els_mcidx_handle;
        tas::Handle< std::vector<int> > els_mc_motherid_handle;
        tas::Handle< std::vector<int> > jets_mc3_id_handle;
        tas::Handle< std::vector<int> > jets_mc3idx_handle;
        tas::Handle< std::vector<int> > jets_mc_gpidx_handle;
        tas::Handle< std::vector<int> > jets_mc_id_handle;
        tas::Handle< std::vector<int> > jets_mcidx_handle;
        tas::Handle< std::vector<int> > jets_mc_motherid_handle;
        tas::Handle< std::vector<int> > mus_mc3_id_handle;
        tas::Handle< std::vector<int> > mus_mc3idx_handle;
        tas::Handle< std::vector<int> > mus_mc3_motherid_handle;
        tas::Handle< std::vector<int> > mus_mc3_motheridx_handle;
        tas::Handle< std::vector<int> > mus_mc_id_handle;
        tas::Handle< std::vector<int> > mus_mcidx_handle;
        tas::Handle< std::vector<int> > mus_mc_motherid_handle;
        tas::Handle< std::vector<int> > pfjets_mc3_id_handle;
        tas::Handle< std::vector<int> > pfjets_mc3idx_handle;
        tas::Handle< std::vector<int> > pfjets_mc_gpidx_handle;
        tas::Handle< std::vector<int> > pfjets_mc_id_handle;
        tas::Handle< std::vector<int> > pfjets_mcidx_handle;
        tas::Handle< std::vector<int> > pfjets_mc_motherid_handle;
        tas::Handle< std::vector<int> > photons_mc3_id_handle;
        tas::Handle< std::vector<int> > photons_mc3idx_handle;
        tas::Handle< std::vector<int> > photons_mc3_motherid_handle;
        tas::Handle< std::vector<int> > photons_mc3_motheridx_handle;
        tas::Handle< std::vector<int> > photons_mc_id_handle;
        tas::Handle< std::vector<int> > photons_mcidx_handle;
        tas::Handle< std::vector<int> > photons_mc_motherid_handle;
        tas::Handle< std::vector<int> > trk_mc3_id_handle;
        tas::Handle< std::vector<int> > trk_mc3idx_handle;
        tas::Handle< std::vector<int> > trk_mc3_motherid_handle;
        tas::Handle< std::vector<int> > trk_mc3_motheridx_handle;
        tas::Handle< std::vector<int> > trk_mc_id_handle;
        tas::Handle< std::vector<int> > trk_mcidx_handle;
        tas::Handle< std::vector<int> > trk_mc_motherid_handle;
        tas::Handle< std::vector<int> > els_closestJet_handle;
        tas::Handle< std::vector<int> > els_closestMuon_handle;
        tas::Handle< std::vector<int> > els_pfelsidx_handle;
        tas::Handle< std::vector<int> > els_category_handle;
        tas::Handle< std::vector<int> > els_charge_handle;
        tas::Handle< std::vector<int> > els_ckf_laywithmeas_handle;
        tas::Handle< std::vector<int> > els_class_handle;
        tas::Handle< std::vector<int> > els_conv_delMissHits_handle;
        tas::Handle< std::vector<int> > els_conv_flag_handle;
        tas::Handle< std::vector<int> > els_conv_gsftkidx_handle;
        tas::Handle< std::vector<int> > els_conv_old_delMissHits_handle;
        tas::Handle< std::vector<int> > els_conv_old_flag_handle;
        tas::Handle< std::vector<int> > els_conv_old_gsftkidx_handle;
        tas::Handle< std::vector<int> > els_conv_old_tkidx_handle;
        tas::Handle< std::vector<int> > els_conv_tkidx_handle;
        tas::Handle< std::vector<int> > els_exp_innerlayers_handle;
        tas::Handle< std::vector<int> > els_exp_outerlayers_handle;
        tas::Handle< std::vector<int> > els_fiduciality_handle;
        tas::Handle< std::vector<int> > els_gsftrkidx_handle;
        tas::Handle< std::vector<int> > els_layer1_det_handle;
        tas::Handle< std::vector<int> > els_layer1_layer_handle;
        tas::Handle< std::vector<int> > els_layer1_sizerphi_handle;
        tas::Handle< std::vector<int> > els_layer1_sizerz_handle;
        tas::Handle< std::vector<int> > els_lostHits_handle;
        tas::Handle< std::vector<int> > els_lost_pixelhits_handle;
        tas::Handle< std::vector<int> > els_nSeed_handle;
        tas::Handle< std::vector<int> > els_sccharge_handle;
        tas::Handle< std::vector<int> > els_scindex_handle;
        tas::Handle< std::vector<int> > els_trk_charge_handle;
        tas::Handle< std::vector<int> > els_trkidx_handle;
        tas::Handle< std::vector<int> > els_type_handle;
        tas::Handle< std::vector<int> > els_validHits_handle;
        tas::Handle< std::vector<int> > els_valid_pixelhits_handle;
        tas::Handle< std::vector<int> > genps_id_handle;
        tas::Handle< std::vector<int> > genps_id_mother_handle;
        tas::Handle< std::vector<int> > genps_status_handle;
        tas::Handle< std::vector<int> > gsftrks_charge_handle;
        tas::Handle< std::vector<int> > gsftrks_exp_innerlayers_handle;
        tas::Handle< std::vector<int> > gsftrks_exp_outerlayers_handle;
        tas::Handle< std::vector<int> > gsftrks_layer1_det_handle;
        tas::Handle< std::vector<int> > gsftrks_layer1_layer_handle;
        tas::Handle< std::vector<int> > gsftrks_layer1_sizerphi_handle;
        tas::Handle< std::vector<int> > gsftrks_layer1_sizerz_handle;
        tas::Handle< std::vector<int> > gsftrks_lostHits_handle;
        tas::Handle< std::vector<int> > gsftrks_lost_pixelhits_handle;
        tas::Handle< std::vector<int> > gsftrks_nlayers_handle;
        tas::Handle< std::vector<int> > gsftrks_nlayers3D_handle;
        tas::Handle< std::vector<int> > gsftrks_nlayersLost_handle;
        tas::Handle< std::vector<int> > gsftrks_validHits_handle;
        tas::Handle< std::vector<int> > gsftrks_valid_pixelhits_handle;
        tas::Handle< std::vector<int> > hyp_ll_charge_handle;
        tas::Handle< std::vector<int> > hyp_ll_id_handle;
        tas::Handle< std::vector<int> > hyp_ll_index_handle;
        tas::Handle< std::vector<int> > hyp_ll_lostHits_handle;
        tas::Handle< std::vector<int> > hyp_ll_validHits_handle;
        tas::Handle< std::vector<int> > hyp_lt_charge_handle;
        tas::Handle< std::vector<int> > hyp_lt_id_handle;
        tas::Handle< std::vector<int> > hyp_lt_index_handle;
        tas::Handle< std::vector<int> > hyp_lt_lostHits_handle;
        tas::Handle< std::vector<int> > hyp_lt_validHits_handle;
        tas::Handle< std::vector<int> > hyp_njets_handle;
        tas::Handle< std::vector<int> > hyp_nojets_handle;
        tas::Handle< std::vector<int> > hyp_type_handle;
        tas::Handle< std::vector<int> > hyp_FVFit_ndf_handle;
        tas::Handle< std::vector<int> > hyp_FVFit_status_handle;
        tas::Handle< std::vector<int> > hyp_ll_mc_id_handle;
        tas::Handle< std::vector<int> > hyp_ll_mc_motherid_handle;
        tas::Handle< std::vector<int> > hyp_lt_mc_id_handle;
        tas::Handle< std::vector<int> > hyp_lt_mc_motherid_handle;
        tas::Handle< std::vector<int> > pfjets_mcflavorAlgo_handle;
        tas::Handle< std::vector<int> > pfjets_mcflavorPhys_handle;
        tas::Handle< std::vector<int> > jets_closestElectron_handle;
        tas::Handle< std::vector<int> > jets_closestMuon_handle;
        tas::Handle< std::vector<int> > l1_emiso_ieta_handle;
        tas::Handle< std::vector<int> > l1_emiso_iphi_handle;
        tas::Handle< std::vector<int> > l1_emiso_rawId_handle;
        tas::Handle< std::vector<int> > l1_emiso_type_handle;
        tas::Handle< std::vector<int> > l1_emnoiso_ieta_handle;
        tas::Handle< std::vector<int> > l1_emnoiso_iphi_handle;
        tas::Handle< std::vector<int> > l1_emnoiso_rawId_handle;
        tas::Handle< std::vector<int> > l1_emnoiso_type_handle;
        tas::Handle< std::vector<int> > l1_jetsc_ieta_handle;
        tas::Handle< std::vector<int> > l1_jetsc_iphi_handle;
        tas::Handle< std::vector<int> > l1_jetsc_rawId_handle;
        tas::Handle< std::vector<int> > l1_jetsc_type_handle;
        tas::Handle< std::vector<int> > l1_jetsf_ieta_handle;
        tas::Handle< std::vector<int> > l1_jetsf_iphi_handle;
        tas::Handle< std::vector<int> > l1_jetsf_rawId_handle;
        tas::Handle< std::vector<int> > l1_jetsf_type_handle;
        tas::Handle< std::vector<int> > l1_jetst_ieta_handle;
        tas::Handle< std::vector<int> > l1_jetst_iphi_handle;
        tas::Handle< std::vector<int> > l1_jetst_rawId_handle;
        tas::Handle< std::vector<int> > l1_jetst_type_handle;
        tas::Handle< std::vector<int> > l1_mus_flags_handle;
        tas::Handle< std::vector<int> > l1_mus_q_handle;
        tas::Handle< std::vector<int> > l1_mus_qual_handle;
        tas::Handle< std::vector<int> > l1_mus_qualFlags_handle;
        tas::Handle< std::vector<int> > mus_met_flag_handle;
        tas::Handle< std::vector<int> > mus_closestEle_handle;
        tas::Handle< std::vector<int> > mus_closestJet_handle;
        tas::Handle< std::vector<int> > mus_pfmusidx_handle;
        tas::Handle< std::vector<int> > mus_charge_handle;
        tas::Handle< std::vector<int> > mus_gfit_validHits_handle;
        tas::Handle< std::vector<int> > mus_gfit_validSTAHits_handle;
        tas::Handle< std::vector<int> > mus_gfit_validSiHits_handle;
        tas::Handle< std::vector<int> > mus_goodmask_handle;
        tas::Handle< std::vector<int> > mus_iso03_ntrk_handle;
        tas::Handle< std::vector<int> > mus_iso05_ntrk_handle;
        tas::Handle< std::vector<int> > mus_lostHits_handle;
        tas::Handle< std::vector<int> > mus_muonBestTrackType_handle;
        tas::Handle< std::vector<int> > mus_nOverlaps_handle;
        tas::Handle< std::vector<int> > mus_nmatches_handle;
        tas::Handle< std::vector<int> > mus_numberOfMatchedStations_handle;
        tas::Handle< std::vector<int> > mus_overlap0_handle;
        tas::Handle< std::vector<int> > mus_overlap1_handle;
        tas::Handle< std::vector<int> > mus_pfcharge_handle;
        tas::Handle< std::vector<int> > mus_pfflag_handle;
        tas::Handle< std::vector<int> > mus_pfparticleId_handle;
        tas::Handle< std::vector<int> > mus_pid_PFMuon_handle;
        tas::Handle< std::vector<int> > mus_pid_TM2DCompatibilityLoose_handle;
        tas::Handle< std::vector<int> > mus_pid_TM2DCompatibilityTight_handle;
        tas::Handle< std::vector<int> > mus_pid_TMLastStationLoose_handle;
        tas::Handle< std::vector<int> > mus_pid_TMLastStationTight_handle;
        tas::Handle< std::vector<int> > mus_sta_validHits_handle;
        tas::Handle< std::vector<int> > mus_timeDirection_handle;
        tas::Handle< std::vector<int> > mus_timeNumStationsUsed_handle;
        tas::Handle< std::vector<int> > mus_trk_charge_handle;
        tas::Handle< std::vector<int> > mus_trkidx_handle;
        tas::Handle< std::vector<int> > mus_type_handle;
        tas::Handle< std::vector<int> > mus_validHits_handle;
        tas::Handle< std::vector<int> > pfcands_charge_handle;
        tas::Handle< std::vector<int> > pfcands_flag_handle;
        tas::Handle< std::vector<int> > pfcands_particleId_handle;
        tas::Handle< std::vector<int> > pfcands_pfelsidx_handle;
        tas::Handle< std::vector<int> > pfcands_pfmusidx_handle;
        tas::Handle< std::vector<int> > pfcands_trkidx_handle;
        tas::Handle< std::vector<int> > pfcands_vtxidx_handle;
        tas::Handle< std::vector<int> > pfels_elsidx_handle;
        tas::Handle< std::vector<int> > pfels_charge_handle;
        tas::Handle< std::vector<int> > pfels_flag_handle;
        tas::Handle< std::vector<int> > pfels_particleId_handle;
        tas::Handle< std::vector<int> > pfjets_chargedHadronMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_chargedMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_electronMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_hfEmMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_hfHadronMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_muonMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_neutralHadronMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_neutralMultiplicity_handle;
        tas::Handle< std::vector<int> > pfjets_photonMultiplicity_handle;
        tas::Handle< std::vector<int> > pfmus_musidx_handle;
        tas::Handle< std::vector<int> > pfmus_charge_handle;
        tas::Handle< std::vector<int> > pfmus_flag_handle;
        tas::Handle< std::vector<int> > pfmus_particleId_handle;
        tas::Handle< std::vector<int> > taus_pf_charge_handle;
        tas::Handle< std::vector<int> > taus_pf_pfjetIndex_handle;
        tas::Handle< std::vector<int> > photons_fiduciality_handle;
        tas::Handle< std::vector<int> > photons_scindex_handle;
        tas::Handle< std::vector<int> > puInfo_bunchCrossing_handle;
        tas::Handle< std::vector<int> > puInfo_nPUvertices_handle;
        tas::Handle< std::vector<int> > convs_algo_handle;
        tas::Handle< std::vector<int> > convs_isConverted_handle;
        tas::Handle< std::vector<int> > convs_quality_handle;
        tas::Handle< std::vector<int> > scs_detIdSeed_handle;
        tas::Handle< std::vector<int> > scs_elsidx_handle;
        tas::Handle< std::vector<int> > scs_severitySeed_handle;
        tas::Handle< std::vector<int> > svs_isKs_handle;
        tas::Handle< std::vector<int> > svs_isLambda_handle;
        tas::Handle< std::vector<int> > svs_mc3_id_handle;
        tas::Handle< std::vector<int> > svs_nTrks_handle;
        tas::Handle< std::vector<int> > mus_tcmet_flag_handle;
        tas::Handle< std::vector<int> > trks_algo_handle;
        tas::Handle< std::vector<int> > trks_charge_handle;
        tas::Handle< std::vector<int> > trks_exp_innerlayers_handle;
        tas::Handle< std::vector<int> > trks_exp_outerlayers_handle;
        tas::Handle< std::vector<int> > trks_layer1_det_handle;
        tas::Handle< std::vector<int> > trks_layer1_layer_handle;
        tas::Handle< std::vector<int> > trks_layer1_sizerphi_handle;
        tas::Handle< std::vector<int> > trks_layer1_sizerz_handle;
        tas::Handle< std::vector<int> > trks_lostHits_handle;
        tas::Handle< std::vector<int> > trks_lost_pixelhits_handle;
        tas::Handle< std::vector<int> > trks_nLoops_handle;
        tas::Handle< std::vector<int> > trks_nlayers_handle;
        tas::Handle< std::vector<int> > trks_nlayers3D_handle;
        tas::Handle< std::vector<int> > trks_nlayersLost_handle;
        tas::Handle< std::vector<int> > trks_pvidx0_handle;
        tas::Handle< std::vector<int> > trks_pvidx1_handle;
        tas::Handle< std::vector<int> > trks_qualityMask_handle;
        tas::Handle< std::vector<int> > trks_validHits_handle;
        tas::Handle< std::vector<int> > trks_valid_pixelhits_handle;
        tas::Handle< std::vector<int> > trks_elsidx_handle;
        tas::Handle< std::vector<int> > trk_musidx_handle;
        tas::Handle< std::vector<int> > trkjets_ntrks_handle;
        tas::Handle< std::vector<int> > trkjets_vtxs_idx_handle;
        tas::Handle< std::vector<int> > vtxs_isFake_handle;
        tas::Handle< std::vector<int> > vtxs_isValid_handle;
        tas::Handle< std::vector<int> > vtxs_tracksSize_handle;
        tas::Handle< std::vector<int> > bsvtxs_isFake_handle;
        tas::Handle< std::vector<int> > bsvtxs_isValid_handle;
        tas::Handle< std::vector<int> > bsvtxs_tracksSize_handle;
        tas::Handle< std::vector<std::vector<int> > > els_convs_delMissHits_handle;
        tas::Handle< std::vector<std::vector<int> > > els_convs_flag_handle;
        tas::Handle< std::vector<std::vector<int> > > els_convs_gsftkidx_handle;
        tas::Handle< std::vector<std::vector<int> > > els_convs_tkidx_handle;
        tas::Handle< std::vector<std::vector<int> > > genps_lepdaughter_id_handle;
        tas::Handle< std::vector<std::vector<int> > > genps_lepdaughter_idx_handle;
        tas::Handle< std::vector<std::vector<int> > > hlt_trigObjs_id_handle;
        tas::Handle< std::vector<std::vector<int> > > hyp_jets_idx_handle;
        tas::Handle< std::vector<std::vector<int> > > hyp_other_jets_idx_handle;
        tas::Handle< std::vector<std::vector<int> > > mus_nStationCorrelatedHits_handle;
        tas::Handle< std::vector<std::vector<int> > > mus_nStationHits_handle;
        tas::Handle< std::vector<std::vector<int> > > pfjets_pfcandIndicies_handle;
        tas::Handle< std::vector<std::vector<int> > > taus_pf_pfcandIndicies_handle;
        tas::Handle< std::vector<std::vector<int> > > puInfo_ntrks_highpt_handle;
        tas::Handle< std::vector<std::vector<int> > > puInfo_ntrks_lowpt_handle;
        tas::Handle< std::vector<std::vector<int> > > convs_nHitsBeforeVtx_handle;
        tas::Handle< std::vector<std::vector<int> > > convs_tkalgo_handle;
        tas::Handle< std::vector<std::vector<int> > > convs_tkidx_handle;
        tas::Handle< unsigned int > els_HLT_Ele17_Ele8_L1sL1DoubleEG137_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele17_Ele8_LeadingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele17_Ele8_Mass50_LeadingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele17_Ele8_Mass50_TrailingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele17_Ele8_TrailingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele17_Ele8_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele20_SC4_Mass50_LeadingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele20_SC4_Mass50_TrailingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele27_WP80_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele32_SC17_Mass50_LeadingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Ele32_SC17_Mass50_TrailingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Mu17_Ele8_TrailingLeg_version_handle;
        tas::Handle< unsigned int > els_HLT_Mu17_Ele8_version_handle;
        tas::Handle< unsigned int > els_HLT_Mu8_Ele17_version_handle;
        tas::Handle< unsigned int > evt_nels_handle;
        tas::Handle< unsigned int > evt_detectorStatus_handle;
        tas::Handle< unsigned int > evt_event_handle;
        tas::Handle< unsigned int > evt_lumiBlock_handle;
        tas::Handle< unsigned int > evt_run_handle;
        tas::Handle< unsigned int > genps_flavorHistoryFilterResult_handle;
        tas::Handle< unsigned int > evt_ngenjets_handle;
        tas::Handle< unsigned int > genps_signalProcessID_handle;
        tas::Handle< unsigned int > evt_njets_handle;
        tas::Handle< unsigned int > l1_bits1_handle;
        tas::Handle< unsigned int > l1_bits2_handle;
        tas::Handle< unsigned int > l1_bits3_handle;
        tas::Handle< unsigned int > l1_bits4_handle;
        tas::Handle< unsigned int > l1_techbits1_handle;
        tas::Handle< unsigned int > l1_techbits2_handle;
        tas::Handle< unsigned int > ls_lsNumber_handle;
        tas::Handle< unsigned int > ls_numOrbit_handle;
        tas::Handle< unsigned int > ls_startOrbit_handle;
        tas::Handle< unsigned int > mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_version_handle;
        tas::Handle< unsigned int > mus_HLT_IsoMu24_eta2p1_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_Ele8_LeadingLeg_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_Ele8_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_Mu8_LeadingLeg_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_Mu8_TrailingLeg_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_Mu8_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_TkMu8_LeadingLeg_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_TkMu8_TrailingLeg_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu17_TkMu8_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu8_Ele17_TrailingLeg_version_handle;
        tas::Handle< unsigned int > mus_HLT_Mu8_Ele17_version_handle;
        tas::Handle< unsigned int > evt_nphotons_handle;
        tas::Handle< unsigned int > evt_ecalRecoStatus_handle;
        tas::Handle< unsigned int > evt_nscs_handle;
        tas::Handle< unsigned int > evt_ntrkjets_handle;
        tas::Handle< unsigned int > evt_nvtxs_handle;
        tas::Handle< unsigned int > evt_nbsvtxs_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele17_Ele8_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele17_Ele8_L1sL1DoubleEG137_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele17_Ele8_LeadingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele17_Ele8_Mass50_LeadingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele17_Ele8_Mass50_TrailingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele17_Ele8_TrailingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele20_SC4_Mass50_LeadingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele20_SC4_Mass50_TrailingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele27_WP80_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele32_SC17_Mass50_LeadingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Ele32_SC17_Mass50_TrailingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Mu17_Ele8_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Mu17_Ele8_TrailingLeg_handle;
        tas::Handle< std::vector<unsigned int> > els_HLT_Mu8_Ele17_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012ext_loose_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012ext_medium_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012ext_tight_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012ext_veto_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012_loose_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012_medium_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012_tight_handle;
        tas::Handle< std::vector<unsigned int> > els_id2012_veto_handle;
        tas::Handle< std::vector<unsigned int> > hlt_prescales_handle;
        tas::Handle< std::vector<unsigned int> > l1_prescales_handle;
        tas::Handle< std::vector<unsigned int> > l1_techtrigprescales_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_IsoMu24_eta2p1_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_Ele8_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_Ele8_LeadingLeg_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_LeadingLeg_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_TrailingLeg_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_LeadingLeg_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_TrailingLeg_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu8_Ele17_handle;
        tas::Handle< std::vector<unsigned int> > mus_HLT_Mu8_Ele17_TrailingLeg_handle;
        tas::Handle< unsigned long long > evt_timestamp_handle;
        tas::Handle< int > evt_nEvts_handle;
        tas::Handle< float > evt_filt_eff_handle;

};


// public interface 
// ------------------------------------------------------------------------------------------------- //

namespace tas
{
    bool passHLTTrigger(const TString& trigName);
    bool passL1Trigger(const TString& trigName);

    const TBits& hlt_bits();
    const std::vector<TString>& evt_CMS2tag();
    const std::vector<TString>& evt_dataset();
    const std::vector<TString>& hlt_trigNames();
    const std::vector<TString>& l1_techtrigNames();
    const std::vector<TString>& l1_trigNames();
    const std::vector<TString>& evt_errCategory();
    const std::vector<TString>& evt_errModule();
    const std::vector<TString>& evt_errSeverity();
    const std::vector<TString>& sparm_comment();
    const std::vector<TString>& sparm_names();
    const bool& evt_eventHasHalo();
    const bool& hcalnoise_HasBadRBXTS4TS5();
    const bool& ls_isValid();
    const bool& filt_ecalBE();
    const bool& filt_ecalDR();
    const bool& filt_ecalLaser();
    const bool& filt_ecalTP();
    const bool& filt_eeBadSc();
    const bool& filt_greedyMuon();
    const bool& filt_hcalLaser();
    const bool& filt_inconsistentMuon();
    const bool& filt_jetIDFailure();
    const bool& filt_multiEvent();
    const bool& filt_trackingFailure();
    const bool& evt_hbheFilter();
    const std::vector<bool>& els_conv_vtx_flag();
    const std::vector<bool>& els_passingMvaPreselection();
    const std::vector<bool>& els_passingPflowPreselection();
    const std::vector<bool>& mus_isRPCMuon();
    const std::vector<bool>& mus_tightMatch();
    const std::vector<bool>& mus_updatedSta();
    const std::vector<bool>& pfcands_isMuIso();
    const std::vector<bool>& photons_haspixelSeed();
    const std::vector<double>& jets_closestElectron_DR();
    const std::vector<double>& jets_closestMuon_DR();
    const float& evt_bs_Xwidth();
    const float& evt_bs_XwidthErr();
    const float& evt_bs_Ywidth();
    const float& evt_bs_YwidthErr();
    const float& evt_bs_dxdz();
    const float& evt_bs_dxdzErr();
    const float& evt_bs_dydz();
    const float& evt_bs_dydzErr();
    const float& evt_bs_sigmaZ();
    const float& evt_bs_sigmaZErr();
    const float& evt_bs_xErr();
    const float& evt_bs_yErr();
    const float& evt_bs_zErr();
    const float& evt_bField();
    const float& evt_rho();
    const float& evt_rhoJEC();
    const float& evt_fixgrid_all_rho();
    const float& evt_fixgridfastjet_all_rho();
    const float& evt_kfactor();
    const float& evt_scale1fb();
    const float& evt_xsec_excl();
    const float& evt_xsec_incl();
    const float& gen_met();
    const float& gen_metPhi();
    const float& genps_alphaQCD();
    const float& genps_pthat();
    const float& genps_qScale();
    const float& genps_weight();
    const float& gen_sumEt();
    const float& hcalnoise_GetRecHitEnergy();
    const float& hcalnoise_GetRecHitEnergy15();
    const float& hcalnoise_GetTotalCalibCharge();
    const float& hcalnoise_TS4TS5NoiseSumE();
    const float& hcalnoise_TS4TS5NoiseSumEt();
    const float& hcalnoise_eventChargeFraction();
    const float& hcalnoise_eventEMEnergy();
    const float& hcalnoise_eventEMFraction();
    const float& hcalnoise_eventHadEnergy();
    const float& hcalnoise_eventTrackEnergy();
    const float& hcalnoise_flatNoiseSumE();
    const float& hcalnoise_flatNoiseSumEt();
    const float& hcalnoise_isolatedNoiseSumE();
    const float& hcalnoise_isolatedNoiseSumEt();
    const float& hcalnoise_max10GeVHitTime();
    const float& hcalnoise_max25GeVHitTime();
    const float& hcalnoise_maxE10TS();
    const float& hcalnoise_maxE2Over10TS();
    const float& hcalnoise_maxE2TS();
    const float& hcalnoise_min10GeVHitTime();
    const float& hcalnoise_min25GeVHitTime();
    const float& hcalnoise_minE10TS();
    const float& hcalnoise_minE2Over10TS();
    const float& hcalnoise_minE2TS();
    const float& hcalnoise_minHPDEMF();
    const float& hcalnoise_minRBXEMF();
    const float& hcalnoise_rms10GeVHitTime();
    const float& hcalnoise_rms25GeVHitTime();
    const float& hcalnoise_spikeNoiseSumE();
    const float& hcalnoise_spikeNoiseSumEt();
    const float& hcalnoise_triangleNoiseSumE();
    const float& hcalnoise_triangleNoiseSumEt();
    const float& evt_kt6calo_central_rho();
    const float& evt_kt6calo_muhlt_rho();
    const float& evt_kt6calo_rho();
    const float& evt_kt6pf_ctrChargedPU_rho();
    const float& evt_kt6pf_ctrNeutral_rho();
    const float& evt_kt6pf_ctrNeutralTight_rho();
    const float& evt_kt6pf_foregiso_rho();
    const float& l1_met_etTot();
    const float& l1_met_met();
    const float& l1_mht_htTot();
    const float& l1_mht_mht();
    const float& ls_avgInsDelLumi();
    const float& ls_avgInsDelLumiErr();
    const float& ls_avgInsRecLumi();
    const float& ls_avgInsRecLumiErr();
    const float& ls_deadFrac();
    const float& ls_intgDelLumi();
    const float& ls_intgRecLumi();
    const float& ls_lumiSectionLength();
    const float& evt_ecalendcapm_met();
    const float& evt_ecalendcapm_metPhi();
    const float& evt_ecalendcapp_met();
    const float& evt_ecalendcapp_metPhi();
    const float& evt_ecalmet();
    const float& evt_ecalmetPhi();
    const float& evt_endcapm_met();
    const float& evt_endcapm_metPhi();
    const float& evt_endcapp_met();
    const float& evt_endcapp_metPhi();
    const float& evt_hcalendcapm_met();
    const float& evt_hcalendcapm_metPhi();
    const float& evt_hcalendcapp_met();
    const float& evt_hcalendcapp_metPhi();
    const float& evt_hcalmet();
    const float& evt_hcalmetPhi();
    const float& evt_met();
    const float& evt_met_EtGt3();
    const float& evt_metHO();
    const float& evt_metHOPhi();
    const float& evt_metHOSig();
    const float& evt_metMuonCorr();
    const float& evt_metMuonCorrPhi();
    const float& evt_metMuonCorrSig();
    const float& evt_metMuonJESCorr();
    const float& evt_metMuonJESCorrPhi();
    const float& evt_metMuonJESCorrSig();
    const float& evt_metNoHF();
    const float& evt_metNoHFHO();
    const float& evt_metNoHFHOPhi();
    const float& evt_metNoHFHOSig();
    const float& evt_metNoHFPhi();
    const float& evt_metNoHFSig();
    const float& evt_metOpt();
    const float& evt_metOptHO();
    const float& evt_metOptHOPhi();
    const float& evt_metOptHOSig();
    const float& evt_metOptNoHF();
    const float& evt_metOptNoHFHO();
    const float& evt_metOptNoHFHOPhi();
    const float& evt_metOptNoHFHOSig();
    const float& evt_metOptNoHFPhi();
    const float& evt_metOptNoHFSig();
    const float& evt_metOptPhi();
    const float& evt_metOptSig();
    const float& evt_metPhi();
    const float& evt_metPhi_EtGt3();
    const float& evt_metSig();
    const float& evt_sumet();
    const float& evt_sumet_EtGt3();
    const float& evt_sumetHO();
    const float& evt_sumetMuonCorr();
    const float& evt_sumetMuonJESCorr();
    const float& evt_sumetNoHF();
    const float& evt_sumetNoHFHO();
    const float& evt_sumetOpt();
    const float& evt_sumetOptHO();
    const float& evt_sumetOptNoHF();
    const float& evt_sumetOptNoHFHO();
    const float& pdfinfo_pdf1();
    const float& pdfinfo_pdf2();
    const float& pdfinfo_scale();
    const float& pdfinfo_x1();
    const float& pdfinfo_x2();
    const float& evt_fixgrid_rho_all();
    const float& evt_fixgrid_rho_ctr();
    const float& evt_fixgrid_rho_fwd();
    const float& evt_pfmet();
    const float& evt_pfmetPhi();
    const float& evt_pfmetPhi_type1cor();
    const float& evt_pfmetSig();
    const float& evt_pfmetSignificance();
    const float& evt_pfmet_type1cor();
    const float& evt_pfsumet();
    const float& sparm_filterEfficiency();
    const float& sparm_pdfScale();
    const float& sparm_pdfWeight1();
    const float& sparm_pdfWeight2();
    const float& sparm_weight();
    const float& sparm_xsec();
    const float& evt_pf_tcmet();
    const float& evt_pf_tcmetPhi();
    const float& evt_pf_tcmetSig();
    const float& evt_pf_tcsumet();
    const float& evt_tcmet();
    const float& evt_tcmetPhi();
    const float& evt_tcmetSig();
    const float& evt_tcsumet();
    const float& evt_ww_rho_act();
    const float& evt_ww_rho();
    const float& evt_ww_rho_rnd();
    const float& evt_ww_rho_vor();
    const LorentzVector & evt_bsp4();
    const LorentzVector & l1_met_p4();
    const LorentzVector & l1_mht_p4();
    const std::vector<LorentzVector >& els_mc_motherp4();
    const std::vector<LorentzVector >& els_mc_p4();
    const std::vector<LorentzVector >& jets_mc_gp_p4();
    const std::vector<LorentzVector >& jets_mc_motherp4();
    const std::vector<LorentzVector >& jets_mc_p4();
    const std::vector<LorentzVector >& mus_mc_motherp4();
    const std::vector<LorentzVector >& mus_mc_p4();
    const std::vector<LorentzVector >& pfjets_mc_gp_p4();
    const std::vector<LorentzVector >& pfjets_mc_motherp4();
    const std::vector<LorentzVector >& pfjets_mc_p4();
    const std::vector<LorentzVector >& photons_mc_motherp4();
    const std::vector<LorentzVector >& photons_mc_p4();
    const std::vector<LorentzVector >& trk_mcp4();
    const std::vector<LorentzVector >& els_conv_pos_p4();
    const std::vector<LorentzVector >& els_inner_position();
    const std::vector<LorentzVector >& els_outer_position();
    const std::vector<LorentzVector >& els_p4();
    const std::vector<LorentzVector >& els_p4In();
    const std::vector<LorentzVector >& els_p4Out();
    const std::vector<LorentzVector >& els_trk_p4();
    const std::vector<LorentzVector >& els_vertex_p4();
    const std::vector<LorentzVector >& genjets_p4();
    const std::vector<LorentzVector >& genps_p4();
    const std::vector<LorentzVector >& genps_prod_vtx();
    const std::vector<LorentzVector >& gsftrks_inner_position();
    const std::vector<LorentzVector >& gsftrks_outer_p4();
    const std::vector<LorentzVector >& gsftrks_outer_position();
    const std::vector<LorentzVector >& gsftrks_p4();
    const std::vector<LorentzVector >& gsftrks_vertex_p4();
    const std::vector<LorentzVector >& hyp_ll_p4();
    const std::vector<LorentzVector >& hyp_ll_trk_p4();
    const std::vector<LorentzVector >& hyp_lt_p4();
    const std::vector<LorentzVector >& hyp_lt_trk_p4();
    const std::vector<LorentzVector >& hyp_p4();
    const std::vector<LorentzVector >& hyp_FVFit_p4();
    const std::vector<LorentzVector >& hyp_FVFit_v4();
    const std::vector<LorentzVector >& hyp_ll_mc_p4();
    const std::vector<LorentzVector >& hyp_lt_mc_p4();
    const std::vector<LorentzVector >& jets_p4();
    const std::vector<LorentzVector >& jets_vertex_p4();
    const std::vector<LorentzVector >& l1_emiso_p4();
    const std::vector<LorentzVector >& l1_emnoiso_p4();
    const std::vector<LorentzVector >& l1_jetsc_p4();
    const std::vector<LorentzVector >& l1_jetsf_p4();
    const std::vector<LorentzVector >& l1_jetst_p4();
    const std::vector<LorentzVector >& l1_mus_p4();
    const std::vector<LorentzVector >& mus_ecalpos_p4();
    const std::vector<LorentzVector >& mus_fitpicky_p4();
    const std::vector<LorentzVector >& mus_fittev_p4();
    const std::vector<LorentzVector >& mus_fittpfms_p4();
    const std::vector<LorentzVector >& mus_gfit_outerPos_p4();
    const std::vector<LorentzVector >& mus_gfit_p4();
    const std::vector<LorentzVector >& mus_gfit_vertex_p4();
    const std::vector<LorentzVector >& mus_p4();
    const std::vector<LorentzVector >& mus_pfp4();
    const std::vector<LorentzVector >& mus_pfposAtEcal_p4();
    const std::vector<LorentzVector >& mus_sta_p4();
    const std::vector<LorentzVector >& mus_sta_vertex_p4();
    const std::vector<LorentzVector >& mus_trk_p4();
    const std::vector<LorentzVector >& mus_vertex_p4();
    const std::vector<LorentzVector >& pfcands_p4();
    const std::vector<LorentzVector >& pfcands_posAtEcal_p4();
    const std::vector<LorentzVector >& pfels_p4();
    const std::vector<LorentzVector >& pfels_posAtEcal_p4();
    const std::vector<LorentzVector >& pfjets_p4();
    const std::vector<LorentzVector >& pfmus_p4();
    const std::vector<LorentzVector >& pfmus_posAtEcal_p4();
    const std::vector<LorentzVector >& taus_pf_p4();
    const std::vector<LorentzVector >& photons_p4();
    const std::vector<LorentzVector >& convs_refitPairMom_p4();
    const std::vector<LorentzVector >& convs_vtxpos();
    const std::vector<LorentzVector >& scs_p4();
    const std::vector<LorentzVector >& scs_pos_p4();
    const std::vector<LorentzVector >& scs_vtx_p4();
    const std::vector<LorentzVector >& svs_flight();
    const std::vector<LorentzVector >& svs_mc3_p4();
    const std::vector<LorentzVector >& svs_p4();
    const std::vector<LorentzVector >& svs_position();
    const std::vector<LorentzVector >& svs_refitp4();
    const std::vector<LorentzVector >& trks_inner_position();
    const std::vector<LorentzVector >& trks_outer_p4();
    const std::vector<LorentzVector >& trks_outer_position();
    const std::vector<LorentzVector >& trks_trk_p4();
    const std::vector<LorentzVector >& trks_vertex_p4();
    const std::vector<LorentzVector >& trkjets_p4();
    const std::vector<LorentzVector >& vtxs_position();
    const std::vector<LorentzVector >& bsvtxs_position();
    const std::vector<std::vector<LorentzVector > >& els_convs_pos_p4();
    const std::vector<std::vector<LorentzVector > >& genps_lepdaughter_p4();
    const std::vector<std::vector<LorentzVector > >& hlt_trigObjs_p4();
    const std::vector<std::vector<LorentzVector > >& hyp_jets_p4();
    const std::vector<std::vector<LorentzVector > >& hyp_other_jets_p4();
    const std::vector<float>& jpts_combinedSecondaryVertexBJetTag();
    const std::vector<float>& jpts_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& jpts_jetBProbabilityBJetTag();
    const std::vector<float>& jpts_jetProbabilityBJetTag();
    const std::vector<float>& jpts_simpleSecondaryVertexBJetTag();
    const std::vector<float>& jpts_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& jpts_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& jpts_softElectronByIP3dBJetTag();
    const std::vector<float>& jpts_softElectronByPtBJetTag();
    const std::vector<float>& jpts_softElectronTag();
    const std::vector<float>& jpts_softMuonBJetTag();
    const std::vector<float>& jpts_softMuonByIP3dBJetTag();
    const std::vector<float>& jpts_softMuonByPtBJetTag();
    const std::vector<float>& jpts_trackCountingHighEffBJetTag();
    const std::vector<float>& jpts_trackCountingHighPurBJetTag();
    const std::vector<float>& jets_combinedSecondaryVertexBJetTag();
    const std::vector<float>& jets_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& jets_jetBProbabilityBJetTag();
    const std::vector<float>& jets_jetProbabilityBJetTag();
    const std::vector<float>& jets_simpleSecondaryVertexBJetTag();
    const std::vector<float>& jets_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& jets_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& jets_softElectronByIP3dBJetTag();
    const std::vector<float>& jets_softElectronByPtBJetTag();
    const std::vector<float>& jets_softElectronTag();
    const std::vector<float>& jets_softMuonBJetTag();
    const std::vector<float>& jets_softMuonByIP3dBJetTag();
    const std::vector<float>& jets_softMuonByPtBJetTag();
    const std::vector<float>& jets_trackCountingHighEffBJetTag();
    const std::vector<float>& jets_trackCountingHighPurBJetTag();
    const std::vector<float>& pfjets_combinedSecondaryVertexBJetTag();
    const std::vector<float>& pfjets_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& pfjets_jetBProbabilityBJetTag();
    const std::vector<float>& pfjets_jetProbabilityBJetTag();
    const std::vector<float>& pfjets_simpleSecondaryVertexBJetTag();
    const std::vector<float>& pfjets_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& pfjets_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& pfjets_softElectronByIP3dBJetTag();
    const std::vector<float>& pfjets_softElectronByPtBJetTag();
    const std::vector<float>& pfjets_softElectronTag();
    const std::vector<float>& pfjets_softMuonBJetTag();
    const std::vector<float>& pfjets_softMuonByIP3dBJetTag();
    const std::vector<float>& pfjets_softMuonByPtBJetTag();
    const std::vector<float>& pfjets_trackCountingHighEffBJetTag();
    const std::vector<float>& pfjets_trackCountingHighPurBJetTag();
    const std::vector<float>& trkjets_combinedSecondaryVertexBJetTag();
    const std::vector<float>& trkjets_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& trkjets_jetBProbabilityBJetTag();
    const std::vector<float>& trkjets_jetProbabilityBJetTag();
    const std::vector<float>& trkjets_simpleSecondaryVertexBJetTag();
    const std::vector<float>& trkjets_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& trkjets_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& trkjets_softElectronByIP3dBJetTag();
    const std::vector<float>& trkjets_softElectronByPtBJetTag();
    const std::vector<float>& trkjets_softElectronTag();
    const std::vector<float>& trkjets_softMuonBJetTag();
    const std::vector<float>& trkjets_softMuonByIP3dBJetTag();
    const std::vector<float>& trkjets_softMuonByPtBJetTag();
    const std::vector<float>& trkjets_trackCountingHighEffBJetTag();
    const std::vector<float>& trkjets_trackCountingHighPurBJetTag();
    const std::vector<float>& evt_bs_covMatrix();
    const std::vector<float>& els_mc3dr();
    const std::vector<float>& els_mcdr();
    const std::vector<float>& jets_mc3dr();
    const std::vector<float>& jets_mcdr();
    const std::vector<float>& jets_mc_emEnergy();
    const std::vector<float>& jets_mc_gpdr();
    const std::vector<float>& jets_mc_hadEnergy();
    const std::vector<float>& jets_mc_invEnergy();
    const std::vector<float>& jets_mc_otherEnergy();
    const std::vector<float>& mus_mc3dr();
    const std::vector<float>& mus_mcdr();
    const std::vector<float>& pfjets_mc3dr();
    const std::vector<float>& pfjets_mcdr();
    const std::vector<float>& pfjets_mc_emEnergy();
    const std::vector<float>& pfjets_mc_gpdr();
    const std::vector<float>& pfjets_mc_hadEnergy();
    const std::vector<float>& pfjets_mc_invEnergy();
    const std::vector<float>& pfjets_mc_otherEnergy();
    const std::vector<float>& photons_mc3dr();
    const std::vector<float>& photons_mcdr();
    const std::vector<float>& trk_mc3dr();
    const std::vector<float>& trk_mcdr();
    const std::vector<float>& els_ecalJuraIso();
    const std::vector<float>& els_ecalJuraTowerIso();
    const std::vector<float>& els_hcalConeIso();
    const std::vector<float>& els_tkJuraIso();
    const std::vector<float>& els_jetdr();
    const std::vector<float>& els_musdr();
    const std::vector<float>& els_isoR03_chpf_radial();
    const std::vector<float>& els_isoR03_chpf_radialTight();
    const std::vector<float>& els_isoR03_chpf_radialTight_bv();
    const std::vector<float>& els_isoR03_chpf_radial_bv();
    const std::vector<float>& els_isoR03_empf_radial();
    const std::vector<float>& els_isoR03_empf_radialTight();
    const std::vector<float>& els_isoR03_empf_radialTight_bv();
    const std::vector<float>& els_isoR03_empf_radial_bv();
    const std::vector<float>& els_isoR03_nhpf_radial();
    const std::vector<float>& els_isoR03_nhpf_radialTight();
    const std::vector<float>& els_isoR03_nhpf_radialTight_bv();
    const std::vector<float>& els_isoR03_nhpf_radial_bv();
    const std::vector<float>& els_isoR03_pf2012n0p5_ch();
    const std::vector<float>& els_isoR03_pf2012n0p5_em();
    const std::vector<float>& els_isoR03_pf2012n0p5_nh();
    const std::vector<float>& els_isoR03_pf_radial();
    const std::vector<float>& els_isoR03_pf_radialTight();
    const std::vector<float>& els_isoR03_pf_radialTight_bv();
    const std::vector<float>& els_isoR03_pf_radial_bv();
    const std::vector<float>& els_chi2();
    const std::vector<float>& els_ckf_chi2();
    const std::vector<float>& els_ckf_ndof();
    const std::vector<float>& els_conv_dcot();
    const std::vector<float>& els_conv_dist();
    const std::vector<float>& els_conv_old_dcot();
    const std::vector<float>& els_conv_old_dist();
    const std::vector<float>& els_conv_old_radius();
    const std::vector<float>& els_conv_radius();
    const std::vector<float>& els_d0();
    const std::vector<float>& els_d0Err();
    const std::vector<float>& els_d0corr();
    const std::vector<float>& els_dEtaIn();
    const std::vector<float>& els_dEtaOut();
    const std::vector<float>& els_dPhiIn();
    const std::vector<float>& els_dPhiInPhiOut();
    const std::vector<float>& els_dPhiOut();
    const std::vector<float>& els_deltaEtaEleClusterTrackAtCalo();
    const std::vector<float>& els_deltaPhiEleClusterTrackAtCalo();
    const std::vector<float>& els_e1x5();
    const std::vector<float>& els_e2x5Max();
    const std::vector<float>& els_e3x3();
    const std::vector<float>& els_e5x5();
    const std::vector<float>& els_eMax();
    const std::vector<float>& els_eOverPIn();
    const std::vector<float>& els_eOverPOut();
    const std::vector<float>& els_eSC();
    const std::vector<float>& els_eSCPresh();
    const std::vector<float>& els_eSCRaw();
    const std::vector<float>& els_eSeed();
    const std::vector<float>& els_eSeedOverPIn();
    const std::vector<float>& els_eSeedOverPOut();
    const std::vector<float>& els_ecalEnergy();
    const std::vector<float>& els_ecalEnergyError();
    const std::vector<float>& els_ecalIso();
    const std::vector<float>& els_ecalIso04();
    const std::vector<float>& els_etaErr();
    const std::vector<float>& els_etaSC();
    const std::vector<float>& els_etaSCwidth();
    const std::vector<float>& els_fbrem();
    const std::vector<float>& els_hOverE();
    const std::vector<float>& els_hcalDepth1OverEcal();
    const std::vector<float>& els_hcalDepth1TowerSumEt();
    const std::vector<float>& els_hcalDepth1TowerSumEt04();
    const std::vector<float>& els_hcalDepth2OverEcal();
    const std::vector<float>& els_hcalDepth2TowerSumEt();
    const std::vector<float>& els_hcalDepth2TowerSumEt04();
    const std::vector<float>& els_hcalIso();
    const std::vector<float>& els_hcalIso04();
    const std::vector<float>& els_ip3d();
    const std::vector<float>& els_ip3derr();
    const std::vector<float>& els_iso03_pf();
    const std::vector<float>& els_iso03_pf2012_ch();
    const std::vector<float>& els_iso03_pf2012_em();
    const std::vector<float>& els_iso03_pf2012ext_ch();
    const std::vector<float>& els_iso03_pf2012ext_em();
    const std::vector<float>& els_iso03_pf2012ext_nh();
    const std::vector<float>& els_iso03_pf2012_nh();
    const std::vector<float>& els_iso03_pf_ch();
    const std::vector<float>& els_iso03_pf_gamma05();
    const std::vector<float>& els_iso03_pf_nhad05();
    const std::vector<float>& els_iso04_pf();
    const std::vector<float>& els_iso04_pf2012_ch();
    const std::vector<float>& els_iso04_pf2012_em();
    const std::vector<float>& els_iso04_pf2012ext_ch();
    const std::vector<float>& els_iso04_pf2012ext_em();
    const std::vector<float>& els_iso04_pf2012ext_nh();
    const std::vector<float>& els_iso04_pf2012_nh();
    const std::vector<float>& els_iso04_pf_ch();
    const std::vector<float>& els_iso04_pf_gamma05();
    const std::vector<float>& els_iso04_pf_nhad05();
    const std::vector<float>& els_layer1_charge();
    const std::vector<float>& els_lh();
    const std::vector<float>& els_mva();
    const std::vector<float>& els_ndof();
    const std::vector<float>& els_pfChargedHadronIso();
    const std::vector<float>& els_pfNeutralHadronIso();
    const std::vector<float>& els_pfPhotonIso();
    const std::vector<float>& els_phiErr();
    const std::vector<float>& els_phiSC();
    const std::vector<float>& els_phiSCwidth();
    const std::vector<float>& els_ptErr();
    const std::vector<float>& els_r9();
    const std::vector<float>& els_sigmaEtaEta();
    const std::vector<float>& els_sigmaIEtaIEta();
    const std::vector<float>& els_sigmaIEtaIEtaSC();
    const std::vector<float>& els_sigmaIEtaIPhi();
    const std::vector<float>& els_sigmaIPhiIPhi();
    const std::vector<float>& els_sigmaIPhiIPhiSC();
    const std::vector<float>& els_sigmaIphiIphi();
    const std::vector<float>& els_sigmaPhiPhi();
    const std::vector<float>& els_tkIso();
    const std::vector<float>& els_tkIso04();
    const std::vector<float>& els_trackMomentumError();
    const std::vector<float>& els_trkdr();
    const std::vector<float>& els_trkshFrac();
    const std::vector<float>& els_z0();
    const std::vector<float>& els_z0Err();
    const std::vector<float>& els_z0corr();
    const std::vector<float>& gsftrks_chi2();
    const std::vector<float>& gsftrks_d0();
    const std::vector<float>& gsftrks_d0Err();
    const std::vector<float>& gsftrks_d0corr();
    const std::vector<float>& gsftrks_d0corrPhi();
    const std::vector<float>& gsftrks_d0phiCov();
    const std::vector<float>& gsftrks_etaErr();
    const std::vector<float>& gsftrks_layer1_charge();
    const std::vector<float>& gsftrks_ndof();
    const std::vector<float>& gsftrks_phiErr();
    const std::vector<float>& gsftrks_ptErr();
    const std::vector<float>& gsftrks_z0();
    const std::vector<float>& gsftrks_z0Err();
    const std::vector<float>& gsftrks_z0corr();
    const std::vector<float>& hyp_Ht();
    const std::vector<float>& hyp_dPhi_nJet_metMuonJESCorr();
    const std::vector<float>& hyp_dPhi_nJet_muCorrMet();
    const std::vector<float>& hyp_dPhi_nJet_tcMet();
    const std::vector<float>& hyp_dPhi_nJet_unCorrMet();
    const std::vector<float>& hyp_ll_chi2();
    const std::vector<float>& hyp_ll_d0();
    const std::vector<float>& hyp_ll_d0Err();
    const std::vector<float>& hyp_ll_d0corr();
    const std::vector<float>& hyp_ll_dPhi_metMuonJESCorr();
    const std::vector<float>& hyp_ll_dPhi_muCorrMet();
    const std::vector<float>& hyp_ll_dPhi_tcMet();
    const std::vector<float>& hyp_ll_dPhi_unCorrMet();
    const std::vector<float>& hyp_ll_etaErr();
    const std::vector<float>& hyp_ll_ndof();
    const std::vector<float>& hyp_ll_phiErr();
    const std::vector<float>& hyp_ll_ptErr();
    const std::vector<float>& hyp_ll_z0();
    const std::vector<float>& hyp_ll_z0Err();
    const std::vector<float>& hyp_ll_z0corr();
    const std::vector<float>& hyp_lt_chi2();
    const std::vector<float>& hyp_lt_d0();
    const std::vector<float>& hyp_lt_d0Err();
    const std::vector<float>& hyp_lt_d0corr();
    const std::vector<float>& hyp_lt_dPhi_metMuonJESCorr();
    const std::vector<float>& hyp_lt_dPhi_muCorrMet();
    const std::vector<float>& hyp_lt_dPhi_tcMet();
    const std::vector<float>& hyp_lt_dPhi_unCorrMet();
    const std::vector<float>& hyp_lt_etaErr();
    const std::vector<float>& hyp_lt_ndof();
    const std::vector<float>& hyp_lt_phiErr();
    const std::vector<float>& hyp_lt_ptErr();
    const std::vector<float>& hyp_lt_z0();
    const std::vector<float>& hyp_lt_z0Err();
    const std::vector<float>& hyp_lt_z0corr();
    const std::vector<float>& hyp_mt2_metMuonJESCorr();
    const std::vector<float>& hyp_mt2_muCorrMet();
    const std::vector<float>& hyp_mt2_tcMet();
    const std::vector<float>& hyp_sumJetPt();
    const std::vector<float>& hyp_FVFit_chi2ndf();
    const std::vector<float>& hyp_FVFit_prob();
    const std::vector<float>& hyp_FVFit_v4cxx();
    const std::vector<float>& hyp_FVFit_v4cxy();
    const std::vector<float>& hyp_FVFit_v4cyy();
    const std::vector<float>& hyp_FVFit_v4czx();
    const std::vector<float>& hyp_FVFit_v4czy();
    const std::vector<float>& hyp_FVFit_v4czz();
    const std::vector<float>& jets_approximatefHPD();
    const std::vector<float>& jets_approximatefRBX();
    const std::vector<float>& jets_cor();
    const std::vector<float>& jets_corL1FastL2L3();
    const std::vector<float>& jets_corL1L2L3();
    const std::vector<float>& jets_emFrac();
    const std::vector<float>& jets_fHPD();
    const std::vector<float>& jets_fRBX();
    const std::vector<float>& jets_fSubDetector1();
    const std::vector<float>& jets_fSubDetector2();
    const std::vector<float>& jets_fSubDetector3();
    const std::vector<float>& jets_fSubDetector4();
    const std::vector<float>& jets_hitsInN90();
    const std::vector<float>& jets_n90Hits();
    const std::vector<float>& jets_nECALTowers();
    const std::vector<float>& jets_nHCALTowers();
    const std::vector<float>& jets_restrictedEMF();
    const std::vector<float>& mus_met_deltax();
    const std::vector<float>& mus_met_deltay();
    const std::vector<float>& mus_eledr();
    const std::vector<float>& mus_jetdr();
    const std::vector<float>& mus_isoR03_chpf_radial();
    const std::vector<float>& mus_isoR03_chpf_radialTight();
    const std::vector<float>& mus_isoR03_empf_radial();
    const std::vector<float>& mus_isoR03_empf_radialTight();
    const std::vector<float>& mus_isoR03_nhpf_radial();
    const std::vector<float>& mus_isoR03_nhpf_radialTight();
    const std::vector<float>& mus_isoR03_pf_radial();
    const std::vector<float>& mus_isoR03_pf_radialTight();
    const std::vector<float>& mus_backToBackCompat();
    const std::vector<float>& mus_caloCompatibility();
    const std::vector<float>& mus_chi2();
    const std::vector<float>& mus_chi2LocalMomentum();
    const std::vector<float>& mus_chi2LocalPosition();
    const std::vector<float>& mus_cosmicCompat();
    const std::vector<float>& mus_d0();
    const std::vector<float>& mus_d0Err();
    const std::vector<float>& mus_d0corr();
    const std::vector<float>& mus_e_em();
    const std::vector<float>& mus_e_emS9();
    const std::vector<float>& mus_e_had();
    const std::vector<float>& mus_e_hadS9();
    const std::vector<float>& mus_e_ho();
    const std::vector<float>& mus_e_hoS9();
    const std::vector<float>& mus_etaErr();
    const std::vector<float>& mus_gfit_chi2();
    const std::vector<float>& mus_gfit_d0();
    const std::vector<float>& mus_gfit_d0Err();
    const std::vector<float>& mus_gfit_d0corr();
    const std::vector<float>& mus_gfit_ndof();
    const std::vector<float>& mus_gfit_qoverp();
    const std::vector<float>& mus_gfit_qoverpError();
    const std::vector<float>& mus_gfit_z0();
    const std::vector<float>& mus_gfit_z0Err();
    const std::vector<float>& mus_gfit_z0corr();
    const std::vector<float>& mus_glbKink();
    const std::vector<float>& mus_glbTrackProbability();
    const std::vector<float>& mus_globalDeltaEtaPhi();
    const std::vector<float>& mus_ip3d();
    const std::vector<float>& mus_ip3derr();
    const std::vector<float>& mus_iso03_emEt();
    const std::vector<float>& mus_iso03_hadEt();
    const std::vector<float>& mus_iso03_hoEt();
    const std::vector<float>& mus_iso03_pf();
    const std::vector<float>& mus_iso03_sumPt();
    const std::vector<float>& mus_iso04_pf();
    const std::vector<float>& mus_iso05_emEt();
    const std::vector<float>& mus_iso05_hadEt();
    const std::vector<float>& mus_iso05_hoEt();
    const std::vector<float>& mus_iso05_sumPt();
    const std::vector<float>& mus_isoR03_pf_ChargedHadronPt();
    const std::vector<float>& mus_isoR03_pf_ChargedParticlePt();
    const std::vector<float>& mus_isoR03_pf_NeutralHadronEt();
    const std::vector<float>& mus_isoR03_pf_NeutralHadronEtHighThreshold();
    const std::vector<float>& mus_isoR03_pf_PUPt();
    const std::vector<float>& mus_isoR03_pf_PhotonEt();
    const std::vector<float>& mus_isoR03_pf_PhotonEtHighThreshold();
    const std::vector<float>& mus_isoR04_pf_ChargedHadronPt();
    const std::vector<float>& mus_isoR04_pf_ChargedParticlePt();
    const std::vector<float>& mus_isoR04_pf_NeutralHadronEt();
    const std::vector<float>& mus_isoR04_pf_NeutralHadronEtHighThreshold();
    const std::vector<float>& mus_isoR04_pf_PUPt();
    const std::vector<float>& mus_isoR04_pf_PhotonEt();
    const std::vector<float>& mus_isoR04_pf_PhotonEtHighThreshold();
    const std::vector<float>& mus_iso_ecalvetoDep();
    const std::vector<float>& mus_iso_hcalvetoDep();
    const std::vector<float>& mus_iso_hovetoDep();
    const std::vector<float>& mus_iso_trckvetoDep();
    const std::vector<float>& mus_localDistance();
    const std::vector<float>& mus_ndof();
    const std::vector<float>& mus_overlapCompat();
    const std::vector<float>& mus_pfdeltaP();
    const std::vector<float>& mus_pfecalE();
    const std::vector<float>& mus_pfhcalE();
    const std::vector<float>& mus_pfmva_emu();
    const std::vector<float>& mus_pfmva_epi();
    const std::vector<float>& mus_pfmva_nothing_gamma();
    const std::vector<float>& mus_pfmva_nothing_nh();
    const std::vector<float>& mus_pfmva_pimu();
    const std::vector<float>& mus_pfpS1E();
    const std::vector<float>& mus_pfpS2E();
    const std::vector<float>& mus_pfrawEcalE();
    const std::vector<float>& mus_pfrawHcalE();
    const std::vector<float>& mus_phiErr();
    const std::vector<float>& mus_ptErr();
    const std::vector<float>& mus_qoverp();
    const std::vector<float>& mus_qoverpError();
    const std::vector<float>& mus_segmCompatibility();
    const std::vector<float>& mus_staRelChi2();
    const std::vector<float>& mus_sta_chi2();
    const std::vector<float>& mus_sta_d0();
    const std::vector<float>& mus_sta_d0Err();
    const std::vector<float>& mus_sta_d0corr();
    const std::vector<float>& mus_sta_ndof();
    const std::vector<float>& mus_sta_qoverp();
    const std::vector<float>& mus_sta_qoverpError();
    const std::vector<float>& mus_sta_z0();
    const std::vector<float>& mus_sta_z0Err();
    const std::vector<float>& mus_sta_z0corr();
    const std::vector<float>& mus_timeAtIpInOut();
    const std::vector<float>& mus_timeAtIpInOutErr();
    const std::vector<float>& mus_timeAtIpOutIn();
    const std::vector<float>& mus_timeAtIpOutInErr();
    const std::vector<float>& mus_timeCompat();
    const std::vector<float>& mus_trkKink();
    const std::vector<float>& mus_trkRelChi2();
    const std::vector<float>& mus_vertexCompat();
    const std::vector<float>& mus_vertexphi();
    const std::vector<float>& mus_z0();
    const std::vector<float>& mus_z0Err();
    const std::vector<float>& mus_z0corr();
    const std::vector<float>& pfjets_mvavalue();
    const std::vector<float>& pfjets_full53xmva_beta();
    const std::vector<float>& pfjets_full53xmva_betaStar();
    const std::vector<float>& pfjets_full53xmva_d0();
    const std::vector<float>& pfjets_full53xmva_dRMean();
    const std::vector<float>& pfjets_full53xmva_dZ();
    const std::vector<float>& pfjets_full53xmva_frac01();
    const std::vector<float>& pfjets_full53xmva_frac02();
    const std::vector<float>& pfjets_full53xmva_frac03();
    const std::vector<float>& pfjets_full53xmva_frac04();
    const std::vector<float>& pfjets_full53xmva_frac05();
    const std::vector<float>& pfjets_full53xmva_nCharged();
    const std::vector<float>& pfjets_full53xmva_nNeutrals();
    const std::vector<float>& pfjets_full53xmva_nvtx();
    const std::vector<float>& pfjets_full53xmvavalue();
    const std::vector<float>& pfjets_full5xmvavalue();
    const std::vector<float>& trkjet_met();
    const std::vector<float>& trkjet_metPhi();
    const std::vector<float>& trkjet_sumet();
    const std::vector<float>& trk_met();
    const std::vector<float>& trk_metPhi();
    const std::vector<float>& trk_sumet();
    const std::vector<float>& pfcands_deltaP();
    const std::vector<float>& pfcands_ecalE();
    const std::vector<float>& pfcands_hcalE();
    const std::vector<float>& pfcands_mva_emu();
    const std::vector<float>& pfcands_mva_epi();
    const std::vector<float>& pfcands_mva_nothing_gamma();
    const std::vector<float>& pfcands_mva_nothing_nh();
    const std::vector<float>& pfcands_mva_pimu();
    const std::vector<float>& pfcands_pS1E();
    const std::vector<float>& pfcands_pS2E();
    const std::vector<float>& pfcands_rawEcalE();
    const std::vector<float>& pfcands_rawHcalE();
    const std::vector<float>& pfels_deltaP();
    const std::vector<float>& pfels_ecalE();
    const std::vector<float>& pfels_hcalE();
    const std::vector<float>& pfels_iso04ChargedHadrons();
    const std::vector<float>& pfels_iso04NeutralHadrons();
    const std::vector<float>& pfels_iso04Photons();
    const std::vector<float>& pfels_isoChargedHadrons();
    const std::vector<float>& pfels_isoNeutralHadrons();
    const std::vector<float>& pfels_isoPhotons();
    const std::vector<float>& pfels_mva_emu();
    const std::vector<float>& pfels_mva_epi();
    const std::vector<float>& pfels_mva_nothing_gamma();
    const std::vector<float>& pfels_mva_nothing_nh();
    const std::vector<float>& pfels_mva_pimu();
    const std::vector<float>& pfels_pS1E();
    const std::vector<float>& pfels_pS2E();
    const std::vector<float>& pfels_rawEcalE();
    const std::vector<float>& pfels_rawHcalE();
    const std::vector<float>& pfjets_area();
    const std::vector<float>& pfjets_chargedEmE();
    const std::vector<float>& pfjets_chargedHadronE();
    const std::vector<float>& pfjets_cor();
    const std::vector<float>& pfjets_corL1Fast();
    const std::vector<float>& pfjets_corL1FastL2L3();
    const std::vector<float>& pfjets_corL1FastL2L3residual();
    const std::vector<float>& pfjets_corL1L2L3();
    const std::vector<float>& pfjets_electronE();
    const std::vector<float>& pfjets_hfEmE();
    const std::vector<float>& pfjets_hfHadronE();
    const std::vector<float>& pfjets_muonE();
    const std::vector<float>& pfjets_neutralEmE();
    const std::vector<float>& pfjets_neutralHadronE();
    const std::vector<float>& pfjets_photonE();
    const std::vector<float>& pfmus_deltaP();
    const std::vector<float>& pfmus_ecalE();
    const std::vector<float>& pfmus_hcalE();
    const std::vector<float>& pfmus_iso04ChargedHadrons();
    const std::vector<float>& pfmus_iso04NeutralHadrons();
    const std::vector<float>& pfmus_iso04Photons();
    const std::vector<float>& pfmus_isoChargedHadrons();
    const std::vector<float>& pfmus_isoNeutralHadrons();
    const std::vector<float>& pfmus_isoPhotons();
    const std::vector<float>& pfmus_mva_emu();
    const std::vector<float>& pfmus_mva_epi();
    const std::vector<float>& pfmus_mva_nothing_gamma();
    const std::vector<float>& pfmus_mva_nothing_nh();
    const std::vector<float>& pfmus_mva_pimu();
    const std::vector<float>& pfmus_pS1E();
    const std::vector<float>& pfmus_pS2E();
    const std::vector<float>& pfmus_rawEcalE();
    const std::vector<float>& pfmus_rawHcalE();
    const std::vector<float>& taus_pf_againstElectronDeadECAL();
    const std::vector<float>& taus_pf_againstElectronLoose();
    const std::vector<float>& taus_pf_againstElectronLooseMVA2();
    const std::vector<float>& taus_pf_againstElectronLooseMVA3();
    const std::vector<float>& taus_pf_againstElectronMVA();
    const std::vector<float>& taus_pf_againstElectronMVA2category();
    const std::vector<float>& taus_pf_againstElectronMVA2raw();
    const std::vector<float>& taus_pf_againstElectronMVA3category();
    const std::vector<float>& taus_pf_againstElectronMVA3raw();
    const std::vector<float>& taus_pf_againstElectronMedium();
    const std::vector<float>& taus_pf_againstElectronMediumMVA2();
    const std::vector<float>& taus_pf_againstElectronMediumMVA3();
    const std::vector<float>& taus_pf_againstElectronTight();
    const std::vector<float>& taus_pf_againstElectronTightMVA2();
    const std::vector<float>& taus_pf_againstElectronTightMVA3();
    const std::vector<float>& taus_pf_againstElectronVLooseMVA2();
    const std::vector<float>& taus_pf_againstElectronVTightMVA3();
    const std::vector<float>& taus_pf_againstMuonLoose();
    const std::vector<float>& taus_pf_againstMuonLoose2();
    const std::vector<float>& taus_pf_againstMuonMedium();
    const std::vector<float>& taus_pf_againstMuonMedium2();
    const std::vector<float>& taus_pf_againstMuonTight();
    const std::vector<float>& taus_pf_againstMuonTight2();
    const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw();
    const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw3Hits();
    const std::vector<float>& taus_pf_byDecayModeFinding();
    const std::vector<float>& taus_pf_byIsolationMVA2raw();
    const std::vector<float>& taus_pf_byIsolationMVAraw();
    const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr3Hits();
    const std::vector<float>& taus_pf_byLooseIsolationMVA();
    const std::vector<float>& taus_pf_byLooseIsolationMVA2();
    const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr3Hits();
    const std::vector<float>& taus_pf_byMediumIsolationMVA();
    const std::vector<float>& taus_pf_byMediumIsolationMVA2();
    const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr3Hits();
    const std::vector<float>& taus_pf_byTightIsolationMVA();
    const std::vector<float>& taus_pf_byTightIsolationMVA2();
    const std::vector<float>& taus_pf_byVLooseCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& photons_e1x5();
    const std::vector<float>& photons_e2x5Max();
    const std::vector<float>& photons_e3x3();
    const std::vector<float>& photons_e5x5();
    const std::vector<float>& photons_ecalIso03();
    const std::vector<float>& photons_ecalIso04();
    const std::vector<float>& photons_hOverE();
    const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR03();
    const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR04();
    const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR03();
    const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR04();
    const std::vector<float>& photons_hcalIso03();
    const std::vector<float>& photons_hcalIso04();
    const std::vector<float>& photons_hcalTowerSumEtBcConeDR03();
    const std::vector<float>& photons_hcalTowerSumEtBcConeDR04();
    const std::vector<float>& photons_ntkIsoHollow03();
    const std::vector<float>& photons_ntkIsoHollow04();
    const std::vector<float>& photons_ntkIsoSolid03();
    const std::vector<float>& photons_ntkIsoSolid04();
    const std::vector<float>& photons_sigmaEtaEta();
    const std::vector<float>& photons_sigmaIEtaIEta();
    const std::vector<float>& photons_swissSeed();
    const std::vector<float>& photons_tkIsoHollow03();
    const std::vector<float>& photons_tkIsoHollow04();
    const std::vector<float>& photons_tkIsoSolid03();
    const std::vector<float>& photons_tkIsoSolid04();
    const std::vector<float>& puInfo_trueNumInteractions();
    const std::vector<float>& convs_chi2();
    const std::vector<float>& convs_dl();
    const std::vector<float>& convs_ndof();
    const std::vector<float>& sparm_values();
    const std::vector<float>& scs_clustersSize();
    const std::vector<float>& scs_crystalsSize();
    const std::vector<float>& scs_e1x3();
    const std::vector<float>& scs_e1x5();
    const std::vector<float>& scs_e2nd();
    const std::vector<float>& scs_e2x2();
    const std::vector<float>& scs_e2x5Max();
    const std::vector<float>& scs_e3x1();
    const std::vector<float>& scs_e3x2();
    const std::vector<float>& scs_e3x3();
    const std::vector<float>& scs_e4x4();
    const std::vector<float>& scs_e5x5();
    const std::vector<float>& scs_eMax();
    const std::vector<float>& scs_eSeed();
    const std::vector<float>& scs_energy();
    const std::vector<float>& scs_eta();
    const std::vector<float>& scs_hoe();
    const std::vector<float>& scs_laserCorMax();
    const std::vector<float>& scs_laserCorMean();
    const std::vector<float>& scs_laserCorSeed();
    const std::vector<float>& scs_phi();
    const std::vector<float>& scs_preshowerEnergy();
    const std::vector<float>& scs_rawEnergy();
    const std::vector<float>& scs_sigmaEtaEta();
    const std::vector<float>& scs_sigmaEtaPhi();
    const std::vector<float>& scs_sigmaIEtaIEta();
    const std::vector<float>& scs_sigmaIEtaIEtaSC();
    const std::vector<float>& scs_sigmaIEtaIPhi();
    const std::vector<float>& scs_sigmaIEtaIPhiSC();
    const std::vector<float>& scs_sigmaIPhiIPhi();
    const std::vector<float>& scs_sigmaIPhiIPhiSC();
    const std::vector<float>& scs_sigmaPhiPhi();
    const std::vector<float>& scs_timeSeed();
    const std::vector<float>& svs_anglePV();
    const std::vector<float>& svs_chi2();
    const std::vector<float>& svs_dist3Dsig();
    const std::vector<float>& svs_dist3Dval();
    const std::vector<float>& svs_distXYsig();
    const std::vector<float>& svs_distXYval();
    const std::vector<float>& svs_ndof();
    const std::vector<float>& svs_prob();
    const std::vector<float>& svs_xError();
    const std::vector<float>& svs_yError();
    const std::vector<float>& svs_zError();
    const std::vector<float>& mus_tcmet_deltax();
    const std::vector<float>& mus_tcmet_deltay();
    const std::vector<float>& pfcands_dzpv();
    const std::vector<float>& pfcands_trkiso();
    const std::vector<float>& trks_chi2();
    const std::vector<float>& trks_d0();
    const std::vector<float>& trks_d0Err();
    const std::vector<float>& trks_d0corr();
    const std::vector<float>& trks_d0corrPhi();
    const std::vector<float>& trks_d0phiCov();
    const std::vector<float>& trks_etaErr();
    const std::vector<float>& trks_layer1_charge();
    const std::vector<float>& trks_ndof();
    const std::vector<float>& trks_phiErr();
    const std::vector<float>& trks_ptErr();
    const std::vector<float>& trks_validFraction();
    const std::vector<float>& trks_z0();
    const std::vector<float>& trks_z0Err();
    const std::vector<float>& trks_z0corr();
    const std::vector<float>& trkjets_cor();
    const std::vector<float>& trks_d0Errvtx();
    const std::vector<float>& trks_d0vtx();
    const std::vector<float>& vtxs_chi2();
    const std::vector<float>& vtxs_ndof();
    const std::vector<float>& vtxs_sumpt();
    const std::vector<float>& vtxs_xError();
    const std::vector<float>& vtxs_yError();
    const std::vector<float>& vtxs_zError();
    const std::vector<float>& bsvtxs_chi2();
    const std::vector<float>& bsvtxs_ndof();
    const std::vector<float>& bsvtxs_sumpt();
    const std::vector<float>& bsvtxs_xError();
    const std::vector<float>& bsvtxs_yError();
    const std::vector<float>& bsvtxs_zError();
    const std::vector<std::vector<float> >& els_convs_dcot();
    const std::vector<std::vector<float> >& els_convs_dist();
    const std::vector<std::vector<float> >& els_convs_radius();
    const std::vector<std::vector<float> >& mus_stationShowerDeltaR();
    const std::vector<std::vector<float> >& mus_stationShowerSizeT();
    const std::vector<std::vector<float> >& puInfo_instLumi();
    const std::vector<std::vector<float> >& puInfo_sump_highpt();
    const std::vector<std::vector<float> >& puInfo_sumpt_lowpt();
    const std::vector<std::vector<float> >& puInfo_zpositions();
    const std::vector<std::vector<float> >& vtxs_covMatrix();
    const std::vector<std::vector<float> >& bsvtxs_covMatrix();
    const int& evt_cscLooseHaloId();
    const int& evt_cscTightHaloId();
    const int& evt_ecalLooseHaloId();
    const int& evt_ecalTightHaloId();
    const int& evt_extremeTightHaloId();
    const int& evt_globalLooseHaloId();
    const int& evt_globalTightHaloId();
    const int& evt_hcalLooseHaloId();
    const int& evt_hcalTightHaloId();
    const int& evt_looseHaloId();
    const int& evt_nHaloLikeTracks();
    const int& evt_nHaloTriggerCandidates();
    const int& evt_tightHaloId();
    const int& evt_bsType();
    const int& evt_bunchCrossing();
    const int& evt_experimentType();
    const int& evt_isRealData();
    const int& evt_orbitNumber();
    const int& evt_storeNumber();
    const int& hcalnoise_GetRecHitCount();
    const int& hcalnoise_GetRecHitCount15();
    const int& hcalnoise_maxHPDHits();
    const int& hcalnoise_maxHPDNoOtherHits();
    const int& hcalnoise_maxRBXHits();
    const int& hcalnoise_maxZeros();
    const int& hcalnoise_noiseFilterStatus();
    const int& hcalnoise_noiseType();
    const int& hcalnoise_num10GeVHits();
    const int& hcalnoise_num25GeVHits();
    const int& hcalnoise_numFlatNoiseChannels();
    const int& hcalnoise_numIsolatedNoiseChannels();
    const int& hcalnoise_numProblematicRBXs();
    const int& hcalnoise_numSpikeNoiseChannels();
    const int& hcalnoise_numTS4TS5NoiseChannels();
    const int& hcalnoise_numTriangleNoiseChannels();
    const int& hcalnoise_passHighLevelNoiseFilter();
    const int& hcalnoise_passLooseNoiseFilter();
    const int& hcalnoise_passTightNoiseFilter();
    const int& l1_nemiso();
    const int& l1_nemnoiso();
    const int& l1_njetsc();
    const int& l1_njetsf();
    const int& l1_njetst();
    const int& l1_nmus();
    const int& ls_lumiSecQual();
    const int& pdfinfo_id1();
    const int& pdfinfo_id2();
    const int& sparm_subProcessId();
    const std::vector<int>& evt_ecaliPhiSuspects();
    const std::vector<int>& evt_globaliPhiSuspects();
    const std::vector<int>& evt_hcaliPhiSuspects();
    const std::vector<int>& els_mc3_id();
    const std::vector<int>& els_mc3idx();
    const std::vector<int>& els_mc3_motherid();
    const std::vector<int>& els_mc3_motheridx();
    const std::vector<int>& els_mc_id();
    const std::vector<int>& els_mcidx();
    const std::vector<int>& els_mc_motherid();
    const std::vector<int>& jets_mc3_id();
    const std::vector<int>& jets_mc3idx();
    const std::vector<int>& jets_mc_gpidx();
    const std::vector<int>& jets_mc_id();
    const std::vector<int>& jets_mcidx();
    const std::vector<int>& jets_mc_motherid();
    const std::vector<int>& mus_mc3_id();
    const std::vector<int>& mus_mc3idx();
    const std::vector<int>& mus_mc3_motherid();
    const std::vector<int>& mus_mc3_motheridx();
    const std::vector<int>& mus_mc_id();
    const std::vector<int>& mus_mcidx();
    const std::vector<int>& mus_mc_motherid();
    const std::vector<int>& pfjets_mc3_id();
    const std::vector<int>& pfjets_mc3idx();
    const std::vector<int>& pfjets_mc_gpidx();
    const std::vector<int>& pfjets_mc_id();
    const std::vector<int>& pfjets_mcidx();
    const std::vector<int>& pfjets_mc_motherid();
    const std::vector<int>& photons_mc3_id();
    const std::vector<int>& photons_mc3idx();
    const std::vector<int>& photons_mc3_motherid();
    const std::vector<int>& photons_mc3_motheridx();
    const std::vector<int>& photons_mc_id();
    const std::vector<int>& photons_mcidx();
    const std::vector<int>& photons_mc_motherid();
    const std::vector<int>& trk_mc3_id();
    const std::vector<int>& trk_mc3idx();
    const std::vector<int>& trk_mc3_motherid();
    const std::vector<int>& trk_mc3_motheridx();
    const std::vector<int>& trk_mc_id();
    const std::vector<int>& trk_mcidx();
    const std::vector<int>& trk_mc_motherid();
    const std::vector<int>& els_closestJet();
    const std::vector<int>& els_closestMuon();
    const std::vector<int>& els_pfelsidx();
    const std::vector<int>& els_category();
    const std::vector<int>& els_charge();
    const std::vector<int>& els_ckf_laywithmeas();
    const std::vector<int>& els_class();
    const std::vector<int>& els_conv_delMissHits();
    const std::vector<int>& els_conv_flag();
    const std::vector<int>& els_conv_gsftkidx();
    const std::vector<int>& els_conv_old_delMissHits();
    const std::vector<int>& els_conv_old_flag();
    const std::vector<int>& els_conv_old_gsftkidx();
    const std::vector<int>& els_conv_old_tkidx();
    const std::vector<int>& els_conv_tkidx();
    const std::vector<int>& els_exp_innerlayers();
    const std::vector<int>& els_exp_outerlayers();
    const std::vector<int>& els_fiduciality();
    const std::vector<int>& els_gsftrkidx();
    const std::vector<int>& els_layer1_det();
    const std::vector<int>& els_layer1_layer();
    const std::vector<int>& els_layer1_sizerphi();
    const std::vector<int>& els_layer1_sizerz();
    const std::vector<int>& els_lostHits();
    const std::vector<int>& els_lost_pixelhits();
    const std::vector<int>& els_nSeed();
    const std::vector<int>& els_sccharge();
    const std::vector<int>& els_scindex();
    const std::vector<int>& els_trk_charge();
    const std::vector<int>& els_trkidx();
    const std::vector<int>& els_type();
    const std::vector<int>& els_validHits();
    const std::vector<int>& els_valid_pixelhits();
    const std::vector<int>& genps_id();
    const std::vector<int>& genps_id_mother();
    const std::vector<int>& genps_status();
    const std::vector<int>& gsftrks_charge();
    const std::vector<int>& gsftrks_exp_innerlayers();
    const std::vector<int>& gsftrks_exp_outerlayers();
    const std::vector<int>& gsftrks_layer1_det();
    const std::vector<int>& gsftrks_layer1_layer();
    const std::vector<int>& gsftrks_layer1_sizerphi();
    const std::vector<int>& gsftrks_layer1_sizerz();
    const std::vector<int>& gsftrks_lostHits();
    const std::vector<int>& gsftrks_lost_pixelhits();
    const std::vector<int>& gsftrks_nlayers();
    const std::vector<int>& gsftrks_nlayers3D();
    const std::vector<int>& gsftrks_nlayersLost();
    const std::vector<int>& gsftrks_validHits();
    const std::vector<int>& gsftrks_valid_pixelhits();
    const std::vector<int>& hyp_ll_charge();
    const std::vector<int>& hyp_ll_id();
    const std::vector<int>& hyp_ll_index();
    const std::vector<int>& hyp_ll_lostHits();
    const std::vector<int>& hyp_ll_validHits();
    const std::vector<int>& hyp_lt_charge();
    const std::vector<int>& hyp_lt_id();
    const std::vector<int>& hyp_lt_index();
    const std::vector<int>& hyp_lt_lostHits();
    const std::vector<int>& hyp_lt_validHits();
    const std::vector<int>& hyp_njets();
    const std::vector<int>& hyp_nojets();
    const std::vector<int>& hyp_type();
    const std::vector<int>& hyp_FVFit_ndf();
    const std::vector<int>& hyp_FVFit_status();
    const std::vector<int>& hyp_ll_mc_id();
    const std::vector<int>& hyp_ll_mc_motherid();
    const std::vector<int>& hyp_lt_mc_id();
    const std::vector<int>& hyp_lt_mc_motherid();
    const std::vector<int>& pfjets_mcflavorAlgo();
    const std::vector<int>& pfjets_mcflavorPhys();
    const std::vector<int>& jets_closestElectron();
    const std::vector<int>& jets_closestMuon();
    const std::vector<int>& l1_emiso_ieta();
    const std::vector<int>& l1_emiso_iphi();
    const std::vector<int>& l1_emiso_rawId();
    const std::vector<int>& l1_emiso_type();
    const std::vector<int>& l1_emnoiso_ieta();
    const std::vector<int>& l1_emnoiso_iphi();
    const std::vector<int>& l1_emnoiso_rawId();
    const std::vector<int>& l1_emnoiso_type();
    const std::vector<int>& l1_jetsc_ieta();
    const std::vector<int>& l1_jetsc_iphi();
    const std::vector<int>& l1_jetsc_rawId();
    const std::vector<int>& l1_jetsc_type();
    const std::vector<int>& l1_jetsf_ieta();
    const std::vector<int>& l1_jetsf_iphi();
    const std::vector<int>& l1_jetsf_rawId();
    const std::vector<int>& l1_jetsf_type();
    const std::vector<int>& l1_jetst_ieta();
    const std::vector<int>& l1_jetst_iphi();
    const std::vector<int>& l1_jetst_rawId();
    const std::vector<int>& l1_jetst_type();
    const std::vector<int>& l1_mus_flags();
    const std::vector<int>& l1_mus_q();
    const std::vector<int>& l1_mus_qual();
    const std::vector<int>& l1_mus_qualFlags();
    const std::vector<int>& mus_met_flag();
    const std::vector<int>& mus_closestEle();
    const std::vector<int>& mus_closestJet();
    const std::vector<int>& mus_pfmusidx();
    const std::vector<int>& mus_charge();
    const std::vector<int>& mus_gfit_validHits();
    const std::vector<int>& mus_gfit_validSTAHits();
    const std::vector<int>& mus_gfit_validSiHits();
    const std::vector<int>& mus_goodmask();
    const std::vector<int>& mus_iso03_ntrk();
    const std::vector<int>& mus_iso05_ntrk();
    const std::vector<int>& mus_lostHits();
    const std::vector<int>& mus_muonBestTrackType();
    const std::vector<int>& mus_nOverlaps();
    const std::vector<int>& mus_nmatches();
    const std::vector<int>& mus_numberOfMatchedStations();
    const std::vector<int>& mus_overlap0();
    const std::vector<int>& mus_overlap1();
    const std::vector<int>& mus_pfcharge();
    const std::vector<int>& mus_pfflag();
    const std::vector<int>& mus_pfparticleId();
    const std::vector<int>& mus_pid_PFMuon();
    const std::vector<int>& mus_pid_TM2DCompatibilityLoose();
    const std::vector<int>& mus_pid_TM2DCompatibilityTight();
    const std::vector<int>& mus_pid_TMLastStationLoose();
    const std::vector<int>& mus_pid_TMLastStationTight();
    const std::vector<int>& mus_sta_validHits();
    const std::vector<int>& mus_timeDirection();
    const std::vector<int>& mus_timeNumStationsUsed();
    const std::vector<int>& mus_trk_charge();
    const std::vector<int>& mus_trkidx();
    const std::vector<int>& mus_type();
    const std::vector<int>& mus_validHits();
    const std::vector<int>& pfcands_charge();
    const std::vector<int>& pfcands_flag();
    const std::vector<int>& pfcands_particleId();
    const std::vector<int>& pfcands_pfelsidx();
    const std::vector<int>& pfcands_pfmusidx();
    const std::vector<int>& pfcands_trkidx();
    const std::vector<int>& pfcands_vtxidx();
    const std::vector<int>& pfels_elsidx();
    const std::vector<int>& pfels_charge();
    const std::vector<int>& pfels_flag();
    const std::vector<int>& pfels_particleId();
    const std::vector<int>& pfjets_chargedHadronMultiplicity();
    const std::vector<int>& pfjets_chargedMultiplicity();
    const std::vector<int>& pfjets_electronMultiplicity();
    const std::vector<int>& pfjets_hfEmMultiplicity();
    const std::vector<int>& pfjets_hfHadronMultiplicity();
    const std::vector<int>& pfjets_muonMultiplicity();
    const std::vector<int>& pfjets_neutralHadronMultiplicity();
    const std::vector<int>& pfjets_neutralMultiplicity();
    const std::vector<int>& pfjets_photonMultiplicity();
    const std::vector<int>& pfmus_musidx();
    const std::vector<int>& pfmus_charge();
    const std::vector<int>& pfmus_flag();
    const std::vector<int>& pfmus_particleId();
    const std::vector<int>& taus_pf_charge();
    const std::vector<int>& taus_pf_pfjetIndex();
    const std::vector<int>& photons_fiduciality();
    const std::vector<int>& photons_scindex();
    const std::vector<int>& puInfo_bunchCrossing();
    const std::vector<int>& puInfo_nPUvertices();
    const std::vector<int>& convs_algo();
    const std::vector<int>& convs_isConverted();
    const std::vector<int>& convs_quality();
    const std::vector<int>& scs_detIdSeed();
    const std::vector<int>& scs_elsidx();
    const std::vector<int>& scs_severitySeed();
    const std::vector<int>& svs_isKs();
    const std::vector<int>& svs_isLambda();
    const std::vector<int>& svs_mc3_id();
    const std::vector<int>& svs_nTrks();
    const std::vector<int>& mus_tcmet_flag();
    const std::vector<int>& trks_algo();
    const std::vector<int>& trks_charge();
    const std::vector<int>& trks_exp_innerlayers();
    const std::vector<int>& trks_exp_outerlayers();
    const std::vector<int>& trks_layer1_det();
    const std::vector<int>& trks_layer1_layer();
    const std::vector<int>& trks_layer1_sizerphi();
    const std::vector<int>& trks_layer1_sizerz();
    const std::vector<int>& trks_lostHits();
    const std::vector<int>& trks_lost_pixelhits();
    const std::vector<int>& trks_nLoops();
    const std::vector<int>& trks_nlayers();
    const std::vector<int>& trks_nlayers3D();
    const std::vector<int>& trks_nlayersLost();
    const std::vector<int>& trks_pvidx0();
    const std::vector<int>& trks_pvidx1();
    const std::vector<int>& trks_qualityMask();
    const std::vector<int>& trks_validHits();
    const std::vector<int>& trks_valid_pixelhits();
    const std::vector<int>& trks_elsidx();
    const std::vector<int>& trk_musidx();
    const std::vector<int>& trkjets_ntrks();
    const std::vector<int>& trkjets_vtxs_idx();
    const std::vector<int>& vtxs_isFake();
    const std::vector<int>& vtxs_isValid();
    const std::vector<int>& vtxs_tracksSize();
    const std::vector<int>& bsvtxs_isFake();
    const std::vector<int>& bsvtxs_isValid();
    const std::vector<int>& bsvtxs_tracksSize();
    const std::vector<std::vector<int> >& els_convs_delMissHits();
    const std::vector<std::vector<int> >& els_convs_flag();
    const std::vector<std::vector<int> >& els_convs_gsftkidx();
    const std::vector<std::vector<int> >& els_convs_tkidx();
    const std::vector<std::vector<int> >& genps_lepdaughter_id();
    const std::vector<std::vector<int> >& genps_lepdaughter_idx();
    const std::vector<std::vector<int> >& hlt_trigObjs_id();
    const std::vector<std::vector<int> >& hyp_jets_idx();
    const std::vector<std::vector<int> >& hyp_other_jets_idx();
    const std::vector<std::vector<int> >& mus_nStationCorrelatedHits();
    const std::vector<std::vector<int> >& mus_nStationHits();
    const std::vector<std::vector<int> >& pfjets_pfcandIndicies();
    const std::vector<std::vector<int> >& taus_pf_pfcandIndicies();
    const std::vector<std::vector<int> >& puInfo_ntrks_highpt();
    const std::vector<std::vector<int> >& puInfo_ntrks_lowpt();
    const std::vector<std::vector<int> >& convs_nHitsBeforeVtx();
    const std::vector<std::vector<int> >& convs_tkalgo();
    const std::vector<std::vector<int> >& convs_tkidx();
    const unsigned int& els_HLT_Ele17_Ele8_L1sL1DoubleEG137_version();
    const unsigned int& els_HLT_Ele17_Ele8_LeadingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_Mass50_LeadingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_Mass50_TrailingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_TrailingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_version();
    const unsigned int& els_HLT_Ele20_SC4_Mass50_LeadingLeg_version();
    const unsigned int& els_HLT_Ele20_SC4_Mass50_TrailingLeg_version();
    const unsigned int& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_version();
    const unsigned int& els_HLT_Ele27_WP80_version();
    const unsigned int& els_HLT_Ele32_SC17_Mass50_LeadingLeg_version();
    const unsigned int& els_HLT_Ele32_SC17_Mass50_TrailingLeg_version();
    const unsigned int& els_HLT_Mu17_Ele8_TrailingLeg_version();
    const unsigned int& els_HLT_Mu17_Ele8_version();
    const unsigned int& els_HLT_Mu8_Ele17_version();
    const unsigned int& evt_nels();
    const unsigned int& evt_detectorStatus();
    const unsigned int& evt_event();
    const unsigned int& evt_lumiBlock();
    const unsigned int& evt_run();
    const unsigned int& genps_flavorHistoryFilterResult();
    const unsigned int& evt_ngenjets();
    const unsigned int& genps_signalProcessID();
    const unsigned int& evt_njets();
    const unsigned int& l1_bits1();
    const unsigned int& l1_bits2();
    const unsigned int& l1_bits3();
    const unsigned int& l1_bits4();
    const unsigned int& l1_techbits1();
    const unsigned int& l1_techbits2();
    const unsigned int& ls_lsNumber();
    const unsigned int& ls_numOrbit();
    const unsigned int& ls_startOrbit();
    const unsigned int& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_version();
    const unsigned int& mus_HLT_IsoMu24_eta2p1_version();
    const unsigned int& mus_HLT_Mu17_Ele8_LeadingLeg_version();
    const unsigned int& mus_HLT_Mu17_Ele8_version();
    const unsigned int& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_version();
    const unsigned int& mus_HLT_Mu17_Mu8_LeadingLeg_version();
    const unsigned int& mus_HLT_Mu17_Mu8_TrailingLeg_version();
    const unsigned int& mus_HLT_Mu17_Mu8_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_LeadingLeg_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLeg_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_version();
    const unsigned int& mus_HLT_Mu8_Ele17_TrailingLeg_version();
    const unsigned int& mus_HLT_Mu8_Ele17_version();
    const unsigned int& evt_nphotons();
    const unsigned int& evt_ecalRecoStatus();
    const unsigned int& evt_nscs();
    const unsigned int& evt_ntrkjets();
    const unsigned int& evt_nvtxs();
    const unsigned int& evt_nbsvtxs();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_L1sL1DoubleEG137();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Ele27_WP80();
    const std::vector<unsigned int>& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22();
    const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Mu17_Ele8();
    const std::vector<unsigned int>& els_HLT_Mu17_Ele8_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Mu8_Ele17();
    const std::vector<unsigned int>& els_id2012ext_loose();
    const std::vector<unsigned int>& els_id2012ext_medium();
    const std::vector<unsigned int>& els_id2012ext_tight();
    const std::vector<unsigned int>& els_id2012ext_veto();
    const std::vector<unsigned int>& els_id2012_loose();
    const std::vector<unsigned int>& els_id2012_medium();
    const std::vector<unsigned int>& els_id2012_tight();
    const std::vector<unsigned int>& els_id2012_veto();
    const std::vector<unsigned int>& hlt_prescales();
    const std::vector<unsigned int>& l1_prescales();
    const std::vector<unsigned int>& l1_techtrigprescales();
    const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1();
    const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1();
    const std::vector<unsigned int>& mus_HLT_Mu17_Ele8();
    const std::vector<unsigned int>& mus_HLT_Mu17_Ele8_LeadingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_LeadingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_TrailingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_LeadingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered();
    const std::vector<unsigned int>& mus_HLT_Mu8_Ele17();
    const std::vector<unsigned int>& mus_HLT_Mu8_Ele17_TrailingLeg();
    const unsigned long long& evt_timestamp();
    const int& evt_nEvts();
    const float& evt_filt_eff();

} // namespace tas


// ################################################################################################# //
// CMSSW complient interface 
// ################################################################################################# //
#else


// declaration of EdmHandleWrapper for CMSSW use
// ---------------------------------------------------------------------------------------------- //

#include "FWCore/Framework/interface/Event.h"
#include "DataFormats/Common/interface/Handle.h"

namespace tas
{
    template <typename T>
    class EdmHandleWrapper
    {
        public:
			// construct:
            explicit EdmHandleWrapper(const std::string& label, const std::string& instance);

			// clear the handles
            void Clear();

			// set the handles to point to an event
            void SetEvent(const edm::Event& event_ptr);

			// get the data from the branch
            const T& get();

        private:
			// members:
            std::string m_label;
            std::string m_instance;
            const edm::Event* m_event_ptr;
            edm::Handle<T> m_handle;

            // no default constructor
            EdmHandleWrapper() {}
    };
    
    template <typename T>
    /*explicit*/ EdmHandleWrapper<T>::EdmHandleWrapper(const std::string& label, const std::string& instance)
        : m_label(label) 
        , m_instance(instance) 
        , m_event_ptr(NULL)
        , m_handle()
    {
    }

    template <typename T>
    void EdmHandleWrapper<T>::Clear()
    {
        m_handle.clear();
    }

    template <typename T>
    void EdmHandleWrapper<T>::SetEvent(const edm::Event& event)
    {
        m_event_ptr = &event;
        m_handle.clear();
    }

    template <typename T>
    const T& EdmHandleWrapper<T>::get()
    {
        if (!m_handle.isValid())
        {
            m_event_ptr->getByLabel(m_label, m_instance, m_handle);
            if (!m_handle.isValid())
            {
                const std::string error = Form("[CMS2] ERROR: \"(%s, %s)\" input tag is invalid!", m_label.c_str(), m_instance.c_str());
                throw std::runtime_error(error);
            }
        }
        return *m_handle;
    }

} // end namespace tas


// declaration of CMS2 for CMSSW use
// ---------------------------------------------------------------------------------------------- //

class CMS2
{
    public:
        // construct:
        CMS2();

        // methods:
        void Init();
        void SetEvent(const edm::Event&);

        // trigger methods:
        bool passHLTTrigger(const TString& trigName);
        bool passL1Trigger(const TString& trigName);

        // methods:
        const TBits& hlt_bits();
        const std::vector<TString>& evt_CMS2tag();
        const std::vector<TString>& evt_dataset();
        const std::vector<TString>& hlt_trigNames();
        const std::vector<TString>& l1_techtrigNames();
        const std::vector<TString>& l1_trigNames();
        const std::vector<TString>& evt_errCategory();
        const std::vector<TString>& evt_errModule();
        const std::vector<TString>& evt_errSeverity();
        const std::vector<TString>& sparm_comment();
        const std::vector<TString>& sparm_names();
        const bool& evt_eventHasHalo();
        const bool& hcalnoise_HasBadRBXTS4TS5();
        const bool& ls_isValid();
        const bool& filt_ecalBE();
        const bool& filt_ecalDR();
        const bool& filt_ecalLaser();
        const bool& filt_ecalTP();
        const bool& filt_eeBadSc();
        const bool& filt_greedyMuon();
        const bool& filt_hcalLaser();
        const bool& filt_inconsistentMuon();
        const bool& filt_jetIDFailure();
        const bool& filt_multiEvent();
        const bool& filt_trackingFailure();
        const bool& evt_hbheFilter();
        const std::vector<bool>& els_conv_vtx_flag();
        const std::vector<bool>& els_passingMvaPreselection();
        const std::vector<bool>& els_passingPflowPreselection();
        const std::vector<bool>& mus_isRPCMuon();
        const std::vector<bool>& mus_tightMatch();
        const std::vector<bool>& mus_updatedSta();
        const std::vector<bool>& pfcands_isMuIso();
        const std::vector<bool>& photons_haspixelSeed();
        const std::vector<double>& jets_closestElectron_DR();
        const std::vector<double>& jets_closestMuon_DR();
        const float& evt_bs_Xwidth();
        const float& evt_bs_XwidthErr();
        const float& evt_bs_Ywidth();
        const float& evt_bs_YwidthErr();
        const float& evt_bs_dxdz();
        const float& evt_bs_dxdzErr();
        const float& evt_bs_dydz();
        const float& evt_bs_dydzErr();
        const float& evt_bs_sigmaZ();
        const float& evt_bs_sigmaZErr();
        const float& evt_bs_xErr();
        const float& evt_bs_yErr();
        const float& evt_bs_zErr();
        const float& evt_bField();
        const float& evt_rho();
        const float& evt_rhoJEC();
        const float& evt_fixgrid_all_rho();
        const float& evt_fixgridfastjet_all_rho();
        const float& gen_met();
        const float& gen_metPhi();
        const float& genps_alphaQCD();
        const float& genps_pthat();
        const float& genps_qScale();
        const float& genps_weight();
        const float& gen_sumEt();
        const float& hcalnoise_GetRecHitEnergy();
        const float& hcalnoise_GetRecHitEnergy15();
        const float& hcalnoise_GetTotalCalibCharge();
        const float& hcalnoise_TS4TS5NoiseSumE();
        const float& hcalnoise_TS4TS5NoiseSumEt();
        const float& hcalnoise_eventChargeFraction();
        const float& hcalnoise_eventEMEnergy();
        const float& hcalnoise_eventEMFraction();
        const float& hcalnoise_eventHadEnergy();
        const float& hcalnoise_eventTrackEnergy();
        const float& hcalnoise_flatNoiseSumE();
        const float& hcalnoise_flatNoiseSumEt();
        const float& hcalnoise_isolatedNoiseSumE();
        const float& hcalnoise_isolatedNoiseSumEt();
        const float& hcalnoise_max10GeVHitTime();
        const float& hcalnoise_max25GeVHitTime();
        const float& hcalnoise_maxE10TS();
        const float& hcalnoise_maxE2Over10TS();
        const float& hcalnoise_maxE2TS();
        const float& hcalnoise_min10GeVHitTime();
        const float& hcalnoise_min25GeVHitTime();
        const float& hcalnoise_minE10TS();
        const float& hcalnoise_minE2Over10TS();
        const float& hcalnoise_minE2TS();
        const float& hcalnoise_minHPDEMF();
        const float& hcalnoise_minRBXEMF();
        const float& hcalnoise_rms10GeVHitTime();
        const float& hcalnoise_rms25GeVHitTime();
        const float& hcalnoise_spikeNoiseSumE();
        const float& hcalnoise_spikeNoiseSumEt();
        const float& hcalnoise_triangleNoiseSumE();
        const float& hcalnoise_triangleNoiseSumEt();
        const float& evt_kt6calo_central_rho();
        const float& evt_kt6calo_muhlt_rho();
        const float& evt_kt6calo_rho();
        const float& evt_kt6pf_ctrChargedPU_rho();
        const float& evt_kt6pf_ctrNeutral_rho();
        const float& evt_kt6pf_ctrNeutralTight_rho();
        const float& evt_kt6pf_foregiso_rho();
        const float& l1_met_etTot();
        const float& l1_met_met();
        const float& l1_mht_htTot();
        const float& l1_mht_mht();
        const float& ls_avgInsDelLumi();
        const float& ls_avgInsDelLumiErr();
        const float& ls_avgInsRecLumi();
        const float& ls_avgInsRecLumiErr();
        const float& ls_deadFrac();
        const float& ls_intgDelLumi();
        const float& ls_intgRecLumi();
        const float& ls_lumiSectionLength();
        const float& evt_ecalendcapm_met();
        const float& evt_ecalendcapm_metPhi();
        const float& evt_ecalendcapp_met();
        const float& evt_ecalendcapp_metPhi();
        const float& evt_ecalmet();
        const float& evt_ecalmetPhi();
        const float& evt_endcapm_met();
        const float& evt_endcapm_metPhi();
        const float& evt_endcapp_met();
        const float& evt_endcapp_metPhi();
        const float& evt_hcalendcapm_met();
        const float& evt_hcalendcapm_metPhi();
        const float& evt_hcalendcapp_met();
        const float& evt_hcalendcapp_metPhi();
        const float& evt_hcalmet();
        const float& evt_hcalmetPhi();
        const float& evt_met();
        const float& evt_met_EtGt3();
        const float& evt_metHO();
        const float& evt_metHOPhi();
        const float& evt_metHOSig();
        const float& evt_metMuonCorr();
        const float& evt_metMuonCorrPhi();
        const float& evt_metMuonCorrSig();
        const float& evt_metMuonJESCorr();
        const float& evt_metMuonJESCorrPhi();
        const float& evt_metMuonJESCorrSig();
        const float& evt_metNoHF();
        const float& evt_metNoHFHO();
        const float& evt_metNoHFHOPhi();
        const float& evt_metNoHFHOSig();
        const float& evt_metNoHFPhi();
        const float& evt_metNoHFSig();
        const float& evt_metOpt();
        const float& evt_metOptHO();
        const float& evt_metOptHOPhi();
        const float& evt_metOptHOSig();
        const float& evt_metOptNoHF();
        const float& evt_metOptNoHFHO();
        const float& evt_metOptNoHFHOPhi();
        const float& evt_metOptNoHFHOSig();
        const float& evt_metOptNoHFPhi();
        const float& evt_metOptNoHFSig();
        const float& evt_metOptPhi();
        const float& evt_metOptSig();
        const float& evt_metPhi();
        const float& evt_metPhi_EtGt3();
        const float& evt_metSig();
        const float& evt_sumet();
        const float& evt_sumet_EtGt3();
        const float& evt_sumetHO();
        const float& evt_sumetMuonCorr();
        const float& evt_sumetMuonJESCorr();
        const float& evt_sumetNoHF();
        const float& evt_sumetNoHFHO();
        const float& evt_sumetOpt();
        const float& evt_sumetOptHO();
        const float& evt_sumetOptNoHF();
        const float& evt_sumetOptNoHFHO();
        const float& pdfinfo_pdf1();
        const float& pdfinfo_pdf2();
        const float& pdfinfo_scale();
        const float& pdfinfo_x1();
        const float& pdfinfo_x2();
        const float& evt_fixgrid_rho_all();
        const float& evt_fixgrid_rho_ctr();
        const float& evt_fixgrid_rho_fwd();
        const float& evt_pfmet();
        const float& evt_pfmetPhi();
        const float& evt_pfmetPhi_type1cor();
        const float& evt_pfmetSig();
        const float& evt_pfmetSignificance();
        const float& evt_pfmet_type1cor();
        const float& evt_pfsumet();
        const float& sparm_filterEfficiency();
        const float& sparm_pdfScale();
        const float& sparm_pdfWeight1();
        const float& sparm_pdfWeight2();
        const float& sparm_weight();
        const float& sparm_xsec();
        const float& evt_pf_tcmet();
        const float& evt_pf_tcmetPhi();
        const float& evt_pf_tcmetSig();
        const float& evt_pf_tcsumet();
        const float& evt_tcmet();
        const float& evt_tcmetPhi();
        const float& evt_tcmetSig();
        const float& evt_tcsumet();
        const float& evt_ww_rho_act();
        const float& evt_ww_rho();
        const float& evt_ww_rho_rnd();
        const float& evt_ww_rho_vor();
        const LorentzVector & evt_bsp4();
        const LorentzVector & l1_met_p4();
        const LorentzVector & l1_mht_p4();
        const std::vector<LorentzVector >& els_mc_motherp4();
        const std::vector<LorentzVector >& els_mc_p4();
        const std::vector<LorentzVector >& jets_mc_gp_p4();
        const std::vector<LorentzVector >& jets_mc_motherp4();
        const std::vector<LorentzVector >& jets_mc_p4();
        const std::vector<LorentzVector >& mus_mc_motherp4();
        const std::vector<LorentzVector >& mus_mc_p4();
        const std::vector<LorentzVector >& pfjets_mc_gp_p4();
        const std::vector<LorentzVector >& pfjets_mc_motherp4();
        const std::vector<LorentzVector >& pfjets_mc_p4();
        const std::vector<LorentzVector >& photons_mc_motherp4();
        const std::vector<LorentzVector >& photons_mc_p4();
        const std::vector<LorentzVector >& trk_mcp4();
        const std::vector<LorentzVector >& els_conv_pos_p4();
        const std::vector<LorentzVector >& els_inner_position();
        const std::vector<LorentzVector >& els_outer_position();
        const std::vector<LorentzVector >& els_p4();
        const std::vector<LorentzVector >& els_p4In();
        const std::vector<LorentzVector >& els_p4Out();
        const std::vector<LorentzVector >& els_trk_p4();
        const std::vector<LorentzVector >& els_vertex_p4();
        const std::vector<LorentzVector >& genjets_p4();
        const std::vector<LorentzVector >& genps_p4();
        const std::vector<LorentzVector >& genps_prod_vtx();
        const std::vector<LorentzVector >& gsftrks_inner_position();
        const std::vector<LorentzVector >& gsftrks_outer_p4();
        const std::vector<LorentzVector >& gsftrks_outer_position();
        const std::vector<LorentzVector >& gsftrks_p4();
        const std::vector<LorentzVector >& gsftrks_vertex_p4();
        const std::vector<LorentzVector >& hyp_ll_p4();
        const std::vector<LorentzVector >& hyp_ll_trk_p4();
        const std::vector<LorentzVector >& hyp_lt_p4();
        const std::vector<LorentzVector >& hyp_lt_trk_p4();
        const std::vector<LorentzVector >& hyp_p4();
        const std::vector<LorentzVector >& hyp_FVFit_p4();
        const std::vector<LorentzVector >& hyp_FVFit_v4();
        const std::vector<LorentzVector >& hyp_ll_mc_p4();
        const std::vector<LorentzVector >& hyp_lt_mc_p4();
        const std::vector<LorentzVector >& jets_p4();
        const std::vector<LorentzVector >& jets_vertex_p4();
        const std::vector<LorentzVector >& l1_emiso_p4();
        const std::vector<LorentzVector >& l1_emnoiso_p4();
        const std::vector<LorentzVector >& l1_jetsc_p4();
        const std::vector<LorentzVector >& l1_jetsf_p4();
        const std::vector<LorentzVector >& l1_jetst_p4();
        const std::vector<LorentzVector >& l1_mus_p4();
        const std::vector<LorentzVector >& mus_ecalpos_p4();
        const std::vector<LorentzVector >& mus_fitpicky_p4();
        const std::vector<LorentzVector >& mus_fittev_p4();
        const std::vector<LorentzVector >& mus_fittpfms_p4();
        const std::vector<LorentzVector >& mus_gfit_outerPos_p4();
        const std::vector<LorentzVector >& mus_gfit_p4();
        const std::vector<LorentzVector >& mus_gfit_vertex_p4();
        const std::vector<LorentzVector >& mus_p4();
        const std::vector<LorentzVector >& mus_pfp4();
        const std::vector<LorentzVector >& mus_pfposAtEcal_p4();
        const std::vector<LorentzVector >& mus_sta_p4();
        const std::vector<LorentzVector >& mus_sta_vertex_p4();
        const std::vector<LorentzVector >& mus_trk_p4();
        const std::vector<LorentzVector >& mus_vertex_p4();
        const std::vector<LorentzVector >& pfcands_p4();
        const std::vector<LorentzVector >& pfcands_posAtEcal_p4();
        const std::vector<LorentzVector >& pfels_p4();
        const std::vector<LorentzVector >& pfels_posAtEcal_p4();
        const std::vector<LorentzVector >& pfjets_p4();
        const std::vector<LorentzVector >& pfmus_p4();
        const std::vector<LorentzVector >& pfmus_posAtEcal_p4();
        const std::vector<LorentzVector >& taus_pf_p4();
        const std::vector<LorentzVector >& photons_p4();
        const std::vector<LorentzVector >& convs_refitPairMom_p4();
        const std::vector<LorentzVector >& convs_vtxpos();
        const std::vector<LorentzVector >& scs_p4();
        const std::vector<LorentzVector >& scs_pos_p4();
        const std::vector<LorentzVector >& scs_vtx_p4();
        const std::vector<LorentzVector >& svs_flight();
        const std::vector<LorentzVector >& svs_mc3_p4();
        const std::vector<LorentzVector >& svs_p4();
        const std::vector<LorentzVector >& svs_position();
        const std::vector<LorentzVector >& svs_refitp4();
        const std::vector<LorentzVector >& trks_inner_position();
        const std::vector<LorentzVector >& trks_outer_p4();
        const std::vector<LorentzVector >& trks_outer_position();
        const std::vector<LorentzVector >& trks_trk_p4();
        const std::vector<LorentzVector >& trks_vertex_p4();
        const std::vector<LorentzVector >& trkjets_p4();
        const std::vector<LorentzVector >& vtxs_position();
        const std::vector<LorentzVector >& bsvtxs_position();
        const std::vector<std::vector<LorentzVector > >& els_convs_pos_p4();
        const std::vector<std::vector<LorentzVector > >& genps_lepdaughter_p4();
        const std::vector<std::vector<LorentzVector > >& hlt_trigObjs_p4();
        const std::vector<std::vector<LorentzVector > >& hyp_jets_p4();
        const std::vector<std::vector<LorentzVector > >& hyp_other_jets_p4();
        const std::vector<float>& jpts_combinedSecondaryVertexBJetTag();
        const std::vector<float>& jpts_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& jpts_jetBProbabilityBJetTag();
        const std::vector<float>& jpts_jetProbabilityBJetTag();
        const std::vector<float>& jpts_simpleSecondaryVertexBJetTag();
        const std::vector<float>& jpts_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& jpts_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& jpts_softElectronByIP3dBJetTag();
        const std::vector<float>& jpts_softElectronByPtBJetTag();
        const std::vector<float>& jpts_softElectronTag();
        const std::vector<float>& jpts_softMuonBJetTag();
        const std::vector<float>& jpts_softMuonByIP3dBJetTag();
        const std::vector<float>& jpts_softMuonByPtBJetTag();
        const std::vector<float>& jpts_trackCountingHighEffBJetTag();
        const std::vector<float>& jpts_trackCountingHighPurBJetTag();
        const std::vector<float>& jets_combinedSecondaryVertexBJetTag();
        const std::vector<float>& jets_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& jets_jetBProbabilityBJetTag();
        const std::vector<float>& jets_jetProbabilityBJetTag();
        const std::vector<float>& jets_simpleSecondaryVertexBJetTag();
        const std::vector<float>& jets_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& jets_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& jets_softElectronByIP3dBJetTag();
        const std::vector<float>& jets_softElectronByPtBJetTag();
        const std::vector<float>& jets_softElectronTag();
        const std::vector<float>& jets_softMuonBJetTag();
        const std::vector<float>& jets_softMuonByIP3dBJetTag();
        const std::vector<float>& jets_softMuonByPtBJetTag();
        const std::vector<float>& jets_trackCountingHighEffBJetTag();
        const std::vector<float>& jets_trackCountingHighPurBJetTag();
        const std::vector<float>& pfjets_combinedSecondaryVertexBJetTag();
        const std::vector<float>& pfjets_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& pfjets_jetBProbabilityBJetTag();
        const std::vector<float>& pfjets_jetProbabilityBJetTag();
        const std::vector<float>& pfjets_simpleSecondaryVertexBJetTag();
        const std::vector<float>& pfjets_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& pfjets_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& pfjets_softElectronByIP3dBJetTag();
        const std::vector<float>& pfjets_softElectronByPtBJetTag();
        const std::vector<float>& pfjets_softElectronTag();
        const std::vector<float>& pfjets_softMuonBJetTag();
        const std::vector<float>& pfjets_softMuonByIP3dBJetTag();
        const std::vector<float>& pfjets_softMuonByPtBJetTag();
        const std::vector<float>& pfjets_trackCountingHighEffBJetTag();
        const std::vector<float>& pfjets_trackCountingHighPurBJetTag();
        const std::vector<float>& trkjets_combinedSecondaryVertexBJetTag();
        const std::vector<float>& trkjets_combinedSecondaryVertexMVABJetTag();
        const std::vector<float>& trkjets_jetBProbabilityBJetTag();
        const std::vector<float>& trkjets_jetProbabilityBJetTag();
        const std::vector<float>& trkjets_simpleSecondaryVertexBJetTag();
        const std::vector<float>& trkjets_simpleSecondaryVertexHighEffBJetTag();
        const std::vector<float>& trkjets_simpleSecondaryVertexHighPurBJetTags();
        const std::vector<float>& trkjets_softElectronByIP3dBJetTag();
        const std::vector<float>& trkjets_softElectronByPtBJetTag();
        const std::vector<float>& trkjets_softElectronTag();
        const std::vector<float>& trkjets_softMuonBJetTag();
        const std::vector<float>& trkjets_softMuonByIP3dBJetTag();
        const std::vector<float>& trkjets_softMuonByPtBJetTag();
        const std::vector<float>& trkjets_trackCountingHighEffBJetTag();
        const std::vector<float>& trkjets_trackCountingHighPurBJetTag();
        const std::vector<float>& evt_bs_covMatrix();
        const std::vector<float>& els_mc3dr();
        const std::vector<float>& els_mcdr();
        const std::vector<float>& jets_mc3dr();
        const std::vector<float>& jets_mcdr();
        const std::vector<float>& jets_mc_emEnergy();
        const std::vector<float>& jets_mc_gpdr();
        const std::vector<float>& jets_mc_hadEnergy();
        const std::vector<float>& jets_mc_invEnergy();
        const std::vector<float>& jets_mc_otherEnergy();
        const std::vector<float>& mus_mc3dr();
        const std::vector<float>& mus_mcdr();
        const std::vector<float>& pfjets_mc3dr();
        const std::vector<float>& pfjets_mcdr();
        const std::vector<float>& pfjets_mc_emEnergy();
        const std::vector<float>& pfjets_mc_gpdr();
        const std::vector<float>& pfjets_mc_hadEnergy();
        const std::vector<float>& pfjets_mc_invEnergy();
        const std::vector<float>& pfjets_mc_otherEnergy();
        const std::vector<float>& photons_mc3dr();
        const std::vector<float>& photons_mcdr();
        const std::vector<float>& trk_mc3dr();
        const std::vector<float>& trk_mcdr();
        const std::vector<float>& els_ecalJuraIso();
        const std::vector<float>& els_ecalJuraTowerIso();
        const std::vector<float>& els_hcalConeIso();
        const std::vector<float>& els_tkJuraIso();
        const std::vector<float>& els_jetdr();
        const std::vector<float>& els_musdr();
        const std::vector<float>& els_isoR03_chpf_radial();
        const std::vector<float>& els_isoR03_chpf_radialTight();
        const std::vector<float>& els_isoR03_chpf_radialTight_bv();
        const std::vector<float>& els_isoR03_chpf_radial_bv();
        const std::vector<float>& els_isoR03_empf_radial();
        const std::vector<float>& els_isoR03_empf_radialTight();
        const std::vector<float>& els_isoR03_empf_radialTight_bv();
        const std::vector<float>& els_isoR03_empf_radial_bv();
        const std::vector<float>& els_isoR03_nhpf_radial();
        const std::vector<float>& els_isoR03_nhpf_radialTight();
        const std::vector<float>& els_isoR03_nhpf_radialTight_bv();
        const std::vector<float>& els_isoR03_nhpf_radial_bv();
        const std::vector<float>& els_isoR03_pf2012n0p5_ch();
        const std::vector<float>& els_isoR03_pf2012n0p5_em();
        const std::vector<float>& els_isoR03_pf2012n0p5_nh();
        const std::vector<float>& els_isoR03_pf_radial();
        const std::vector<float>& els_isoR03_pf_radialTight();
        const std::vector<float>& els_isoR03_pf_radialTight_bv();
        const std::vector<float>& els_isoR03_pf_radial_bv();
        const std::vector<float>& els_chi2();
        const std::vector<float>& els_ckf_chi2();
        const std::vector<float>& els_ckf_ndof();
        const std::vector<float>& els_conv_dcot();
        const std::vector<float>& els_conv_dist();
        const std::vector<float>& els_conv_old_dcot();
        const std::vector<float>& els_conv_old_dist();
        const std::vector<float>& els_conv_old_radius();
        const std::vector<float>& els_conv_radius();
        const std::vector<float>& els_d0();
        const std::vector<float>& els_d0Err();
        const std::vector<float>& els_d0corr();
        const std::vector<float>& els_dEtaIn();
        const std::vector<float>& els_dEtaOut();
        const std::vector<float>& els_dPhiIn();
        const std::vector<float>& els_dPhiInPhiOut();
        const std::vector<float>& els_dPhiOut();
        const std::vector<float>& els_deltaEtaEleClusterTrackAtCalo();
        const std::vector<float>& els_deltaPhiEleClusterTrackAtCalo();
        const std::vector<float>& els_e1x5();
        const std::vector<float>& els_e2x5Max();
        const std::vector<float>& els_e3x3();
        const std::vector<float>& els_e5x5();
        const std::vector<float>& els_eMax();
        const std::vector<float>& els_eOverPIn();
        const std::vector<float>& els_eOverPOut();
        const std::vector<float>& els_eSC();
        const std::vector<float>& els_eSCPresh();
        const std::vector<float>& els_eSCRaw();
        const std::vector<float>& els_eSeed();
        const std::vector<float>& els_eSeedOverPIn();
        const std::vector<float>& els_eSeedOverPOut();
        const std::vector<float>& els_ecalEnergy();
        const std::vector<float>& els_ecalEnergyError();
        const std::vector<float>& els_ecalIso();
        const std::vector<float>& els_ecalIso04();
        const std::vector<float>& els_etaErr();
        const std::vector<float>& els_etaSC();
        const std::vector<float>& els_etaSCwidth();
        const std::vector<float>& els_fbrem();
        const std::vector<float>& els_hOverE();
        const std::vector<float>& els_hcalDepth1OverEcal();
        const std::vector<float>& els_hcalDepth1TowerSumEt();
        const std::vector<float>& els_hcalDepth1TowerSumEt04();
        const std::vector<float>& els_hcalDepth2OverEcal();
        const std::vector<float>& els_hcalDepth2TowerSumEt();
        const std::vector<float>& els_hcalDepth2TowerSumEt04();
        const std::vector<float>& els_hcalIso();
        const std::vector<float>& els_hcalIso04();
        const std::vector<float>& els_ip3d();
        const std::vector<float>& els_ip3derr();
        const std::vector<float>& els_iso03_pf();
        const std::vector<float>& els_iso03_pf2012_ch();
        const std::vector<float>& els_iso03_pf2012_em();
        const std::vector<float>& els_iso03_pf2012ext_ch();
        const std::vector<float>& els_iso03_pf2012ext_em();
        const std::vector<float>& els_iso03_pf2012ext_nh();
        const std::vector<float>& els_iso03_pf2012_nh();
        const std::vector<float>& els_iso03_pf_ch();
        const std::vector<float>& els_iso03_pf_gamma05();
        const std::vector<float>& els_iso03_pf_nhad05();
        const std::vector<float>& els_iso04_pf();
        const std::vector<float>& els_iso04_pf2012_ch();
        const std::vector<float>& els_iso04_pf2012_em();
        const std::vector<float>& els_iso04_pf2012ext_ch();
        const std::vector<float>& els_iso04_pf2012ext_em();
        const std::vector<float>& els_iso04_pf2012ext_nh();
        const std::vector<float>& els_iso04_pf2012_nh();
        const std::vector<float>& els_iso04_pf_ch();
        const std::vector<float>& els_iso04_pf_gamma05();
        const std::vector<float>& els_iso04_pf_nhad05();
        const std::vector<float>& els_layer1_charge();
        const std::vector<float>& els_lh();
        const std::vector<float>& els_mva();
        const std::vector<float>& els_ndof();
        const std::vector<float>& els_pfChargedHadronIso();
        const std::vector<float>& els_pfNeutralHadronIso();
        const std::vector<float>& els_pfPhotonIso();
        const std::vector<float>& els_phiErr();
        const std::vector<float>& els_phiSC();
        const std::vector<float>& els_phiSCwidth();
        const std::vector<float>& els_ptErr();
        const std::vector<float>& els_r9();
        const std::vector<float>& els_sigmaEtaEta();
        const std::vector<float>& els_sigmaIEtaIEta();
        const std::vector<float>& els_sigmaIEtaIEtaSC();
        const std::vector<float>& els_sigmaIEtaIPhi();
        const std::vector<float>& els_sigmaIPhiIPhi();
        const std::vector<float>& els_sigmaIPhiIPhiSC();
        const std::vector<float>& els_sigmaIphiIphi();
        const std::vector<float>& els_sigmaPhiPhi();
        const std::vector<float>& els_tkIso();
        const std::vector<float>& els_tkIso04();
        const std::vector<float>& els_trackMomentumError();
        const std::vector<float>& els_trkdr();
        const std::vector<float>& els_trkshFrac();
        const std::vector<float>& els_z0();
        const std::vector<float>& els_z0Err();
        const std::vector<float>& els_z0corr();
        const std::vector<float>& gsftrks_chi2();
        const std::vector<float>& gsftrks_d0();
        const std::vector<float>& gsftrks_d0Err();
        const std::vector<float>& gsftrks_d0corr();
        const std::vector<float>& gsftrks_d0corrPhi();
        const std::vector<float>& gsftrks_d0phiCov();
        const std::vector<float>& gsftrks_etaErr();
        const std::vector<float>& gsftrks_layer1_charge();
        const std::vector<float>& gsftrks_ndof();
        const std::vector<float>& gsftrks_phiErr();
        const std::vector<float>& gsftrks_ptErr();
        const std::vector<float>& gsftrks_z0();
        const std::vector<float>& gsftrks_z0Err();
        const std::vector<float>& gsftrks_z0corr();
        const std::vector<float>& hyp_Ht();
        const std::vector<float>& hyp_dPhi_nJet_metMuonJESCorr();
        const std::vector<float>& hyp_dPhi_nJet_muCorrMet();
        const std::vector<float>& hyp_dPhi_nJet_tcMet();
        const std::vector<float>& hyp_dPhi_nJet_unCorrMet();
        const std::vector<float>& hyp_ll_chi2();
        const std::vector<float>& hyp_ll_d0();
        const std::vector<float>& hyp_ll_d0Err();
        const std::vector<float>& hyp_ll_d0corr();
        const std::vector<float>& hyp_ll_dPhi_metMuonJESCorr();
        const std::vector<float>& hyp_ll_dPhi_muCorrMet();
        const std::vector<float>& hyp_ll_dPhi_tcMet();
        const std::vector<float>& hyp_ll_dPhi_unCorrMet();
        const std::vector<float>& hyp_ll_etaErr();
        const std::vector<float>& hyp_ll_ndof();
        const std::vector<float>& hyp_ll_phiErr();
        const std::vector<float>& hyp_ll_ptErr();
        const std::vector<float>& hyp_ll_z0();
        const std::vector<float>& hyp_ll_z0Err();
        const std::vector<float>& hyp_ll_z0corr();
        const std::vector<float>& hyp_lt_chi2();
        const std::vector<float>& hyp_lt_d0();
        const std::vector<float>& hyp_lt_d0Err();
        const std::vector<float>& hyp_lt_d0corr();
        const std::vector<float>& hyp_lt_dPhi_metMuonJESCorr();
        const std::vector<float>& hyp_lt_dPhi_muCorrMet();
        const std::vector<float>& hyp_lt_dPhi_tcMet();
        const std::vector<float>& hyp_lt_dPhi_unCorrMet();
        const std::vector<float>& hyp_lt_etaErr();
        const std::vector<float>& hyp_lt_ndof();
        const std::vector<float>& hyp_lt_phiErr();
        const std::vector<float>& hyp_lt_ptErr();
        const std::vector<float>& hyp_lt_z0();
        const std::vector<float>& hyp_lt_z0Err();
        const std::vector<float>& hyp_lt_z0corr();
        const std::vector<float>& hyp_mt2_metMuonJESCorr();
        const std::vector<float>& hyp_mt2_muCorrMet();
        const std::vector<float>& hyp_mt2_tcMet();
        const std::vector<float>& hyp_sumJetPt();
        const std::vector<float>& hyp_FVFit_chi2ndf();
        const std::vector<float>& hyp_FVFit_prob();
        const std::vector<float>& hyp_FVFit_v4cxx();
        const std::vector<float>& hyp_FVFit_v4cxy();
        const std::vector<float>& hyp_FVFit_v4cyy();
        const std::vector<float>& hyp_FVFit_v4czx();
        const std::vector<float>& hyp_FVFit_v4czy();
        const std::vector<float>& hyp_FVFit_v4czz();
        const std::vector<float>& jets_approximatefHPD();
        const std::vector<float>& jets_approximatefRBX();
        const std::vector<float>& jets_cor();
        const std::vector<float>& jets_corL1FastL2L3();
        const std::vector<float>& jets_corL1L2L3();
        const std::vector<float>& jets_emFrac();
        const std::vector<float>& jets_fHPD();
        const std::vector<float>& jets_fRBX();
        const std::vector<float>& jets_fSubDetector1();
        const std::vector<float>& jets_fSubDetector2();
        const std::vector<float>& jets_fSubDetector3();
        const std::vector<float>& jets_fSubDetector4();
        const std::vector<float>& jets_hitsInN90();
        const std::vector<float>& jets_n90Hits();
        const std::vector<float>& jets_nECALTowers();
        const std::vector<float>& jets_nHCALTowers();
        const std::vector<float>& jets_restrictedEMF();
        const std::vector<float>& mus_met_deltax();
        const std::vector<float>& mus_met_deltay();
        const std::vector<float>& mus_eledr();
        const std::vector<float>& mus_jetdr();
        const std::vector<float>& mus_isoR03_chpf_radial();
        const std::vector<float>& mus_isoR03_chpf_radialTight();
        const std::vector<float>& mus_isoR03_empf_radial();
        const std::vector<float>& mus_isoR03_empf_radialTight();
        const std::vector<float>& mus_isoR03_nhpf_radial();
        const std::vector<float>& mus_isoR03_nhpf_radialTight();
        const std::vector<float>& mus_isoR03_pf_radial();
        const std::vector<float>& mus_isoR03_pf_radialTight();
        const std::vector<float>& mus_backToBackCompat();
        const std::vector<float>& mus_caloCompatibility();
        const std::vector<float>& mus_chi2();
        const std::vector<float>& mus_chi2LocalMomentum();
        const std::vector<float>& mus_chi2LocalPosition();
        const std::vector<float>& mus_cosmicCompat();
        const std::vector<float>& mus_d0();
        const std::vector<float>& mus_d0Err();
        const std::vector<float>& mus_d0corr();
        const std::vector<float>& mus_e_em();
        const std::vector<float>& mus_e_emS9();
        const std::vector<float>& mus_e_had();
        const std::vector<float>& mus_e_hadS9();
        const std::vector<float>& mus_e_ho();
        const std::vector<float>& mus_e_hoS9();
        const std::vector<float>& mus_etaErr();
        const std::vector<float>& mus_gfit_chi2();
        const std::vector<float>& mus_gfit_d0();
        const std::vector<float>& mus_gfit_d0Err();
        const std::vector<float>& mus_gfit_d0corr();
        const std::vector<float>& mus_gfit_ndof();
        const std::vector<float>& mus_gfit_qoverp();
        const std::vector<float>& mus_gfit_qoverpError();
        const std::vector<float>& mus_gfit_z0();
        const std::vector<float>& mus_gfit_z0Err();
        const std::vector<float>& mus_gfit_z0corr();
        const std::vector<float>& mus_glbKink();
        const std::vector<float>& mus_glbTrackProbability();
        const std::vector<float>& mus_globalDeltaEtaPhi();
        const std::vector<float>& mus_ip3d();
        const std::vector<float>& mus_ip3derr();
        const std::vector<float>& mus_iso03_emEt();
        const std::vector<float>& mus_iso03_hadEt();
        const std::vector<float>& mus_iso03_hoEt();
        const std::vector<float>& mus_iso03_pf();
        const std::vector<float>& mus_iso03_sumPt();
        const std::vector<float>& mus_iso04_pf();
        const std::vector<float>& mus_iso05_emEt();
        const std::vector<float>& mus_iso05_hadEt();
        const std::vector<float>& mus_iso05_hoEt();
        const std::vector<float>& mus_iso05_sumPt();
        const std::vector<float>& mus_isoR03_pf_ChargedHadronPt();
        const std::vector<float>& mus_isoR03_pf_ChargedParticlePt();
        const std::vector<float>& mus_isoR03_pf_NeutralHadronEt();
        const std::vector<float>& mus_isoR03_pf_NeutralHadronEtHighThreshold();
        const std::vector<float>& mus_isoR03_pf_PUPt();
        const std::vector<float>& mus_isoR03_pf_PhotonEt();
        const std::vector<float>& mus_isoR03_pf_PhotonEtHighThreshold();
        const std::vector<float>& mus_isoR04_pf_ChargedHadronPt();
        const std::vector<float>& mus_isoR04_pf_ChargedParticlePt();
        const std::vector<float>& mus_isoR04_pf_NeutralHadronEt();
        const std::vector<float>& mus_isoR04_pf_NeutralHadronEtHighThreshold();
        const std::vector<float>& mus_isoR04_pf_PUPt();
        const std::vector<float>& mus_isoR04_pf_PhotonEt();
        const std::vector<float>& mus_isoR04_pf_PhotonEtHighThreshold();
        const std::vector<float>& mus_iso_ecalvetoDep();
        const std::vector<float>& mus_iso_hcalvetoDep();
        const std::vector<float>& mus_iso_hovetoDep();
        const std::vector<float>& mus_iso_trckvetoDep();
        const std::vector<float>& mus_localDistance();
        const std::vector<float>& mus_ndof();
        const std::vector<float>& mus_overlapCompat();
        const std::vector<float>& mus_pfdeltaP();
        const std::vector<float>& mus_pfecalE();
        const std::vector<float>& mus_pfhcalE();
        const std::vector<float>& mus_pfmva_emu();
        const std::vector<float>& mus_pfmva_epi();
        const std::vector<float>& mus_pfmva_nothing_gamma();
        const std::vector<float>& mus_pfmva_nothing_nh();
        const std::vector<float>& mus_pfmva_pimu();
        const std::vector<float>& mus_pfpS1E();
        const std::vector<float>& mus_pfpS2E();
        const std::vector<float>& mus_pfrawEcalE();
        const std::vector<float>& mus_pfrawHcalE();
        const std::vector<float>& mus_phiErr();
        const std::vector<float>& mus_ptErr();
        const std::vector<float>& mus_qoverp();
        const std::vector<float>& mus_qoverpError();
        const std::vector<float>& mus_segmCompatibility();
        const std::vector<float>& mus_staRelChi2();
        const std::vector<float>& mus_sta_chi2();
        const std::vector<float>& mus_sta_d0();
        const std::vector<float>& mus_sta_d0Err();
        const std::vector<float>& mus_sta_d0corr();
        const std::vector<float>& mus_sta_ndof();
        const std::vector<float>& mus_sta_qoverp();
        const std::vector<float>& mus_sta_qoverpError();
        const std::vector<float>& mus_sta_z0();
        const std::vector<float>& mus_sta_z0Err();
        const std::vector<float>& mus_sta_z0corr();
        const std::vector<float>& mus_timeAtIpInOut();
        const std::vector<float>& mus_timeAtIpInOutErr();
        const std::vector<float>& mus_timeAtIpOutIn();
        const std::vector<float>& mus_timeAtIpOutInErr();
        const std::vector<float>& mus_timeCompat();
        const std::vector<float>& mus_trkKink();
        const std::vector<float>& mus_trkRelChi2();
        const std::vector<float>& mus_vertexCompat();
        const std::vector<float>& mus_vertexphi();
        const std::vector<float>& mus_z0();
        const std::vector<float>& mus_z0Err();
        const std::vector<float>& mus_z0corr();
        const std::vector<float>& pfjets_mvavalue();
        const std::vector<float>& pfjets_full53xmva_beta();
        const std::vector<float>& pfjets_full53xmva_betaStar();
        const std::vector<float>& pfjets_full53xmva_d0();
        const std::vector<float>& pfjets_full53xmva_dRMean();
        const std::vector<float>& pfjets_full53xmva_dZ();
        const std::vector<float>& pfjets_full53xmva_frac01();
        const std::vector<float>& pfjets_full53xmva_frac02();
        const std::vector<float>& pfjets_full53xmva_frac03();
        const std::vector<float>& pfjets_full53xmva_frac04();
        const std::vector<float>& pfjets_full53xmva_frac05();
        const std::vector<float>& pfjets_full53xmva_nCharged();
        const std::vector<float>& pfjets_full53xmva_nNeutrals();
        const std::vector<float>& pfjets_full53xmva_nvtx();
        const std::vector<float>& pfjets_full53xmvavalue();
        const std::vector<float>& pfjets_full5xmvavalue();
        const std::vector<float>& trkjet_met();
        const std::vector<float>& trkjet_metPhi();
        const std::vector<float>& trkjet_sumet();
        const std::vector<float>& trk_met();
        const std::vector<float>& trk_metPhi();
        const std::vector<float>& trk_sumet();
        const std::vector<float>& pfcands_deltaP();
        const std::vector<float>& pfcands_ecalE();
        const std::vector<float>& pfcands_hcalE();
        const std::vector<float>& pfcands_mva_emu();
        const std::vector<float>& pfcands_mva_epi();
        const std::vector<float>& pfcands_mva_nothing_gamma();
        const std::vector<float>& pfcands_mva_nothing_nh();
        const std::vector<float>& pfcands_mva_pimu();
        const std::vector<float>& pfcands_pS1E();
        const std::vector<float>& pfcands_pS2E();
        const std::vector<float>& pfcands_rawEcalE();
        const std::vector<float>& pfcands_rawHcalE();
        const std::vector<float>& pfels_deltaP();
        const std::vector<float>& pfels_ecalE();
        const std::vector<float>& pfels_hcalE();
        const std::vector<float>& pfels_iso04ChargedHadrons();
        const std::vector<float>& pfels_iso04NeutralHadrons();
        const std::vector<float>& pfels_iso04Photons();
        const std::vector<float>& pfels_isoChargedHadrons();
        const std::vector<float>& pfels_isoNeutralHadrons();
        const std::vector<float>& pfels_isoPhotons();
        const std::vector<float>& pfels_mva_emu();
        const std::vector<float>& pfels_mva_epi();
        const std::vector<float>& pfels_mva_nothing_gamma();
        const std::vector<float>& pfels_mva_nothing_nh();
        const std::vector<float>& pfels_mva_pimu();
        const std::vector<float>& pfels_pS1E();
        const std::vector<float>& pfels_pS2E();
        const std::vector<float>& pfels_rawEcalE();
        const std::vector<float>& pfels_rawHcalE();
        const std::vector<float>& pfjets_area();
        const std::vector<float>& pfjets_chargedEmE();
        const std::vector<float>& pfjets_chargedHadronE();
        const std::vector<float>& pfjets_cor();
        const std::vector<float>& pfjets_corL1Fast();
        const std::vector<float>& pfjets_corL1FastL2L3();
        const std::vector<float>& pfjets_corL1FastL2L3residual();
        const std::vector<float>& pfjets_corL1L2L3();
        const std::vector<float>& pfjets_electronE();
        const std::vector<float>& pfjets_hfEmE();
        const std::vector<float>& pfjets_hfHadronE();
        const std::vector<float>& pfjets_muonE();
        const std::vector<float>& pfjets_neutralEmE();
        const std::vector<float>& pfjets_neutralHadronE();
        const std::vector<float>& pfjets_photonE();
        const std::vector<float>& pfmus_deltaP();
        const std::vector<float>& pfmus_ecalE();
        const std::vector<float>& pfmus_hcalE();
        const std::vector<float>& pfmus_iso04ChargedHadrons();
        const std::vector<float>& pfmus_iso04NeutralHadrons();
        const std::vector<float>& pfmus_iso04Photons();
        const std::vector<float>& pfmus_isoChargedHadrons();
        const std::vector<float>& pfmus_isoNeutralHadrons();
        const std::vector<float>& pfmus_isoPhotons();
        const std::vector<float>& pfmus_mva_emu();
        const std::vector<float>& pfmus_mva_epi();
        const std::vector<float>& pfmus_mva_nothing_gamma();
        const std::vector<float>& pfmus_mva_nothing_nh();
        const std::vector<float>& pfmus_mva_pimu();
        const std::vector<float>& pfmus_pS1E();
        const std::vector<float>& pfmus_pS2E();
        const std::vector<float>& pfmus_rawEcalE();
        const std::vector<float>& pfmus_rawHcalE();
        const std::vector<float>& taus_pf_againstElectronDeadECAL();
        const std::vector<float>& taus_pf_againstElectronLoose();
        const std::vector<float>& taus_pf_againstElectronLooseMVA2();
        const std::vector<float>& taus_pf_againstElectronLooseMVA3();
        const std::vector<float>& taus_pf_againstElectronMVA();
        const std::vector<float>& taus_pf_againstElectronMVA2category();
        const std::vector<float>& taus_pf_againstElectronMVA2raw();
        const std::vector<float>& taus_pf_againstElectronMVA3category();
        const std::vector<float>& taus_pf_againstElectronMVA3raw();
        const std::vector<float>& taus_pf_againstElectronMedium();
        const std::vector<float>& taus_pf_againstElectronMediumMVA2();
        const std::vector<float>& taus_pf_againstElectronMediumMVA3();
        const std::vector<float>& taus_pf_againstElectronTight();
        const std::vector<float>& taus_pf_againstElectronTightMVA2();
        const std::vector<float>& taus_pf_againstElectronTightMVA3();
        const std::vector<float>& taus_pf_againstElectronVLooseMVA2();
        const std::vector<float>& taus_pf_againstElectronVTightMVA3();
        const std::vector<float>& taus_pf_againstMuonLoose();
        const std::vector<float>& taus_pf_againstMuonLoose2();
        const std::vector<float>& taus_pf_againstMuonMedium();
        const std::vector<float>& taus_pf_againstMuonMedium2();
        const std::vector<float>& taus_pf_againstMuonTight();
        const std::vector<float>& taus_pf_againstMuonTight2();
        const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw();
        const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw3Hits();
        const std::vector<float>& taus_pf_byDecayModeFinding();
        const std::vector<float>& taus_pf_byIsolationMVA2raw();
        const std::vector<float>& taus_pf_byIsolationMVAraw();
        const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr3Hits();
        const std::vector<float>& taus_pf_byLooseIsolationMVA();
        const std::vector<float>& taus_pf_byLooseIsolationMVA2();
        const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr3Hits();
        const std::vector<float>& taus_pf_byMediumIsolationMVA();
        const std::vector<float>& taus_pf_byMediumIsolationMVA2();
        const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr3Hits();
        const std::vector<float>& taus_pf_byTightIsolationMVA();
        const std::vector<float>& taus_pf_byTightIsolationMVA2();
        const std::vector<float>& taus_pf_byVLooseCombinedIsolationDeltaBetaCorr();
        const std::vector<float>& photons_e1x5();
        const std::vector<float>& photons_e2x5Max();
        const std::vector<float>& photons_e3x3();
        const std::vector<float>& photons_e5x5();
        const std::vector<float>& photons_ecalIso03();
        const std::vector<float>& photons_ecalIso04();
        const std::vector<float>& photons_hOverE();
        const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR03();
        const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR04();
        const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR03();
        const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR04();
        const std::vector<float>& photons_hcalIso03();
        const std::vector<float>& photons_hcalIso04();
        const std::vector<float>& photons_hcalTowerSumEtBcConeDR03();
        const std::vector<float>& photons_hcalTowerSumEtBcConeDR04();
        const std::vector<float>& photons_ntkIsoHollow03();
        const std::vector<float>& photons_ntkIsoHollow04();
        const std::vector<float>& photons_ntkIsoSolid03();
        const std::vector<float>& photons_ntkIsoSolid04();
        const std::vector<float>& photons_sigmaEtaEta();
        const std::vector<float>& photons_sigmaIEtaIEta();
        const std::vector<float>& photons_swissSeed();
        const std::vector<float>& photons_tkIsoHollow03();
        const std::vector<float>& photons_tkIsoHollow04();
        const std::vector<float>& photons_tkIsoSolid03();
        const std::vector<float>& photons_tkIsoSolid04();
        const std::vector<float>& puInfo_trueNumInteractions();
        const std::vector<float>& convs_chi2();
        const std::vector<float>& convs_dl();
        const std::vector<float>& convs_ndof();
        const std::vector<float>& sparm_values();
        const std::vector<float>& scs_clustersSize();
        const std::vector<float>& scs_crystalsSize();
        const std::vector<float>& scs_e1x3();
        const std::vector<float>& scs_e1x5();
        const std::vector<float>& scs_e2nd();
        const std::vector<float>& scs_e2x2();
        const std::vector<float>& scs_e2x5Max();
        const std::vector<float>& scs_e3x1();
        const std::vector<float>& scs_e3x2();
        const std::vector<float>& scs_e3x3();
        const std::vector<float>& scs_e4x4();
        const std::vector<float>& scs_e5x5();
        const std::vector<float>& scs_eMax();
        const std::vector<float>& scs_eSeed();
        const std::vector<float>& scs_energy();
        const std::vector<float>& scs_eta();
        const std::vector<float>& scs_hoe();
        const std::vector<float>& scs_laserCorMax();
        const std::vector<float>& scs_laserCorMean();
        const std::vector<float>& scs_laserCorSeed();
        const std::vector<float>& scs_phi();
        const std::vector<float>& scs_preshowerEnergy();
        const std::vector<float>& scs_rawEnergy();
        const std::vector<float>& scs_sigmaEtaEta();
        const std::vector<float>& scs_sigmaEtaPhi();
        const std::vector<float>& scs_sigmaIEtaIEta();
        const std::vector<float>& scs_sigmaIEtaIEtaSC();
        const std::vector<float>& scs_sigmaIEtaIPhi();
        const std::vector<float>& scs_sigmaIEtaIPhiSC();
        const std::vector<float>& scs_sigmaIPhiIPhi();
        const std::vector<float>& scs_sigmaIPhiIPhiSC();
        const std::vector<float>& scs_sigmaPhiPhi();
        const std::vector<float>& scs_timeSeed();
        const std::vector<float>& svs_anglePV();
        const std::vector<float>& svs_chi2();
        const std::vector<float>& svs_dist3Dsig();
        const std::vector<float>& svs_dist3Dval();
        const std::vector<float>& svs_distXYsig();
        const std::vector<float>& svs_distXYval();
        const std::vector<float>& svs_ndof();
        const std::vector<float>& svs_prob();
        const std::vector<float>& svs_xError();
        const std::vector<float>& svs_yError();
        const std::vector<float>& svs_zError();
        const std::vector<float>& mus_tcmet_deltax();
        const std::vector<float>& mus_tcmet_deltay();
        const std::vector<float>& pfcands_dzpv();
        const std::vector<float>& pfcands_trkiso();
        const std::vector<float>& trks_chi2();
        const std::vector<float>& trks_d0();
        const std::vector<float>& trks_d0Err();
        const std::vector<float>& trks_d0corr();
        const std::vector<float>& trks_d0corrPhi();
        const std::vector<float>& trks_d0phiCov();
        const std::vector<float>& trks_etaErr();
        const std::vector<float>& trks_layer1_charge();
        const std::vector<float>& trks_ndof();
        const std::vector<float>& trks_phiErr();
        const std::vector<float>& trks_ptErr();
        const std::vector<float>& trks_validFraction();
        const std::vector<float>& trks_z0();
        const std::vector<float>& trks_z0Err();
        const std::vector<float>& trks_z0corr();
        const std::vector<float>& trkjets_cor();
        const std::vector<float>& trks_d0Errvtx();
        const std::vector<float>& trks_d0vtx();
        const std::vector<float>& vtxs_chi2();
        const std::vector<float>& vtxs_ndof();
        const std::vector<float>& vtxs_sumpt();
        const std::vector<float>& vtxs_xError();
        const std::vector<float>& vtxs_yError();
        const std::vector<float>& vtxs_zError();
        const std::vector<float>& bsvtxs_chi2();
        const std::vector<float>& bsvtxs_ndof();
        const std::vector<float>& bsvtxs_sumpt();
        const std::vector<float>& bsvtxs_xError();
        const std::vector<float>& bsvtxs_yError();
        const std::vector<float>& bsvtxs_zError();
        const std::vector<std::vector<float> >& els_convs_dcot();
        const std::vector<std::vector<float> >& els_convs_dist();
        const std::vector<std::vector<float> >& els_convs_radius();
        const std::vector<std::vector<float> >& mus_stationShowerDeltaR();
        const std::vector<std::vector<float> >& mus_stationShowerSizeT();
        const std::vector<std::vector<float> >& puInfo_instLumi();
        const std::vector<std::vector<float> >& puInfo_sump_highpt();
        const std::vector<std::vector<float> >& puInfo_sumpt_lowpt();
        const std::vector<std::vector<float> >& puInfo_zpositions();
        const std::vector<std::vector<float> >& vtxs_covMatrix();
        const std::vector<std::vector<float> >& bsvtxs_covMatrix();
        const int& evt_cscLooseHaloId();
        const int& evt_cscTightHaloId();
        const int& evt_ecalLooseHaloId();
        const int& evt_ecalTightHaloId();
        const int& evt_extremeTightHaloId();
        const int& evt_globalLooseHaloId();
        const int& evt_globalTightHaloId();
        const int& evt_hcalLooseHaloId();
        const int& evt_hcalTightHaloId();
        const int& evt_looseHaloId();
        const int& evt_nHaloLikeTracks();
        const int& evt_nHaloTriggerCandidates();
        const int& evt_tightHaloId();
        const int& evt_bsType();
        const int& evt_bunchCrossing();
        const int& evt_experimentType();
        const int& evt_isRealData();
        const int& evt_orbitNumber();
        const int& evt_storeNumber();
        const int& hcalnoise_GetRecHitCount();
        const int& hcalnoise_GetRecHitCount15();
        const int& hcalnoise_maxHPDHits();
        const int& hcalnoise_maxHPDNoOtherHits();
        const int& hcalnoise_maxRBXHits();
        const int& hcalnoise_maxZeros();
        const int& hcalnoise_noiseFilterStatus();
        const int& hcalnoise_noiseType();
        const int& hcalnoise_num10GeVHits();
        const int& hcalnoise_num25GeVHits();
        const int& hcalnoise_numFlatNoiseChannels();
        const int& hcalnoise_numIsolatedNoiseChannels();
        const int& hcalnoise_numProblematicRBXs();
        const int& hcalnoise_numSpikeNoiseChannels();
        const int& hcalnoise_numTS4TS5NoiseChannels();
        const int& hcalnoise_numTriangleNoiseChannels();
        const int& hcalnoise_passHighLevelNoiseFilter();
        const int& hcalnoise_passLooseNoiseFilter();
        const int& hcalnoise_passTightNoiseFilter();
        const int& l1_nemiso();
        const int& l1_nemnoiso();
        const int& l1_njetsc();
        const int& l1_njetsf();
        const int& l1_njetst();
        const int& l1_nmus();
        const int& ls_lumiSecQual();
        const int& pdfinfo_id1();
        const int& pdfinfo_id2();
        const int& sparm_subProcessId();
        const std::vector<int>& evt_ecaliPhiSuspects();
        const std::vector<int>& evt_globaliPhiSuspects();
        const std::vector<int>& evt_hcaliPhiSuspects();
        const std::vector<int>& els_mc3_id();
        const std::vector<int>& els_mc3idx();
        const std::vector<int>& els_mc3_motherid();
        const std::vector<int>& els_mc3_motheridx();
        const std::vector<int>& els_mc_id();
        const std::vector<int>& els_mcidx();
        const std::vector<int>& els_mc_motherid();
        const std::vector<int>& jets_mc3_id();
        const std::vector<int>& jets_mc3idx();
        const std::vector<int>& jets_mc_gpidx();
        const std::vector<int>& jets_mc_id();
        const std::vector<int>& jets_mcidx();
        const std::vector<int>& jets_mc_motherid();
        const std::vector<int>& mus_mc3_id();
        const std::vector<int>& mus_mc3idx();
        const std::vector<int>& mus_mc3_motherid();
        const std::vector<int>& mus_mc3_motheridx();
        const std::vector<int>& mus_mc_id();
        const std::vector<int>& mus_mcidx();
        const std::vector<int>& mus_mc_motherid();
        const std::vector<int>& pfjets_mc3_id();
        const std::vector<int>& pfjets_mc3idx();
        const std::vector<int>& pfjets_mc_gpidx();
        const std::vector<int>& pfjets_mc_id();
        const std::vector<int>& pfjets_mcidx();
        const std::vector<int>& pfjets_mc_motherid();
        const std::vector<int>& photons_mc3_id();
        const std::vector<int>& photons_mc3idx();
        const std::vector<int>& photons_mc3_motherid();
        const std::vector<int>& photons_mc3_motheridx();
        const std::vector<int>& photons_mc_id();
        const std::vector<int>& photons_mcidx();
        const std::vector<int>& photons_mc_motherid();
        const std::vector<int>& trk_mc3_id();
        const std::vector<int>& trk_mc3idx();
        const std::vector<int>& trk_mc3_motherid();
        const std::vector<int>& trk_mc3_motheridx();
        const std::vector<int>& trk_mc_id();
        const std::vector<int>& trk_mcidx();
        const std::vector<int>& trk_mc_motherid();
        const std::vector<int>& els_closestJet();
        const std::vector<int>& els_closestMuon();
        const std::vector<int>& els_pfelsidx();
        const std::vector<int>& els_category();
        const std::vector<int>& els_charge();
        const std::vector<int>& els_ckf_laywithmeas();
        const std::vector<int>& els_class();
        const std::vector<int>& els_conv_delMissHits();
        const std::vector<int>& els_conv_flag();
        const std::vector<int>& els_conv_gsftkidx();
        const std::vector<int>& els_conv_old_delMissHits();
        const std::vector<int>& els_conv_old_flag();
        const std::vector<int>& els_conv_old_gsftkidx();
        const std::vector<int>& els_conv_old_tkidx();
        const std::vector<int>& els_conv_tkidx();
        const std::vector<int>& els_exp_innerlayers();
        const std::vector<int>& els_exp_outerlayers();
        const std::vector<int>& els_fiduciality();
        const std::vector<int>& els_gsftrkidx();
        const std::vector<int>& els_layer1_det();
        const std::vector<int>& els_layer1_layer();
        const std::vector<int>& els_layer1_sizerphi();
        const std::vector<int>& els_layer1_sizerz();
        const std::vector<int>& els_lostHits();
        const std::vector<int>& els_lost_pixelhits();
        const std::vector<int>& els_nSeed();
        const std::vector<int>& els_sccharge();
        const std::vector<int>& els_scindex();
        const std::vector<int>& els_trk_charge();
        const std::vector<int>& els_trkidx();
        const std::vector<int>& els_type();
        const std::vector<int>& els_validHits();
        const std::vector<int>& els_valid_pixelhits();
        const std::vector<int>& genps_id();
        const std::vector<int>& genps_id_mother();
        const std::vector<int>& genps_status();
        const std::vector<int>& gsftrks_charge();
        const std::vector<int>& gsftrks_exp_innerlayers();
        const std::vector<int>& gsftrks_exp_outerlayers();
        const std::vector<int>& gsftrks_layer1_det();
        const std::vector<int>& gsftrks_layer1_layer();
        const std::vector<int>& gsftrks_layer1_sizerphi();
        const std::vector<int>& gsftrks_layer1_sizerz();
        const std::vector<int>& gsftrks_lostHits();
        const std::vector<int>& gsftrks_lost_pixelhits();
        const std::vector<int>& gsftrks_nlayers();
        const std::vector<int>& gsftrks_nlayers3D();
        const std::vector<int>& gsftrks_nlayersLost();
        const std::vector<int>& gsftrks_validHits();
        const std::vector<int>& gsftrks_valid_pixelhits();
        const std::vector<int>& hyp_ll_charge();
        const std::vector<int>& hyp_ll_id();
        const std::vector<int>& hyp_ll_index();
        const std::vector<int>& hyp_ll_lostHits();
        const std::vector<int>& hyp_ll_validHits();
        const std::vector<int>& hyp_lt_charge();
        const std::vector<int>& hyp_lt_id();
        const std::vector<int>& hyp_lt_index();
        const std::vector<int>& hyp_lt_lostHits();
        const std::vector<int>& hyp_lt_validHits();
        const std::vector<int>& hyp_njets();
        const std::vector<int>& hyp_nojets();
        const std::vector<int>& hyp_type();
        const std::vector<int>& hyp_FVFit_ndf();
        const std::vector<int>& hyp_FVFit_status();
        const std::vector<int>& hyp_ll_mc_id();
        const std::vector<int>& hyp_ll_mc_motherid();
        const std::vector<int>& hyp_lt_mc_id();
        const std::vector<int>& hyp_lt_mc_motherid();
        const std::vector<int>& pfjets_mcflavorAlgo();
        const std::vector<int>& pfjets_mcflavorPhys();
        const std::vector<int>& jets_closestElectron();
        const std::vector<int>& jets_closestMuon();
        const std::vector<int>& l1_emiso_ieta();
        const std::vector<int>& l1_emiso_iphi();
        const std::vector<int>& l1_emiso_rawId();
        const std::vector<int>& l1_emiso_type();
        const std::vector<int>& l1_emnoiso_ieta();
        const std::vector<int>& l1_emnoiso_iphi();
        const std::vector<int>& l1_emnoiso_rawId();
        const std::vector<int>& l1_emnoiso_type();
        const std::vector<int>& l1_jetsc_ieta();
        const std::vector<int>& l1_jetsc_iphi();
        const std::vector<int>& l1_jetsc_rawId();
        const std::vector<int>& l1_jetsc_type();
        const std::vector<int>& l1_jetsf_ieta();
        const std::vector<int>& l1_jetsf_iphi();
        const std::vector<int>& l1_jetsf_rawId();
        const std::vector<int>& l1_jetsf_type();
        const std::vector<int>& l1_jetst_ieta();
        const std::vector<int>& l1_jetst_iphi();
        const std::vector<int>& l1_jetst_rawId();
        const std::vector<int>& l1_jetst_type();
        const std::vector<int>& l1_mus_flags();
        const std::vector<int>& l1_mus_q();
        const std::vector<int>& l1_mus_qual();
        const std::vector<int>& l1_mus_qualFlags();
        const std::vector<int>& mus_met_flag();
        const std::vector<int>& mus_closestEle();
        const std::vector<int>& mus_closestJet();
        const std::vector<int>& mus_pfmusidx();
        const std::vector<int>& mus_charge();
        const std::vector<int>& mus_gfit_validHits();
        const std::vector<int>& mus_gfit_validSTAHits();
        const std::vector<int>& mus_gfit_validSiHits();
        const std::vector<int>& mus_goodmask();
        const std::vector<int>& mus_iso03_ntrk();
        const std::vector<int>& mus_iso05_ntrk();
        const std::vector<int>& mus_lostHits();
        const std::vector<int>& mus_muonBestTrackType();
        const std::vector<int>& mus_nOverlaps();
        const std::vector<int>& mus_nmatches();
        const std::vector<int>& mus_numberOfMatchedStations();
        const std::vector<int>& mus_overlap0();
        const std::vector<int>& mus_overlap1();
        const std::vector<int>& mus_pfcharge();
        const std::vector<int>& mus_pfflag();
        const std::vector<int>& mus_pfparticleId();
        const std::vector<int>& mus_pid_PFMuon();
        const std::vector<int>& mus_pid_TM2DCompatibilityLoose();
        const std::vector<int>& mus_pid_TM2DCompatibilityTight();
        const std::vector<int>& mus_pid_TMLastStationLoose();
        const std::vector<int>& mus_pid_TMLastStationTight();
        const std::vector<int>& mus_sta_validHits();
        const std::vector<int>& mus_timeDirection();
        const std::vector<int>& mus_timeNumStationsUsed();
        const std::vector<int>& mus_trk_charge();
        const std::vector<int>& mus_trkidx();
        const std::vector<int>& mus_type();
        const std::vector<int>& mus_validHits();
        const std::vector<int>& pfcands_charge();
        const std::vector<int>& pfcands_flag();
        const std::vector<int>& pfcands_particleId();
        const std::vector<int>& pfcands_pfelsidx();
        const std::vector<int>& pfcands_pfmusidx();
        const std::vector<int>& pfcands_trkidx();
        const std::vector<int>& pfcands_vtxidx();
        const std::vector<int>& pfels_elsidx();
        const std::vector<int>& pfels_charge();
        const std::vector<int>& pfels_flag();
        const std::vector<int>& pfels_particleId();
        const std::vector<int>& pfjets_chargedHadronMultiplicity();
        const std::vector<int>& pfjets_chargedMultiplicity();
        const std::vector<int>& pfjets_electronMultiplicity();
        const std::vector<int>& pfjets_hfEmMultiplicity();
        const std::vector<int>& pfjets_hfHadronMultiplicity();
        const std::vector<int>& pfjets_muonMultiplicity();
        const std::vector<int>& pfjets_neutralHadronMultiplicity();
        const std::vector<int>& pfjets_neutralMultiplicity();
        const std::vector<int>& pfjets_photonMultiplicity();
        const std::vector<int>& pfmus_musidx();
        const std::vector<int>& pfmus_charge();
        const std::vector<int>& pfmus_flag();
        const std::vector<int>& pfmus_particleId();
        const std::vector<int>& taus_pf_charge();
        const std::vector<int>& taus_pf_pfjetIndex();
        const std::vector<int>& photons_fiduciality();
        const std::vector<int>& photons_scindex();
        const std::vector<int>& puInfo_bunchCrossing();
        const std::vector<int>& puInfo_nPUvertices();
        const std::vector<int>& convs_algo();
        const std::vector<int>& convs_isConverted();
        const std::vector<int>& convs_quality();
        const std::vector<int>& scs_detIdSeed();
        const std::vector<int>& scs_elsidx();
        const std::vector<int>& scs_severitySeed();
        const std::vector<int>& svs_isKs();
        const std::vector<int>& svs_isLambda();
        const std::vector<int>& svs_mc3_id();
        const std::vector<int>& svs_nTrks();
        const std::vector<int>& mus_tcmet_flag();
        const std::vector<int>& trks_algo();
        const std::vector<int>& trks_charge();
        const std::vector<int>& trks_exp_innerlayers();
        const std::vector<int>& trks_exp_outerlayers();
        const std::vector<int>& trks_layer1_det();
        const std::vector<int>& trks_layer1_layer();
        const std::vector<int>& trks_layer1_sizerphi();
        const std::vector<int>& trks_layer1_sizerz();
        const std::vector<int>& trks_lostHits();
        const std::vector<int>& trks_lost_pixelhits();
        const std::vector<int>& trks_nLoops();
        const std::vector<int>& trks_nlayers();
        const std::vector<int>& trks_nlayers3D();
        const std::vector<int>& trks_nlayersLost();
        const std::vector<int>& trks_pvidx0();
        const std::vector<int>& trks_pvidx1();
        const std::vector<int>& trks_qualityMask();
        const std::vector<int>& trks_validHits();
        const std::vector<int>& trks_valid_pixelhits();
        const std::vector<int>& trks_elsidx();
        const std::vector<int>& trk_musidx();
        const std::vector<int>& trkjets_ntrks();
        const std::vector<int>& trkjets_vtxs_idx();
        const std::vector<int>& vtxs_isFake();
        const std::vector<int>& vtxs_isValid();
        const std::vector<int>& vtxs_tracksSize();
        const std::vector<int>& bsvtxs_isFake();
        const std::vector<int>& bsvtxs_isValid();
        const std::vector<int>& bsvtxs_tracksSize();
        const std::vector<std::vector<int> >& els_convs_delMissHits();
        const std::vector<std::vector<int> >& els_convs_flag();
        const std::vector<std::vector<int> >& els_convs_gsftkidx();
        const std::vector<std::vector<int> >& els_convs_tkidx();
        const std::vector<std::vector<int> >& genps_lepdaughter_id();
        const std::vector<std::vector<int> >& genps_lepdaughter_idx();
        const std::vector<std::vector<int> >& hlt_trigObjs_id();
        const std::vector<std::vector<int> >& hyp_jets_idx();
        const std::vector<std::vector<int> >& hyp_other_jets_idx();
        const std::vector<std::vector<int> >& mus_nStationCorrelatedHits();
        const std::vector<std::vector<int> >& mus_nStationHits();
        const std::vector<std::vector<int> >& pfjets_pfcandIndicies();
        const std::vector<std::vector<int> >& taus_pf_pfcandIndicies();
        const std::vector<std::vector<int> >& puInfo_ntrks_highpt();
        const std::vector<std::vector<int> >& puInfo_ntrks_lowpt();
        const std::vector<std::vector<int> >& convs_nHitsBeforeVtx();
        const std::vector<std::vector<int> >& convs_tkalgo();
        const std::vector<std::vector<int> >& convs_tkidx();
        const unsigned int& els_HLT_Ele17_Ele8_L1sL1DoubleEG137_version();
        const unsigned int& els_HLT_Ele17_Ele8_LeadingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_Mass50_LeadingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_Mass50_TrailingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_TrailingLeg_version();
        const unsigned int& els_HLT_Ele17_Ele8_version();
        const unsigned int& els_HLT_Ele20_SC4_Mass50_LeadingLeg_version();
        const unsigned int& els_HLT_Ele20_SC4_Mass50_TrailingLeg_version();
        const unsigned int& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_version();
        const unsigned int& els_HLT_Ele27_WP80_version();
        const unsigned int& els_HLT_Ele32_SC17_Mass50_LeadingLeg_version();
        const unsigned int& els_HLT_Ele32_SC17_Mass50_TrailingLeg_version();
        const unsigned int& els_HLT_Mu17_Ele8_TrailingLeg_version();
        const unsigned int& els_HLT_Mu17_Ele8_version();
        const unsigned int& els_HLT_Mu8_Ele17_version();
        const unsigned int& evt_nels();
        const unsigned int& evt_detectorStatus();
        const unsigned int& evt_event();
        const unsigned int& evt_lumiBlock();
        const unsigned int& evt_run();
        const unsigned int& genps_flavorHistoryFilterResult();
        const unsigned int& evt_ngenjets();
        const unsigned int& genps_signalProcessID();
        const unsigned int& evt_njets();
        const unsigned int& l1_bits1();
        const unsigned int& l1_bits2();
        const unsigned int& l1_bits3();
        const unsigned int& l1_bits4();
        const unsigned int& l1_techbits1();
        const unsigned int& l1_techbits2();
        const unsigned int& ls_lsNumber();
        const unsigned int& ls_numOrbit();
        const unsigned int& ls_startOrbit();
        const unsigned int& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_version();
        const unsigned int& mus_HLT_IsoMu24_eta2p1_version();
        const unsigned int& mus_HLT_Mu17_Ele8_LeadingLeg_version();
        const unsigned int& mus_HLT_Mu17_Ele8_version();
        const unsigned int& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_version();
        const unsigned int& mus_HLT_Mu17_Mu8_LeadingLeg_version();
        const unsigned int& mus_HLT_Mu17_Mu8_TrailingLeg_version();
        const unsigned int& mus_HLT_Mu17_Mu8_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_LeadingLeg_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLeg_version();
        const unsigned int& mus_HLT_Mu17_TkMu8_version();
        const unsigned int& mus_HLT_Mu8_Ele17_TrailingLeg_version();
        const unsigned int& mus_HLT_Mu8_Ele17_version();
        const unsigned int& evt_nphotons();
        const unsigned int& evt_ecalRecoStatus();
        const unsigned int& evt_nscs();
        const unsigned int& evt_ntrkjets();
        const unsigned int& evt_nvtxs();
        const unsigned int& evt_nbsvtxs();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_L1sL1DoubleEG137();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Ele17_Ele8_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Ele27_WP80();
        const std::vector<unsigned int>& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22();
        const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_LeadingLeg();
        const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Mu17_Ele8();
        const std::vector<unsigned int>& els_HLT_Mu17_Ele8_TrailingLeg();
        const std::vector<unsigned int>& els_HLT_Mu8_Ele17();
        const std::vector<unsigned int>& els_id2012ext_loose();
        const std::vector<unsigned int>& els_id2012ext_medium();
        const std::vector<unsigned int>& els_id2012ext_tight();
        const std::vector<unsigned int>& els_id2012ext_veto();
        const std::vector<unsigned int>& els_id2012_loose();
        const std::vector<unsigned int>& els_id2012_medium();
        const std::vector<unsigned int>& els_id2012_tight();
        const std::vector<unsigned int>& els_id2012_veto();
        const std::vector<unsigned int>& hlt_prescales();
        const std::vector<unsigned int>& l1_prescales();
        const std::vector<unsigned int>& l1_techtrigprescales();
        const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1();
        const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1();
        const std::vector<unsigned int>& mus_HLT_Mu17_Ele8();
        const std::vector<unsigned int>& mus_HLT_Mu17_Ele8_LeadingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_LeadingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_TrailingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_LeadingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLeg();
        const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered();
        const std::vector<unsigned int>& mus_HLT_Mu8_Ele17();
        const std::vector<unsigned int>& mus_HLT_Mu8_Ele17_TrailingLeg();
        const unsigned long long& evt_timestamp();

        // static methods:
        static void progress(const int nEventsTotal, const int nEventsChain);

    private:
        // members:
        const edm::Event* m_event_ptr;

        // branches 
        tas::EdmHandleWrapper< TBits > hlt_bits_handle;
        tas::EdmHandleWrapper< std::vector<TString> > evt_CMS2tag_handle;
        tas::EdmHandleWrapper< std::vector<TString> > evt_dataset_handle;
        tas::EdmHandleWrapper< std::vector<TString> > hlt_trigNames_handle;
        tas::EdmHandleWrapper< std::vector<TString> > l1_techtrigNames_handle;
        tas::EdmHandleWrapper< std::vector<TString> > l1_trigNames_handle;
        tas::EdmHandleWrapper< std::vector<TString> > evt_errCategory_handle;
        tas::EdmHandleWrapper< std::vector<TString> > evt_errModule_handle;
        tas::EdmHandleWrapper< std::vector<TString> > evt_errSeverity_handle;
        tas::EdmHandleWrapper< std::vector<TString> > sparm_comment_handle;
        tas::EdmHandleWrapper< std::vector<TString> > sparm_names_handle;
        tas::EdmHandleWrapper< bool > evt_eventHasHalo_handle;
        tas::EdmHandleWrapper< bool > hcalnoise_HasBadRBXTS4TS5_handle;
        tas::EdmHandleWrapper< bool > ls_isValid_handle;
        tas::EdmHandleWrapper< bool > filt_ecalBE_handle;
        tas::EdmHandleWrapper< bool > filt_ecalDR_handle;
        tas::EdmHandleWrapper< bool > filt_ecalLaser_handle;
        tas::EdmHandleWrapper< bool > filt_ecalTP_handle;
        tas::EdmHandleWrapper< bool > filt_eeBadSc_handle;
        tas::EdmHandleWrapper< bool > filt_greedyMuon_handle;
        tas::EdmHandleWrapper< bool > filt_hcalLaser_handle;
        tas::EdmHandleWrapper< bool > filt_inconsistentMuon_handle;
        tas::EdmHandleWrapper< bool > filt_jetIDFailure_handle;
        tas::EdmHandleWrapper< bool > filt_multiEvent_handle;
        tas::EdmHandleWrapper< bool > filt_trackingFailure_handle;
        tas::EdmHandleWrapper< bool > evt_hbheFilter_handle;
        tas::EdmHandleWrapper< std::vector<bool> > els_conv_vtx_flag_handle;
        tas::EdmHandleWrapper< std::vector<bool> > els_passingMvaPreselection_handle;
        tas::EdmHandleWrapper< std::vector<bool> > els_passingPflowPreselection_handle;
        tas::EdmHandleWrapper< std::vector<bool> > mus_isRPCMuon_handle;
        tas::EdmHandleWrapper< std::vector<bool> > mus_tightMatch_handle;
        tas::EdmHandleWrapper< std::vector<bool> > mus_updatedSta_handle;
        tas::EdmHandleWrapper< std::vector<bool> > pfcands_isMuIso_handle;
        tas::EdmHandleWrapper< std::vector<bool> > photons_haspixelSeed_handle;
        tas::EdmHandleWrapper< std::vector<double> > jets_closestElectron_DR_handle;
        tas::EdmHandleWrapper< std::vector<double> > jets_closestMuon_DR_handle;
        tas::EdmHandleWrapper< float > evt_bs_Xwidth_handle;
        tas::EdmHandleWrapper< float > evt_bs_XwidthErr_handle;
        tas::EdmHandleWrapper< float > evt_bs_Ywidth_handle;
        tas::EdmHandleWrapper< float > evt_bs_YwidthErr_handle;
        tas::EdmHandleWrapper< float > evt_bs_dxdz_handle;
        tas::EdmHandleWrapper< float > evt_bs_dxdzErr_handle;
        tas::EdmHandleWrapper< float > evt_bs_dydz_handle;
        tas::EdmHandleWrapper< float > evt_bs_dydzErr_handle;
        tas::EdmHandleWrapper< float > evt_bs_sigmaZ_handle;
        tas::EdmHandleWrapper< float > evt_bs_sigmaZErr_handle;
        tas::EdmHandleWrapper< float > evt_bs_xErr_handle;
        tas::EdmHandleWrapper< float > evt_bs_yErr_handle;
        tas::EdmHandleWrapper< float > evt_bs_zErr_handle;
        tas::EdmHandleWrapper< float > evt_bField_handle;
        tas::EdmHandleWrapper< float > evt_rho_handle;
        tas::EdmHandleWrapper< float > evt_rhoJEC_handle;
        tas::EdmHandleWrapper< float > evt_fixgrid_all_rho_handle;
        tas::EdmHandleWrapper< float > evt_fixgridfastjet_all_rho_handle;
        tas::EdmHandleWrapper< float > gen_met_handle;
        tas::EdmHandleWrapper< float > gen_metPhi_handle;
        tas::EdmHandleWrapper< float > genps_alphaQCD_handle;
        tas::EdmHandleWrapper< float > genps_pthat_handle;
        tas::EdmHandleWrapper< float > genps_qScale_handle;
        tas::EdmHandleWrapper< float > genps_weight_handle;
        tas::EdmHandleWrapper< float > gen_sumEt_handle;
        tas::EdmHandleWrapper< float > hcalnoise_GetRecHitEnergy_handle;
        tas::EdmHandleWrapper< float > hcalnoise_GetRecHitEnergy15_handle;
        tas::EdmHandleWrapper< float > hcalnoise_GetTotalCalibCharge_handle;
        tas::EdmHandleWrapper< float > hcalnoise_TS4TS5NoiseSumE_handle;
        tas::EdmHandleWrapper< float > hcalnoise_TS4TS5NoiseSumEt_handle;
        tas::EdmHandleWrapper< float > hcalnoise_eventChargeFraction_handle;
        tas::EdmHandleWrapper< float > hcalnoise_eventEMEnergy_handle;
        tas::EdmHandleWrapper< float > hcalnoise_eventEMFraction_handle;
        tas::EdmHandleWrapper< float > hcalnoise_eventHadEnergy_handle;
        tas::EdmHandleWrapper< float > hcalnoise_eventTrackEnergy_handle;
        tas::EdmHandleWrapper< float > hcalnoise_flatNoiseSumE_handle;
        tas::EdmHandleWrapper< float > hcalnoise_flatNoiseSumEt_handle;
        tas::EdmHandleWrapper< float > hcalnoise_isolatedNoiseSumE_handle;
        tas::EdmHandleWrapper< float > hcalnoise_isolatedNoiseSumEt_handle;
        tas::EdmHandleWrapper< float > hcalnoise_max10GeVHitTime_handle;
        tas::EdmHandleWrapper< float > hcalnoise_max25GeVHitTime_handle;
        tas::EdmHandleWrapper< float > hcalnoise_maxE10TS_handle;
        tas::EdmHandleWrapper< float > hcalnoise_maxE2Over10TS_handle;
        tas::EdmHandleWrapper< float > hcalnoise_maxE2TS_handle;
        tas::EdmHandleWrapper< float > hcalnoise_min10GeVHitTime_handle;
        tas::EdmHandleWrapper< float > hcalnoise_min25GeVHitTime_handle;
        tas::EdmHandleWrapper< float > hcalnoise_minE10TS_handle;
        tas::EdmHandleWrapper< float > hcalnoise_minE2Over10TS_handle;
        tas::EdmHandleWrapper< float > hcalnoise_minE2TS_handle;
        tas::EdmHandleWrapper< float > hcalnoise_minHPDEMF_handle;
        tas::EdmHandleWrapper< float > hcalnoise_minRBXEMF_handle;
        tas::EdmHandleWrapper< float > hcalnoise_rms10GeVHitTime_handle;
        tas::EdmHandleWrapper< float > hcalnoise_rms25GeVHitTime_handle;
        tas::EdmHandleWrapper< float > hcalnoise_spikeNoiseSumE_handle;
        tas::EdmHandleWrapper< float > hcalnoise_spikeNoiseSumEt_handle;
        tas::EdmHandleWrapper< float > hcalnoise_triangleNoiseSumE_handle;
        tas::EdmHandleWrapper< float > hcalnoise_triangleNoiseSumEt_handle;
        tas::EdmHandleWrapper< float > evt_kt6calo_central_rho_handle;
        tas::EdmHandleWrapper< float > evt_kt6calo_muhlt_rho_handle;
        tas::EdmHandleWrapper< float > evt_kt6calo_rho_handle;
        tas::EdmHandleWrapper< float > evt_kt6pf_ctrChargedPU_rho_handle;
        tas::EdmHandleWrapper< float > evt_kt6pf_ctrNeutral_rho_handle;
        tas::EdmHandleWrapper< float > evt_kt6pf_ctrNeutralTight_rho_handle;
        tas::EdmHandleWrapper< float > evt_kt6pf_foregiso_rho_handle;
        tas::EdmHandleWrapper< float > l1_met_etTot_handle;
        tas::EdmHandleWrapper< float > l1_met_met_handle;
        tas::EdmHandleWrapper< float > l1_mht_htTot_handle;
        tas::EdmHandleWrapper< float > l1_mht_mht_handle;
        tas::EdmHandleWrapper< float > ls_avgInsDelLumi_handle;
        tas::EdmHandleWrapper< float > ls_avgInsDelLumiErr_handle;
        tas::EdmHandleWrapper< float > ls_avgInsRecLumi_handle;
        tas::EdmHandleWrapper< float > ls_avgInsRecLumiErr_handle;
        tas::EdmHandleWrapper< float > ls_deadFrac_handle;
        tas::EdmHandleWrapper< float > ls_intgDelLumi_handle;
        tas::EdmHandleWrapper< float > ls_intgRecLumi_handle;
        tas::EdmHandleWrapper< float > ls_lumiSectionLength_handle;
        tas::EdmHandleWrapper< float > evt_ecalendcapm_met_handle;
        tas::EdmHandleWrapper< float > evt_ecalendcapm_metPhi_handle;
        tas::EdmHandleWrapper< float > evt_ecalendcapp_met_handle;
        tas::EdmHandleWrapper< float > evt_ecalendcapp_metPhi_handle;
        tas::EdmHandleWrapper< float > evt_ecalmet_handle;
        tas::EdmHandleWrapper< float > evt_ecalmetPhi_handle;
        tas::EdmHandleWrapper< float > evt_endcapm_met_handle;
        tas::EdmHandleWrapper< float > evt_endcapm_metPhi_handle;
        tas::EdmHandleWrapper< float > evt_endcapp_met_handle;
        tas::EdmHandleWrapper< float > evt_endcapp_metPhi_handle;
        tas::EdmHandleWrapper< float > evt_hcalendcapm_met_handle;
        tas::EdmHandleWrapper< float > evt_hcalendcapm_metPhi_handle;
        tas::EdmHandleWrapper< float > evt_hcalendcapp_met_handle;
        tas::EdmHandleWrapper< float > evt_hcalendcapp_metPhi_handle;
        tas::EdmHandleWrapper< float > evt_hcalmet_handle;
        tas::EdmHandleWrapper< float > evt_hcalmetPhi_handle;
        tas::EdmHandleWrapper< float > evt_met_handle;
        tas::EdmHandleWrapper< float > evt_met_EtGt3_handle;
        tas::EdmHandleWrapper< float > evt_metHO_handle;
        tas::EdmHandleWrapper< float > evt_metHOPhi_handle;
        tas::EdmHandleWrapper< float > evt_metHOSig_handle;
        tas::EdmHandleWrapper< float > evt_metMuonCorr_handle;
        tas::EdmHandleWrapper< float > evt_metMuonCorrPhi_handle;
        tas::EdmHandleWrapper< float > evt_metMuonCorrSig_handle;
        tas::EdmHandleWrapper< float > evt_metMuonJESCorr_handle;
        tas::EdmHandleWrapper< float > evt_metMuonJESCorrPhi_handle;
        tas::EdmHandleWrapper< float > evt_metMuonJESCorrSig_handle;
        tas::EdmHandleWrapper< float > evt_metNoHF_handle;
        tas::EdmHandleWrapper< float > evt_metNoHFHO_handle;
        tas::EdmHandleWrapper< float > evt_metNoHFHOPhi_handle;
        tas::EdmHandleWrapper< float > evt_metNoHFHOSig_handle;
        tas::EdmHandleWrapper< float > evt_metNoHFPhi_handle;
        tas::EdmHandleWrapper< float > evt_metNoHFSig_handle;
        tas::EdmHandleWrapper< float > evt_metOpt_handle;
        tas::EdmHandleWrapper< float > evt_metOptHO_handle;
        tas::EdmHandleWrapper< float > evt_metOptHOPhi_handle;
        tas::EdmHandleWrapper< float > evt_metOptHOSig_handle;
        tas::EdmHandleWrapper< float > evt_metOptNoHF_handle;
        tas::EdmHandleWrapper< float > evt_metOptNoHFHO_handle;
        tas::EdmHandleWrapper< float > evt_metOptNoHFHOPhi_handle;
        tas::EdmHandleWrapper< float > evt_metOptNoHFHOSig_handle;
        tas::EdmHandleWrapper< float > evt_metOptNoHFPhi_handle;
        tas::EdmHandleWrapper< float > evt_metOptNoHFSig_handle;
        tas::EdmHandleWrapper< float > evt_metOptPhi_handle;
        tas::EdmHandleWrapper< float > evt_metOptSig_handle;
        tas::EdmHandleWrapper< float > evt_metPhi_handle;
        tas::EdmHandleWrapper< float > evt_metPhi_EtGt3_handle;
        tas::EdmHandleWrapper< float > evt_metSig_handle;
        tas::EdmHandleWrapper< float > evt_sumet_handle;
        tas::EdmHandleWrapper< float > evt_sumet_EtGt3_handle;
        tas::EdmHandleWrapper< float > evt_sumetHO_handle;
        tas::EdmHandleWrapper< float > evt_sumetMuonCorr_handle;
        tas::EdmHandleWrapper< float > evt_sumetMuonJESCorr_handle;
        tas::EdmHandleWrapper< float > evt_sumetNoHF_handle;
        tas::EdmHandleWrapper< float > evt_sumetNoHFHO_handle;
        tas::EdmHandleWrapper< float > evt_sumetOpt_handle;
        tas::EdmHandleWrapper< float > evt_sumetOptHO_handle;
        tas::EdmHandleWrapper< float > evt_sumetOptNoHF_handle;
        tas::EdmHandleWrapper< float > evt_sumetOptNoHFHO_handle;
        tas::EdmHandleWrapper< float > pdfinfo_pdf1_handle;
        tas::EdmHandleWrapper< float > pdfinfo_pdf2_handle;
        tas::EdmHandleWrapper< float > pdfinfo_scale_handle;
        tas::EdmHandleWrapper< float > pdfinfo_x1_handle;
        tas::EdmHandleWrapper< float > pdfinfo_x2_handle;
        tas::EdmHandleWrapper< float > evt_fixgrid_rho_all_handle;
        tas::EdmHandleWrapper< float > evt_fixgrid_rho_ctr_handle;
        tas::EdmHandleWrapper< float > evt_fixgrid_rho_fwd_handle;
        tas::EdmHandleWrapper< float > evt_pfmet_handle;
        tas::EdmHandleWrapper< float > evt_pfmetPhi_handle;
        tas::EdmHandleWrapper< float > evt_pfmetPhi_type1cor_handle;
        tas::EdmHandleWrapper< float > evt_pfmetSig_handle;
        tas::EdmHandleWrapper< float > evt_pfmetSignificance_handle;
        tas::EdmHandleWrapper< float > evt_pfmet_type1cor_handle;
        tas::EdmHandleWrapper< float > evt_pfsumet_handle;
        tas::EdmHandleWrapper< float > sparm_filterEfficiency_handle;
        tas::EdmHandleWrapper< float > sparm_pdfScale_handle;
        tas::EdmHandleWrapper< float > sparm_pdfWeight1_handle;
        tas::EdmHandleWrapper< float > sparm_pdfWeight2_handle;
        tas::EdmHandleWrapper< float > sparm_weight_handle;
        tas::EdmHandleWrapper< float > sparm_xsec_handle;
        tas::EdmHandleWrapper< float > evt_pf_tcmet_handle;
        tas::EdmHandleWrapper< float > evt_pf_tcmetPhi_handle;
        tas::EdmHandleWrapper< float > evt_pf_tcmetSig_handle;
        tas::EdmHandleWrapper< float > evt_pf_tcsumet_handle;
        tas::EdmHandleWrapper< float > evt_tcmet_handle;
        tas::EdmHandleWrapper< float > evt_tcmetPhi_handle;
        tas::EdmHandleWrapper< float > evt_tcmetSig_handle;
        tas::EdmHandleWrapper< float > evt_tcsumet_handle;
        tas::EdmHandleWrapper< float > evt_ww_rho_act_handle;
        tas::EdmHandleWrapper< float > evt_ww_rho_handle;
        tas::EdmHandleWrapper< float > evt_ww_rho_rnd_handle;
        tas::EdmHandleWrapper< float > evt_ww_rho_vor_handle;
        tas::EdmHandleWrapper< LorentzVector  > evt_bsp4_handle;
        tas::EdmHandleWrapper< LorentzVector  > l1_met_p4_handle;
        tas::EdmHandleWrapper< LorentzVector  > l1_mht_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_mc_motherp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_mc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > jets_mc_gp_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > jets_mc_motherp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > jets_mc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_mc_motherp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_mc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfjets_mc_gp_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfjets_mc_motherp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfjets_mc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > photons_mc_motherp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > photons_mc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > trk_mcp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_conv_pos_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_inner_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_outer_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_p4In_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_p4Out_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_trk_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > els_vertex_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > genjets_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > genps_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > genps_prod_vtx_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > gsftrks_inner_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > gsftrks_outer_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > gsftrks_outer_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > gsftrks_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > gsftrks_vertex_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_ll_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_ll_trk_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_lt_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_lt_trk_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_FVFit_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_FVFit_v4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_ll_mc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > hyp_lt_mc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > jets_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > jets_vertex_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > l1_emiso_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > l1_emnoiso_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > l1_jetsc_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > l1_jetsf_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > l1_jetst_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > l1_mus_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_ecalpos_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_fitpicky_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_fittev_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_fittpfms_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_gfit_outerPos_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_gfit_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_gfit_vertex_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_pfp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_pfposAtEcal_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_sta_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_sta_vertex_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_trk_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > mus_vertex_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfcands_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfcands_posAtEcal_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfels_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfels_posAtEcal_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfjets_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfmus_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > pfmus_posAtEcal_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > taus_pf_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > photons_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > convs_refitPairMom_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > convs_vtxpos_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > scs_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > scs_pos_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > scs_vtx_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > svs_flight_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > svs_mc3_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > svs_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > svs_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > svs_refitp4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > trks_inner_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > trks_outer_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > trks_outer_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > trks_trk_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > trks_vertex_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > trkjets_p4_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > vtxs_position_handle;
        tas::EdmHandleWrapper< std::vector<LorentzVector > > bsvtxs_position_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<LorentzVector > > > els_convs_pos_p4_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<LorentzVector > > > genps_lepdaughter_p4_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<LorentzVector > > > hlt_trigObjs_p4_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<LorentzVector > > > hyp_jets_p4_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<LorentzVector > > > hyp_other_jets_p4_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_combinedSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_combinedSecondaryVertexMVABJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_jetBProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_jetProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_simpleSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_softElectronByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_softElectronByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_softElectronTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_softMuonBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_softMuonByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_softMuonByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_trackCountingHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jpts_trackCountingHighPurBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_combinedSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_combinedSecondaryVertexMVABJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_jetBProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_jetProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_simpleSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_softElectronByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_softElectronByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_softElectronTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_softMuonBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_softMuonByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_softMuonByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_trackCountingHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_trackCountingHighPurBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_combinedSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_combinedSecondaryVertexMVABJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_jetBProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_jetProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_simpleSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_softElectronByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_softElectronByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_softElectronTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_softMuonBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_softMuonByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_softMuonByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_trackCountingHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_trackCountingHighPurBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_combinedSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_combinedSecondaryVertexMVABJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_jetBProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_jetProbabilityBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_simpleSecondaryVertexBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_simpleSecondaryVertexHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_simpleSecondaryVertexHighPurBJetTags_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_softElectronByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_softElectronByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_softElectronTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_softMuonBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_softMuonByIP3dBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_softMuonByPtBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_trackCountingHighEffBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_trackCountingHighPurBJetTag_handle;
        tas::EdmHandleWrapper< std::vector<float> > evt_bs_covMatrix_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_mc3dr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_mcdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_mc3dr_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_mcdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_mc_emEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_mc_gpdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_mc_hadEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_mc_invEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_mc_otherEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_mc3dr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_mcdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mc3dr_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mcdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mc_emEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mc_gpdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mc_hadEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mc_invEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mc_otherEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_mc3dr_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_mcdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > trk_mc3dr_handle;
        tas::EdmHandleWrapper< std::vector<float> > trk_mcdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ecalJuraIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ecalJuraTowerIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalConeIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_tkJuraIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_jetdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_musdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_chpf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_chpf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_chpf_radialTight_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_chpf_radial_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_empf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_empf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_empf_radialTight_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_empf_radial_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_nhpf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_nhpf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_nhpf_radialTight_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_nhpf_radial_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_pf2012n0p5_ch_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_pf2012n0p5_em_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_pf2012n0p5_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_pf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_pf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_pf_radialTight_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_isoR03_pf_radial_bv_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ckf_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ckf_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_conv_dcot_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_conv_dist_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_conv_old_dcot_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_conv_old_dist_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_conv_old_radius_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_conv_radius_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_dEtaIn_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_dEtaOut_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_dPhiIn_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_dPhiInPhiOut_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_dPhiOut_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_deltaEtaEleClusterTrackAtCalo_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_deltaPhiEleClusterTrackAtCalo_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_e1x5_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_e2x5Max_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_e3x3_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_e5x5_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eMax_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eOverPIn_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eOverPOut_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eSCPresh_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eSCRaw_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eSeed_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eSeedOverPIn_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_eSeedOverPOut_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ecalEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ecalEnergyError_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ecalIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ecalIso04_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_etaErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_etaSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_etaSCwidth_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_fbrem_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hOverE_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalDepth1OverEcal_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalDepth1TowerSumEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalDepth1TowerSumEt04_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalDepth2OverEcal_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalDepth2TowerSumEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalDepth2TowerSumEt04_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_hcalIso04_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ip3d_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ip3derr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf2012_ch_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf2012_em_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf2012ext_ch_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf2012ext_em_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf2012ext_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf2012_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf_ch_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf_gamma05_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso03_pf_nhad05_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf2012_ch_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf2012_em_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf2012ext_ch_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf2012ext_em_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf2012ext_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf2012_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf_ch_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf_gamma05_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_iso04_pf_nhad05_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_layer1_charge_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_lh_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_mva_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_pfChargedHadronIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_pfNeutralHadronIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_pfPhotonIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_phiErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_phiSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_phiSCwidth_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_ptErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_r9_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaEtaEta_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaIEtaIEta_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaIEtaIEtaSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaIEtaIPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaIPhiIPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaIPhiIPhiSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaIphiIphi_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_sigmaPhiPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_tkIso_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_tkIso04_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_trackMomentumError_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_trkdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_trkshFrac_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > els_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_d0corrPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_d0phiCov_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_etaErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_layer1_charge_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_phiErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_ptErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > gsftrks_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_Ht_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_dPhi_nJet_metMuonJESCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_dPhi_nJet_muCorrMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_dPhi_nJet_tcMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_dPhi_nJet_unCorrMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_dPhi_metMuonJESCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_dPhi_muCorrMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_dPhi_tcMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_dPhi_unCorrMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_etaErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_phiErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_ptErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_ll_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_dPhi_metMuonJESCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_dPhi_muCorrMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_dPhi_tcMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_dPhi_unCorrMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_etaErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_phiErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_ptErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_lt_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_mt2_metMuonJESCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_mt2_muCorrMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_mt2_tcMet_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_sumJetPt_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_chi2ndf_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_prob_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_v4cxx_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_v4cxy_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_v4cyy_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_v4czx_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_v4czy_handle;
        tas::EdmHandleWrapper< std::vector<float> > hyp_FVFit_v4czz_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_approximatefHPD_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_approximatefRBX_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_cor_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_corL1FastL2L3_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_corL1L2L3_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_emFrac_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_fHPD_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_fRBX_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_fSubDetector1_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_fSubDetector2_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_fSubDetector3_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_fSubDetector4_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_hitsInN90_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_n90Hits_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_nECALTowers_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_nHCALTowers_handle;
        tas::EdmHandleWrapper< std::vector<float> > jets_restrictedEMF_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_met_deltax_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_met_deltay_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_eledr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_jetdr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_chpf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_chpf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_empf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_empf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_nhpf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_nhpf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_radial_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_radialTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_backToBackCompat_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_caloCompatibility_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_chi2LocalMomentum_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_chi2LocalPosition_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_cosmicCompat_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_e_em_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_e_emS9_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_e_had_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_e_hadS9_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_e_ho_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_e_hoS9_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_etaErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_qoverp_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_qoverpError_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_gfit_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_glbKink_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_glbTrackProbability_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_globalDeltaEtaPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_ip3d_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_ip3derr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso03_emEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso03_hadEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso03_hoEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso03_pf_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso03_sumPt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso04_pf_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso05_emEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso05_hadEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso05_hoEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso05_sumPt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_ChargedHadronPt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_ChargedParticlePt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_NeutralHadronEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_NeutralHadronEtHighThreshold_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_PUPt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_PhotonEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR03_pf_PhotonEtHighThreshold_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR04_pf_ChargedHadronPt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR04_pf_ChargedParticlePt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR04_pf_NeutralHadronEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR04_pf_NeutralHadronEtHighThreshold_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR04_pf_PUPt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR04_pf_PhotonEt_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_isoR04_pf_PhotonEtHighThreshold_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso_ecalvetoDep_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso_hcalvetoDep_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso_hovetoDep_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_iso_trckvetoDep_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_localDistance_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_overlapCompat_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfdeltaP_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfecalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfhcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfmva_emu_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfmva_epi_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfmva_nothing_gamma_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfmva_nothing_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfmva_pimu_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfpS1E_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfpS2E_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfrawEcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_pfrawHcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_phiErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_ptErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_qoverp_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_qoverpError_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_segmCompatibility_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_staRelChi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_qoverp_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_qoverpError_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_sta_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_timeAtIpInOut_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_timeAtIpInOutErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_timeAtIpOutIn_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_timeAtIpOutInErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_timeCompat_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_trkKink_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_trkRelChi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_vertexCompat_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_vertexphi_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_mvavalue_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_beta_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_betaStar_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_dRMean_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_dZ_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_frac01_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_frac02_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_frac03_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_frac04_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_frac05_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_nCharged_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_nNeutrals_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmva_nvtx_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full53xmvavalue_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_full5xmvavalue_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjet_met_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjet_metPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjet_sumet_handle;
        tas::EdmHandleWrapper< std::vector<float> > trk_met_handle;
        tas::EdmHandleWrapper< std::vector<float> > trk_metPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > trk_sumet_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_deltaP_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_ecalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_hcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_mva_emu_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_mva_epi_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_mva_nothing_gamma_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_mva_nothing_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_mva_pimu_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_pS1E_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_pS2E_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_rawEcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_rawHcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_deltaP_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_ecalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_hcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_iso04ChargedHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_iso04NeutralHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_iso04Photons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_isoChargedHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_isoNeutralHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_isoPhotons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_mva_emu_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_mva_epi_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_mva_nothing_gamma_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_mva_nothing_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_mva_pimu_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_pS1E_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_pS2E_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_rawEcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfels_rawHcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_area_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_chargedEmE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_chargedHadronE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_cor_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_corL1Fast_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_corL1FastL2L3_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_corL1FastL2L3residual_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_corL1L2L3_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_electronE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_hfEmE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_hfHadronE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_muonE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_neutralEmE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_neutralHadronE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfjets_photonE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_deltaP_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_ecalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_hcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_iso04ChargedHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_iso04NeutralHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_iso04Photons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_isoChargedHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_isoNeutralHadrons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_isoPhotons_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_mva_emu_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_mva_epi_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_mva_nothing_gamma_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_mva_nothing_nh_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_mva_pimu_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_pS1E_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_pS2E_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_rawEcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfmus_rawHcalE_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronDeadECAL_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronLoose_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronLooseMVA2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronLooseMVA3_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMVA_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMVA2category_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMVA2raw_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMVA3category_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMVA3raw_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMedium_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMediumMVA2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronMediumMVA3_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronTightMVA2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronTightMVA3_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronVLooseMVA2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstElectronVTightMVA3_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstMuonLoose_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstMuonLoose2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstMuonMedium_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstMuonMedium2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstMuonTight_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_againstMuonTight2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byCombinedIsolationDeltaBetaCorrRaw_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byCombinedIsolationDeltaBetaCorrRaw3Hits_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byDecayModeFinding_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byIsolationMVA2raw_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byIsolationMVAraw_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byLooseCombinedIsolationDeltaBetaCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byLooseCombinedIsolationDeltaBetaCorr3Hits_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byLooseIsolationMVA_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byLooseIsolationMVA2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byMediumCombinedIsolationDeltaBetaCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byMediumCombinedIsolationDeltaBetaCorr3Hits_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byMediumIsolationMVA_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byMediumIsolationMVA2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byTightCombinedIsolationDeltaBetaCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byTightCombinedIsolationDeltaBetaCorr3Hits_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byTightIsolationMVA_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byTightIsolationMVA2_handle;
        tas::EdmHandleWrapper< std::vector<float> > taus_pf_byVLooseCombinedIsolationDeltaBetaCorr_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_e1x5_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_e2x5Max_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_e3x3_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_e5x5_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_ecalIso03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_ecalIso04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hOverE_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalDepth1TowerSumEtBcConeDR03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalDepth1TowerSumEtBcConeDR04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalDepth2TowerSumEtBcConeDR03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalDepth2TowerSumEtBcConeDR04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalIso03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalIso04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalTowerSumEtBcConeDR03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_hcalTowerSumEtBcConeDR04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_ntkIsoHollow03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_ntkIsoHollow04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_ntkIsoSolid03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_ntkIsoSolid04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_sigmaEtaEta_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_sigmaIEtaIEta_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_swissSeed_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_tkIsoHollow03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_tkIsoHollow04_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_tkIsoSolid03_handle;
        tas::EdmHandleWrapper< std::vector<float> > photons_tkIsoSolid04_handle;
        tas::EdmHandleWrapper< std::vector<float> > puInfo_trueNumInteractions_handle;
        tas::EdmHandleWrapper< std::vector<float> > convs_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > convs_dl_handle;
        tas::EdmHandleWrapper< std::vector<float> > convs_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > sparm_values_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_clustersSize_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_crystalsSize_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e1x3_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e1x5_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e2nd_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e2x2_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e2x5Max_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e3x1_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e3x2_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e3x3_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e4x4_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_e5x5_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_eMax_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_eSeed_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_energy_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_eta_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_hoe_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_laserCorMax_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_laserCorMean_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_laserCorSeed_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_phi_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_preshowerEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_rawEnergy_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaEtaEta_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaEtaPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaIEtaIEta_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaIEtaIEtaSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaIEtaIPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaIEtaIPhiSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaIPhiIPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaIPhiIPhiSC_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_sigmaPhiPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > scs_timeSeed_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_anglePV_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_dist3Dsig_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_dist3Dval_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_distXYsig_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_distXYval_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_prob_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_xError_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_yError_handle;
        tas::EdmHandleWrapper< std::vector<float> > svs_zError_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_tcmet_deltax_handle;
        tas::EdmHandleWrapper< std::vector<float> > mus_tcmet_deltay_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_dzpv_handle;
        tas::EdmHandleWrapper< std::vector<float> > pfcands_trkiso_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_d0_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_d0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_d0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_d0corrPhi_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_d0phiCov_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_etaErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_layer1_charge_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_phiErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_ptErr_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_validFraction_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_z0_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_z0Err_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_z0corr_handle;
        tas::EdmHandleWrapper< std::vector<float> > trkjets_cor_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_d0Errvtx_handle;
        tas::EdmHandleWrapper< std::vector<float> > trks_d0vtx_handle;
        tas::EdmHandleWrapper< std::vector<float> > vtxs_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > vtxs_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > vtxs_sumpt_handle;
        tas::EdmHandleWrapper< std::vector<float> > vtxs_xError_handle;
        tas::EdmHandleWrapper< std::vector<float> > vtxs_yError_handle;
        tas::EdmHandleWrapper< std::vector<float> > vtxs_zError_handle;
        tas::EdmHandleWrapper< std::vector<float> > bsvtxs_chi2_handle;
        tas::EdmHandleWrapper< std::vector<float> > bsvtxs_ndof_handle;
        tas::EdmHandleWrapper< std::vector<float> > bsvtxs_sumpt_handle;
        tas::EdmHandleWrapper< std::vector<float> > bsvtxs_xError_handle;
        tas::EdmHandleWrapper< std::vector<float> > bsvtxs_yError_handle;
        tas::EdmHandleWrapper< std::vector<float> > bsvtxs_zError_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > els_convs_dcot_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > els_convs_dist_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > els_convs_radius_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > mus_stationShowerDeltaR_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > mus_stationShowerSizeT_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > puInfo_instLumi_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > puInfo_sump_highpt_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > puInfo_sumpt_lowpt_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > puInfo_zpositions_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > vtxs_covMatrix_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<float> > > bsvtxs_covMatrix_handle;
        tas::EdmHandleWrapper< int > evt_cscLooseHaloId_handle;
        tas::EdmHandleWrapper< int > evt_cscTightHaloId_handle;
        tas::EdmHandleWrapper< int > evt_ecalLooseHaloId_handle;
        tas::EdmHandleWrapper< int > evt_ecalTightHaloId_handle;
        tas::EdmHandleWrapper< int > evt_extremeTightHaloId_handle;
        tas::EdmHandleWrapper< int > evt_globalLooseHaloId_handle;
        tas::EdmHandleWrapper< int > evt_globalTightHaloId_handle;
        tas::EdmHandleWrapper< int > evt_hcalLooseHaloId_handle;
        tas::EdmHandleWrapper< int > evt_hcalTightHaloId_handle;
        tas::EdmHandleWrapper< int > evt_looseHaloId_handle;
        tas::EdmHandleWrapper< int > evt_nHaloLikeTracks_handle;
        tas::EdmHandleWrapper< int > evt_nHaloTriggerCandidates_handle;
        tas::EdmHandleWrapper< int > evt_tightHaloId_handle;
        tas::EdmHandleWrapper< int > evt_bsType_handle;
        tas::EdmHandleWrapper< int > evt_bunchCrossing_handle;
        tas::EdmHandleWrapper< int > evt_experimentType_handle;
        tas::EdmHandleWrapper< int > evt_isRealData_handle;
        tas::EdmHandleWrapper< int > evt_orbitNumber_handle;
        tas::EdmHandleWrapper< int > evt_storeNumber_handle;
        tas::EdmHandleWrapper< int > hcalnoise_GetRecHitCount_handle;
        tas::EdmHandleWrapper< int > hcalnoise_GetRecHitCount15_handle;
        tas::EdmHandleWrapper< int > hcalnoise_maxHPDHits_handle;
        tas::EdmHandleWrapper< int > hcalnoise_maxHPDNoOtherHits_handle;
        tas::EdmHandleWrapper< int > hcalnoise_maxRBXHits_handle;
        tas::EdmHandleWrapper< int > hcalnoise_maxZeros_handle;
        tas::EdmHandleWrapper< int > hcalnoise_noiseFilterStatus_handle;
        tas::EdmHandleWrapper< int > hcalnoise_noiseType_handle;
        tas::EdmHandleWrapper< int > hcalnoise_num10GeVHits_handle;
        tas::EdmHandleWrapper< int > hcalnoise_num25GeVHits_handle;
        tas::EdmHandleWrapper< int > hcalnoise_numFlatNoiseChannels_handle;
        tas::EdmHandleWrapper< int > hcalnoise_numIsolatedNoiseChannels_handle;
        tas::EdmHandleWrapper< int > hcalnoise_numProblematicRBXs_handle;
        tas::EdmHandleWrapper< int > hcalnoise_numSpikeNoiseChannels_handle;
        tas::EdmHandleWrapper< int > hcalnoise_numTS4TS5NoiseChannels_handle;
        tas::EdmHandleWrapper< int > hcalnoise_numTriangleNoiseChannels_handle;
        tas::EdmHandleWrapper< int > hcalnoise_passHighLevelNoiseFilter_handle;
        tas::EdmHandleWrapper< int > hcalnoise_passLooseNoiseFilter_handle;
        tas::EdmHandleWrapper< int > hcalnoise_passTightNoiseFilter_handle;
        tas::EdmHandleWrapper< int > l1_nemiso_handle;
        tas::EdmHandleWrapper< int > l1_nemnoiso_handle;
        tas::EdmHandleWrapper< int > l1_njetsc_handle;
        tas::EdmHandleWrapper< int > l1_njetsf_handle;
        tas::EdmHandleWrapper< int > l1_njetst_handle;
        tas::EdmHandleWrapper< int > l1_nmus_handle;
        tas::EdmHandleWrapper< int > ls_lumiSecQual_handle;
        tas::EdmHandleWrapper< int > pdfinfo_id1_handle;
        tas::EdmHandleWrapper< int > pdfinfo_id2_handle;
        tas::EdmHandleWrapper< int > sparm_subProcessId_handle;
        tas::EdmHandleWrapper< std::vector<int> > evt_ecaliPhiSuspects_handle;
        tas::EdmHandleWrapper< std::vector<int> > evt_globaliPhiSuspects_handle;
        tas::EdmHandleWrapper< std::vector<int> > evt_hcaliPhiSuspects_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_mc3_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_mc3idx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_mc3_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_mc3_motheridx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_mcidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_mc3_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_mc3idx_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_mc_gpidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_mcidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_mc3_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_mc3idx_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_mc3_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_mc3_motheridx_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_mcidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mc3_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mc3idx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mc_gpidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mcidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_mc3_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_mc3idx_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_mc3_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_mc3_motheridx_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_mcidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_mc3_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_mc3idx_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_mc3_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_mc3_motheridx_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_mcidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_closestJet_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_closestMuon_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_pfelsidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_category_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_ckf_laywithmeas_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_class_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_delMissHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_flag_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_gsftkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_old_delMissHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_old_flag_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_old_gsftkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_old_tkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_conv_tkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_exp_innerlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_exp_outerlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_fiduciality_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_gsftrkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_layer1_det_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_layer1_layer_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_layer1_sizerphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_layer1_sizerz_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_lostHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_lost_pixelhits_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_nSeed_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_sccharge_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_scindex_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_trk_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_trkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > els_valid_pixelhits_handle;
        tas::EdmHandleWrapper< std::vector<int> > genps_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > genps_id_mother_handle;
        tas::EdmHandleWrapper< std::vector<int> > genps_status_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_exp_innerlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_exp_outerlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_layer1_det_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_layer1_layer_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_layer1_sizerphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_layer1_sizerz_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_lostHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_lost_pixelhits_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_nlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_nlayers3D_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_nlayersLost_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > gsftrks_valid_pixelhits_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_ll_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_ll_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_ll_index_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_ll_lostHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_ll_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_lt_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_lt_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_lt_index_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_lt_lostHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_lt_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_njets_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_nojets_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_FVFit_ndf_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_FVFit_status_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_ll_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_ll_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_lt_mc_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > hyp_lt_mc_motherid_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mcflavorAlgo_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_mcflavorPhys_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_closestElectron_handle;
        tas::EdmHandleWrapper< std::vector<int> > jets_closestMuon_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emiso_ieta_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emiso_iphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emiso_rawId_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emiso_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emnoiso_ieta_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emnoiso_iphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emnoiso_rawId_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_emnoiso_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsc_ieta_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsc_iphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsc_rawId_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsc_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsf_ieta_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsf_iphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsf_rawId_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetsf_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetst_ieta_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetst_iphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetst_rawId_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_jetst_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_mus_flags_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_mus_q_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_mus_qual_handle;
        tas::EdmHandleWrapper< std::vector<int> > l1_mus_qualFlags_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_met_flag_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_closestEle_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_closestJet_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pfmusidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_gfit_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_gfit_validSTAHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_gfit_validSiHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_goodmask_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_iso03_ntrk_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_iso05_ntrk_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_lostHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_muonBestTrackType_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_nOverlaps_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_nmatches_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_numberOfMatchedStations_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_overlap0_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_overlap1_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pfcharge_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pfflag_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pfparticleId_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pid_PFMuon_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pid_TM2DCompatibilityLoose_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pid_TM2DCompatibilityTight_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pid_TMLastStationLoose_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_pid_TMLastStationTight_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_sta_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_timeDirection_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_timeNumStationsUsed_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_trk_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_trkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_type_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfcands_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfcands_flag_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfcands_particleId_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfcands_pfelsidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfcands_pfmusidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfcands_trkidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfcands_vtxidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfels_elsidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfels_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfels_flag_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfels_particleId_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_chargedHadronMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_chargedMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_electronMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_hfEmMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_hfHadronMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_muonMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_neutralHadronMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_neutralMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfjets_photonMultiplicity_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfmus_musidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfmus_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfmus_flag_handle;
        tas::EdmHandleWrapper< std::vector<int> > pfmus_particleId_handle;
        tas::EdmHandleWrapper< std::vector<int> > taus_pf_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > taus_pf_pfjetIndex_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_fiduciality_handle;
        tas::EdmHandleWrapper< std::vector<int> > photons_scindex_handle;
        tas::EdmHandleWrapper< std::vector<int> > puInfo_bunchCrossing_handle;
        tas::EdmHandleWrapper< std::vector<int> > puInfo_nPUvertices_handle;
        tas::EdmHandleWrapper< std::vector<int> > convs_algo_handle;
        tas::EdmHandleWrapper< std::vector<int> > convs_isConverted_handle;
        tas::EdmHandleWrapper< std::vector<int> > convs_quality_handle;
        tas::EdmHandleWrapper< std::vector<int> > scs_detIdSeed_handle;
        tas::EdmHandleWrapper< std::vector<int> > scs_elsidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > scs_severitySeed_handle;
        tas::EdmHandleWrapper< std::vector<int> > svs_isKs_handle;
        tas::EdmHandleWrapper< std::vector<int> > svs_isLambda_handle;
        tas::EdmHandleWrapper< std::vector<int> > svs_mc3_id_handle;
        tas::EdmHandleWrapper< std::vector<int> > svs_nTrks_handle;
        tas::EdmHandleWrapper< std::vector<int> > mus_tcmet_flag_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_algo_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_charge_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_exp_innerlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_exp_outerlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_layer1_det_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_layer1_layer_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_layer1_sizerphi_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_layer1_sizerz_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_lostHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_lost_pixelhits_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_nLoops_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_nlayers_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_nlayers3D_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_nlayersLost_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_pvidx0_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_pvidx1_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_qualityMask_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_validHits_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_valid_pixelhits_handle;
        tas::EdmHandleWrapper< std::vector<int> > trks_elsidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > trk_musidx_handle;
        tas::EdmHandleWrapper< std::vector<int> > trkjets_ntrks_handle;
        tas::EdmHandleWrapper< std::vector<int> > trkjets_vtxs_idx_handle;
        tas::EdmHandleWrapper< std::vector<int> > vtxs_isFake_handle;
        tas::EdmHandleWrapper< std::vector<int> > vtxs_isValid_handle;
        tas::EdmHandleWrapper< std::vector<int> > vtxs_tracksSize_handle;
        tas::EdmHandleWrapper< std::vector<int> > bsvtxs_isFake_handle;
        tas::EdmHandleWrapper< std::vector<int> > bsvtxs_isValid_handle;
        tas::EdmHandleWrapper< std::vector<int> > bsvtxs_tracksSize_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > els_convs_delMissHits_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > els_convs_flag_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > els_convs_gsftkidx_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > els_convs_tkidx_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > genps_lepdaughter_id_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > genps_lepdaughter_idx_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > hlt_trigObjs_id_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > hyp_jets_idx_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > hyp_other_jets_idx_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > mus_nStationCorrelatedHits_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > mus_nStationHits_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > pfjets_pfcandIndicies_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > taus_pf_pfcandIndicies_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > puInfo_ntrks_highpt_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > puInfo_ntrks_lowpt_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > convs_nHitsBeforeVtx_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > convs_tkalgo_handle;
        tas::EdmHandleWrapper< std::vector<std::vector<int> > > convs_tkidx_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele17_Ele8_L1sL1DoubleEG137_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele17_Ele8_LeadingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele17_Ele8_Mass50_LeadingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele17_Ele8_Mass50_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele17_Ele8_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele17_Ele8_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele20_SC4_Mass50_LeadingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele20_SC4_Mass50_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele27_WP80_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele32_SC17_Mass50_LeadingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Ele32_SC17_Mass50_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Mu17_Ele8_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Mu17_Ele8_version_handle;
        tas::EdmHandleWrapper< unsigned int > els_HLT_Mu8_Ele17_version_handle;
        tas::EdmHandleWrapper< unsigned int > evt_nels_handle;
        tas::EdmHandleWrapper< unsigned int > evt_detectorStatus_handle;
        tas::EdmHandleWrapper< unsigned int > evt_event_handle;
        tas::EdmHandleWrapper< unsigned int > evt_lumiBlock_handle;
        tas::EdmHandleWrapper< unsigned int > evt_run_handle;
        tas::EdmHandleWrapper< unsigned int > genps_flavorHistoryFilterResult_handle;
        tas::EdmHandleWrapper< unsigned int > evt_ngenjets_handle;
        tas::EdmHandleWrapper< unsigned int > genps_signalProcessID_handle;
        tas::EdmHandleWrapper< unsigned int > evt_njets_handle;
        tas::EdmHandleWrapper< unsigned int > l1_bits1_handle;
        tas::EdmHandleWrapper< unsigned int > l1_bits2_handle;
        tas::EdmHandleWrapper< unsigned int > l1_bits3_handle;
        tas::EdmHandleWrapper< unsigned int > l1_bits4_handle;
        tas::EdmHandleWrapper< unsigned int > l1_techbits1_handle;
        tas::EdmHandleWrapper< unsigned int > l1_techbits2_handle;
        tas::EdmHandleWrapper< unsigned int > ls_lsNumber_handle;
        tas::EdmHandleWrapper< unsigned int > ls_numOrbit_handle;
        tas::EdmHandleWrapper< unsigned int > ls_startOrbit_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_IsoMu24_eta2p1_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_Ele8_LeadingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_Ele8_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_Mu8_LeadingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_Mu8_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_Mu8_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_TkMu8_LeadingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_TkMu8_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu17_TkMu8_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu8_Ele17_TrailingLeg_version_handle;
        tas::EdmHandleWrapper< unsigned int > mus_HLT_Mu8_Ele17_version_handle;
        tas::EdmHandleWrapper< unsigned int > evt_nphotons_handle;
        tas::EdmHandleWrapper< unsigned int > evt_ecalRecoStatus_handle;
        tas::EdmHandleWrapper< unsigned int > evt_nscs_handle;
        tas::EdmHandleWrapper< unsigned int > evt_ntrkjets_handle;
        tas::EdmHandleWrapper< unsigned int > evt_nvtxs_handle;
        tas::EdmHandleWrapper< unsigned int > evt_nbsvtxs_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele17_Ele8_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele17_Ele8_L1sL1DoubleEG137_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele17_Ele8_LeadingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele17_Ele8_Mass50_LeadingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele17_Ele8_Mass50_TrailingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele17_Ele8_TrailingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele20_SC4_Mass50_LeadingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele20_SC4_Mass50_TrailingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele27_WP80_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele32_SC17_Mass50_LeadingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Ele32_SC17_Mass50_TrailingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Mu17_Ele8_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Mu17_Ele8_TrailingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_HLT_Mu8_Ele17_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012ext_loose_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012ext_medium_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012ext_tight_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012ext_veto_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012_loose_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012_medium_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012_tight_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > els_id2012_veto_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > hlt_prescales_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > l1_prescales_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > l1_techtrigprescales_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_IsoMu24_eta2p1_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_Ele8_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_Ele8_LeadingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_LeadingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_Mu8_TrailingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_LeadingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_TrailingLeg_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu8_Ele17_handle;
        tas::EdmHandleWrapper< std::vector<unsigned int> > mus_HLT_Mu8_Ele17_TrailingLeg_handle;
        tas::EdmHandleWrapper< unsigned long long > evt_timestamp_handle;

};

// public interface 
// ------------------------------------------------------------------------------------------------- //

namespace tas
{
    bool passHLTTrigger(const TString& trigName);
    bool passL1Trigger(const TString& trigName);

    const TBits& hlt_bits();
    const std::vector<TString>& evt_CMS2tag();
    const std::vector<TString>& evt_dataset();
    const std::vector<TString>& hlt_trigNames();
    const std::vector<TString>& l1_techtrigNames();
    const std::vector<TString>& l1_trigNames();
    const std::vector<TString>& evt_errCategory();
    const std::vector<TString>& evt_errModule();
    const std::vector<TString>& evt_errSeverity();
    const std::vector<TString>& sparm_comment();
    const std::vector<TString>& sparm_names();
    const bool& evt_eventHasHalo();
    const bool& hcalnoise_HasBadRBXTS4TS5();
    const bool& ls_isValid();
    const bool& filt_ecalBE();
    const bool& filt_ecalDR();
    const bool& filt_ecalLaser();
    const bool& filt_ecalTP();
    const bool& filt_eeBadSc();
    const bool& filt_greedyMuon();
    const bool& filt_hcalLaser();
    const bool& filt_inconsistentMuon();
    const bool& filt_jetIDFailure();
    const bool& filt_multiEvent();
    const bool& filt_trackingFailure();
    const bool& evt_hbheFilter();
    const std::vector<bool>& els_conv_vtx_flag();
    const std::vector<bool>& els_passingMvaPreselection();
    const std::vector<bool>& els_passingPflowPreselection();
    const std::vector<bool>& mus_isRPCMuon();
    const std::vector<bool>& mus_tightMatch();
    const std::vector<bool>& mus_updatedSta();
    const std::vector<bool>& pfcands_isMuIso();
    const std::vector<bool>& photons_haspixelSeed();
    const std::vector<double>& jets_closestElectron_DR();
    const std::vector<double>& jets_closestMuon_DR();
    const float& evt_bs_Xwidth();
    const float& evt_bs_XwidthErr();
    const float& evt_bs_Ywidth();
    const float& evt_bs_YwidthErr();
    const float& evt_bs_dxdz();
    const float& evt_bs_dxdzErr();
    const float& evt_bs_dydz();
    const float& evt_bs_dydzErr();
    const float& evt_bs_sigmaZ();
    const float& evt_bs_sigmaZErr();
    const float& evt_bs_xErr();
    const float& evt_bs_yErr();
    const float& evt_bs_zErr();
    const float& evt_bField();
    const float& evt_rho();
    const float& evt_rhoJEC();
    const float& evt_fixgrid_all_rho();
    const float& evt_fixgridfastjet_all_rho();
    const float& gen_met();
    const float& gen_metPhi();
    const float& genps_alphaQCD();
    const float& genps_pthat();
    const float& genps_qScale();
    const float& genps_weight();
    const float& gen_sumEt();
    const float& hcalnoise_GetRecHitEnergy();
    const float& hcalnoise_GetRecHitEnergy15();
    const float& hcalnoise_GetTotalCalibCharge();
    const float& hcalnoise_TS4TS5NoiseSumE();
    const float& hcalnoise_TS4TS5NoiseSumEt();
    const float& hcalnoise_eventChargeFraction();
    const float& hcalnoise_eventEMEnergy();
    const float& hcalnoise_eventEMFraction();
    const float& hcalnoise_eventHadEnergy();
    const float& hcalnoise_eventTrackEnergy();
    const float& hcalnoise_flatNoiseSumE();
    const float& hcalnoise_flatNoiseSumEt();
    const float& hcalnoise_isolatedNoiseSumE();
    const float& hcalnoise_isolatedNoiseSumEt();
    const float& hcalnoise_max10GeVHitTime();
    const float& hcalnoise_max25GeVHitTime();
    const float& hcalnoise_maxE10TS();
    const float& hcalnoise_maxE2Over10TS();
    const float& hcalnoise_maxE2TS();
    const float& hcalnoise_min10GeVHitTime();
    const float& hcalnoise_min25GeVHitTime();
    const float& hcalnoise_minE10TS();
    const float& hcalnoise_minE2Over10TS();
    const float& hcalnoise_minE2TS();
    const float& hcalnoise_minHPDEMF();
    const float& hcalnoise_minRBXEMF();
    const float& hcalnoise_rms10GeVHitTime();
    const float& hcalnoise_rms25GeVHitTime();
    const float& hcalnoise_spikeNoiseSumE();
    const float& hcalnoise_spikeNoiseSumEt();
    const float& hcalnoise_triangleNoiseSumE();
    const float& hcalnoise_triangleNoiseSumEt();
    const float& evt_kt6calo_central_rho();
    const float& evt_kt6calo_muhlt_rho();
    const float& evt_kt6calo_rho();
    const float& evt_kt6pf_ctrChargedPU_rho();
    const float& evt_kt6pf_ctrNeutral_rho();
    const float& evt_kt6pf_ctrNeutralTight_rho();
    const float& evt_kt6pf_foregiso_rho();
    const float& l1_met_etTot();
    const float& l1_met_met();
    const float& l1_mht_htTot();
    const float& l1_mht_mht();
    const float& ls_avgInsDelLumi();
    const float& ls_avgInsDelLumiErr();
    const float& ls_avgInsRecLumi();
    const float& ls_avgInsRecLumiErr();
    const float& ls_deadFrac();
    const float& ls_intgDelLumi();
    const float& ls_intgRecLumi();
    const float& ls_lumiSectionLength();
    const float& evt_ecalendcapm_met();
    const float& evt_ecalendcapm_metPhi();
    const float& evt_ecalendcapp_met();
    const float& evt_ecalendcapp_metPhi();
    const float& evt_ecalmet();
    const float& evt_ecalmetPhi();
    const float& evt_endcapm_met();
    const float& evt_endcapm_metPhi();
    const float& evt_endcapp_met();
    const float& evt_endcapp_metPhi();
    const float& evt_hcalendcapm_met();
    const float& evt_hcalendcapm_metPhi();
    const float& evt_hcalendcapp_met();
    const float& evt_hcalendcapp_metPhi();
    const float& evt_hcalmet();
    const float& evt_hcalmetPhi();
    const float& evt_met();
    const float& evt_met_EtGt3();
    const float& evt_metHO();
    const float& evt_metHOPhi();
    const float& evt_metHOSig();
    const float& evt_metMuonCorr();
    const float& evt_metMuonCorrPhi();
    const float& evt_metMuonCorrSig();
    const float& evt_metMuonJESCorr();
    const float& evt_metMuonJESCorrPhi();
    const float& evt_metMuonJESCorrSig();
    const float& evt_metNoHF();
    const float& evt_metNoHFHO();
    const float& evt_metNoHFHOPhi();
    const float& evt_metNoHFHOSig();
    const float& evt_metNoHFPhi();
    const float& evt_metNoHFSig();
    const float& evt_metOpt();
    const float& evt_metOptHO();
    const float& evt_metOptHOPhi();
    const float& evt_metOptHOSig();
    const float& evt_metOptNoHF();
    const float& evt_metOptNoHFHO();
    const float& evt_metOptNoHFHOPhi();
    const float& evt_metOptNoHFHOSig();
    const float& evt_metOptNoHFPhi();
    const float& evt_metOptNoHFSig();
    const float& evt_metOptPhi();
    const float& evt_metOptSig();
    const float& evt_metPhi();
    const float& evt_metPhi_EtGt3();
    const float& evt_metSig();
    const float& evt_sumet();
    const float& evt_sumet_EtGt3();
    const float& evt_sumetHO();
    const float& evt_sumetMuonCorr();
    const float& evt_sumetMuonJESCorr();
    const float& evt_sumetNoHF();
    const float& evt_sumetNoHFHO();
    const float& evt_sumetOpt();
    const float& evt_sumetOptHO();
    const float& evt_sumetOptNoHF();
    const float& evt_sumetOptNoHFHO();
    const float& pdfinfo_pdf1();
    const float& pdfinfo_pdf2();
    const float& pdfinfo_scale();
    const float& pdfinfo_x1();
    const float& pdfinfo_x2();
    const float& evt_fixgrid_rho_all();
    const float& evt_fixgrid_rho_ctr();
    const float& evt_fixgrid_rho_fwd();
    const float& evt_pfmet();
    const float& evt_pfmetPhi();
    const float& evt_pfmetPhi_type1cor();
    const float& evt_pfmetSig();
    const float& evt_pfmetSignificance();
    const float& evt_pfmet_type1cor();
    const float& evt_pfsumet();
    const float& sparm_filterEfficiency();
    const float& sparm_pdfScale();
    const float& sparm_pdfWeight1();
    const float& sparm_pdfWeight2();
    const float& sparm_weight();
    const float& sparm_xsec();
    const float& evt_pf_tcmet();
    const float& evt_pf_tcmetPhi();
    const float& evt_pf_tcmetSig();
    const float& evt_pf_tcsumet();
    const float& evt_tcmet();
    const float& evt_tcmetPhi();
    const float& evt_tcmetSig();
    const float& evt_tcsumet();
    const float& evt_ww_rho_act();
    const float& evt_ww_rho();
    const float& evt_ww_rho_rnd();
    const float& evt_ww_rho_vor();
    const LorentzVector & evt_bsp4();
    const LorentzVector & l1_met_p4();
    const LorentzVector & l1_mht_p4();
    const std::vector<LorentzVector >& els_mc_motherp4();
    const std::vector<LorentzVector >& els_mc_p4();
    const std::vector<LorentzVector >& jets_mc_gp_p4();
    const std::vector<LorentzVector >& jets_mc_motherp4();
    const std::vector<LorentzVector >& jets_mc_p4();
    const std::vector<LorentzVector >& mus_mc_motherp4();
    const std::vector<LorentzVector >& mus_mc_p4();
    const std::vector<LorentzVector >& pfjets_mc_gp_p4();
    const std::vector<LorentzVector >& pfjets_mc_motherp4();
    const std::vector<LorentzVector >& pfjets_mc_p4();
    const std::vector<LorentzVector >& photons_mc_motherp4();
    const std::vector<LorentzVector >& photons_mc_p4();
    const std::vector<LorentzVector >& trk_mcp4();
    const std::vector<LorentzVector >& els_conv_pos_p4();
    const std::vector<LorentzVector >& els_inner_position();
    const std::vector<LorentzVector >& els_outer_position();
    const std::vector<LorentzVector >& els_p4();
    const std::vector<LorentzVector >& els_p4In();
    const std::vector<LorentzVector >& els_p4Out();
    const std::vector<LorentzVector >& els_trk_p4();
    const std::vector<LorentzVector >& els_vertex_p4();
    const std::vector<LorentzVector >& genjets_p4();
    const std::vector<LorentzVector >& genps_p4();
    const std::vector<LorentzVector >& genps_prod_vtx();
    const std::vector<LorentzVector >& gsftrks_inner_position();
    const std::vector<LorentzVector >& gsftrks_outer_p4();
    const std::vector<LorentzVector >& gsftrks_outer_position();
    const std::vector<LorentzVector >& gsftrks_p4();
    const std::vector<LorentzVector >& gsftrks_vertex_p4();
    const std::vector<LorentzVector >& hyp_ll_p4();
    const std::vector<LorentzVector >& hyp_ll_trk_p4();
    const std::vector<LorentzVector >& hyp_lt_p4();
    const std::vector<LorentzVector >& hyp_lt_trk_p4();
    const std::vector<LorentzVector >& hyp_p4();
    const std::vector<LorentzVector >& hyp_FVFit_p4();
    const std::vector<LorentzVector >& hyp_FVFit_v4();
    const std::vector<LorentzVector >& hyp_ll_mc_p4();
    const std::vector<LorentzVector >& hyp_lt_mc_p4();
    const std::vector<LorentzVector >& jets_p4();
    const std::vector<LorentzVector >& jets_vertex_p4();
    const std::vector<LorentzVector >& l1_emiso_p4();
    const std::vector<LorentzVector >& l1_emnoiso_p4();
    const std::vector<LorentzVector >& l1_jetsc_p4();
    const std::vector<LorentzVector >& l1_jetsf_p4();
    const std::vector<LorentzVector >& l1_jetst_p4();
    const std::vector<LorentzVector >& l1_mus_p4();
    const std::vector<LorentzVector >& mus_ecalpos_p4();
    const std::vector<LorentzVector >& mus_fitpicky_p4();
    const std::vector<LorentzVector >& mus_fittev_p4();
    const std::vector<LorentzVector >& mus_fittpfms_p4();
    const std::vector<LorentzVector >& mus_gfit_outerPos_p4();
    const std::vector<LorentzVector >& mus_gfit_p4();
    const std::vector<LorentzVector >& mus_gfit_vertex_p4();
    const std::vector<LorentzVector >& mus_p4();
    const std::vector<LorentzVector >& mus_pfp4();
    const std::vector<LorentzVector >& mus_pfposAtEcal_p4();
    const std::vector<LorentzVector >& mus_sta_p4();
    const std::vector<LorentzVector >& mus_sta_vertex_p4();
    const std::vector<LorentzVector >& mus_trk_p4();
    const std::vector<LorentzVector >& mus_vertex_p4();
    const std::vector<LorentzVector >& pfcands_p4();
    const std::vector<LorentzVector >& pfcands_posAtEcal_p4();
    const std::vector<LorentzVector >& pfels_p4();
    const std::vector<LorentzVector >& pfels_posAtEcal_p4();
    const std::vector<LorentzVector >& pfjets_p4();
    const std::vector<LorentzVector >& pfmus_p4();
    const std::vector<LorentzVector >& pfmus_posAtEcal_p4();
    const std::vector<LorentzVector >& taus_pf_p4();
    const std::vector<LorentzVector >& photons_p4();
    const std::vector<LorentzVector >& convs_refitPairMom_p4();
    const std::vector<LorentzVector >& convs_vtxpos();
    const std::vector<LorentzVector >& scs_p4();
    const std::vector<LorentzVector >& scs_pos_p4();
    const std::vector<LorentzVector >& scs_vtx_p4();
    const std::vector<LorentzVector >& svs_flight();
    const std::vector<LorentzVector >& svs_mc3_p4();
    const std::vector<LorentzVector >& svs_p4();
    const std::vector<LorentzVector >& svs_position();
    const std::vector<LorentzVector >& svs_refitp4();
    const std::vector<LorentzVector >& trks_inner_position();
    const std::vector<LorentzVector >& trks_outer_p4();
    const std::vector<LorentzVector >& trks_outer_position();
    const std::vector<LorentzVector >& trks_trk_p4();
    const std::vector<LorentzVector >& trks_vertex_p4();
    const std::vector<LorentzVector >& trkjets_p4();
    const std::vector<LorentzVector >& vtxs_position();
    const std::vector<LorentzVector >& bsvtxs_position();
    const std::vector<std::vector<LorentzVector > >& els_convs_pos_p4();
    const std::vector<std::vector<LorentzVector > >& genps_lepdaughter_p4();
    const std::vector<std::vector<LorentzVector > >& hlt_trigObjs_p4();
    const std::vector<std::vector<LorentzVector > >& hyp_jets_p4();
    const std::vector<std::vector<LorentzVector > >& hyp_other_jets_p4();
    const std::vector<float>& jpts_combinedSecondaryVertexBJetTag();
    const std::vector<float>& jpts_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& jpts_jetBProbabilityBJetTag();
    const std::vector<float>& jpts_jetProbabilityBJetTag();
    const std::vector<float>& jpts_simpleSecondaryVertexBJetTag();
    const std::vector<float>& jpts_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& jpts_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& jpts_softElectronByIP3dBJetTag();
    const std::vector<float>& jpts_softElectronByPtBJetTag();
    const std::vector<float>& jpts_softElectronTag();
    const std::vector<float>& jpts_softMuonBJetTag();
    const std::vector<float>& jpts_softMuonByIP3dBJetTag();
    const std::vector<float>& jpts_softMuonByPtBJetTag();
    const std::vector<float>& jpts_trackCountingHighEffBJetTag();
    const std::vector<float>& jpts_trackCountingHighPurBJetTag();
    const std::vector<float>& jets_combinedSecondaryVertexBJetTag();
    const std::vector<float>& jets_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& jets_jetBProbabilityBJetTag();
    const std::vector<float>& jets_jetProbabilityBJetTag();
    const std::vector<float>& jets_simpleSecondaryVertexBJetTag();
    const std::vector<float>& jets_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& jets_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& jets_softElectronByIP3dBJetTag();
    const std::vector<float>& jets_softElectronByPtBJetTag();
    const std::vector<float>& jets_softElectronTag();
    const std::vector<float>& jets_softMuonBJetTag();
    const std::vector<float>& jets_softMuonByIP3dBJetTag();
    const std::vector<float>& jets_softMuonByPtBJetTag();
    const std::vector<float>& jets_trackCountingHighEffBJetTag();
    const std::vector<float>& jets_trackCountingHighPurBJetTag();
    const std::vector<float>& pfjets_combinedSecondaryVertexBJetTag();
    const std::vector<float>& pfjets_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& pfjets_jetBProbabilityBJetTag();
    const std::vector<float>& pfjets_jetProbabilityBJetTag();
    const std::vector<float>& pfjets_simpleSecondaryVertexBJetTag();
    const std::vector<float>& pfjets_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& pfjets_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& pfjets_softElectronByIP3dBJetTag();
    const std::vector<float>& pfjets_softElectronByPtBJetTag();
    const std::vector<float>& pfjets_softElectronTag();
    const std::vector<float>& pfjets_softMuonBJetTag();
    const std::vector<float>& pfjets_softMuonByIP3dBJetTag();
    const std::vector<float>& pfjets_softMuonByPtBJetTag();
    const std::vector<float>& pfjets_trackCountingHighEffBJetTag();
    const std::vector<float>& pfjets_trackCountingHighPurBJetTag();
    const std::vector<float>& trkjets_combinedSecondaryVertexBJetTag();
    const std::vector<float>& trkjets_combinedSecondaryVertexMVABJetTag();
    const std::vector<float>& trkjets_jetBProbabilityBJetTag();
    const std::vector<float>& trkjets_jetProbabilityBJetTag();
    const std::vector<float>& trkjets_simpleSecondaryVertexBJetTag();
    const std::vector<float>& trkjets_simpleSecondaryVertexHighEffBJetTag();
    const std::vector<float>& trkjets_simpleSecondaryVertexHighPurBJetTags();
    const std::vector<float>& trkjets_softElectronByIP3dBJetTag();
    const std::vector<float>& trkjets_softElectronByPtBJetTag();
    const std::vector<float>& trkjets_softElectronTag();
    const std::vector<float>& trkjets_softMuonBJetTag();
    const std::vector<float>& trkjets_softMuonByIP3dBJetTag();
    const std::vector<float>& trkjets_softMuonByPtBJetTag();
    const std::vector<float>& trkjets_trackCountingHighEffBJetTag();
    const std::vector<float>& trkjets_trackCountingHighPurBJetTag();
    const std::vector<float>& evt_bs_covMatrix();
    const std::vector<float>& els_mc3dr();
    const std::vector<float>& els_mcdr();
    const std::vector<float>& jets_mc3dr();
    const std::vector<float>& jets_mcdr();
    const std::vector<float>& jets_mc_emEnergy();
    const std::vector<float>& jets_mc_gpdr();
    const std::vector<float>& jets_mc_hadEnergy();
    const std::vector<float>& jets_mc_invEnergy();
    const std::vector<float>& jets_mc_otherEnergy();
    const std::vector<float>& mus_mc3dr();
    const std::vector<float>& mus_mcdr();
    const std::vector<float>& pfjets_mc3dr();
    const std::vector<float>& pfjets_mcdr();
    const std::vector<float>& pfjets_mc_emEnergy();
    const std::vector<float>& pfjets_mc_gpdr();
    const std::vector<float>& pfjets_mc_hadEnergy();
    const std::vector<float>& pfjets_mc_invEnergy();
    const std::vector<float>& pfjets_mc_otherEnergy();
    const std::vector<float>& photons_mc3dr();
    const std::vector<float>& photons_mcdr();
    const std::vector<float>& trk_mc3dr();
    const std::vector<float>& trk_mcdr();
    const std::vector<float>& els_ecalJuraIso();
    const std::vector<float>& els_ecalJuraTowerIso();
    const std::vector<float>& els_hcalConeIso();
    const std::vector<float>& els_tkJuraIso();
    const std::vector<float>& els_jetdr();
    const std::vector<float>& els_musdr();
    const std::vector<float>& els_isoR03_chpf_radial();
    const std::vector<float>& els_isoR03_chpf_radialTight();
    const std::vector<float>& els_isoR03_chpf_radialTight_bv();
    const std::vector<float>& els_isoR03_chpf_radial_bv();
    const std::vector<float>& els_isoR03_empf_radial();
    const std::vector<float>& els_isoR03_empf_radialTight();
    const std::vector<float>& els_isoR03_empf_radialTight_bv();
    const std::vector<float>& els_isoR03_empf_radial_bv();
    const std::vector<float>& els_isoR03_nhpf_radial();
    const std::vector<float>& els_isoR03_nhpf_radialTight();
    const std::vector<float>& els_isoR03_nhpf_radialTight_bv();
    const std::vector<float>& els_isoR03_nhpf_radial_bv();
    const std::vector<float>& els_isoR03_pf2012n0p5_ch();
    const std::vector<float>& els_isoR03_pf2012n0p5_em();
    const std::vector<float>& els_isoR03_pf2012n0p5_nh();
    const std::vector<float>& els_isoR03_pf_radial();
    const std::vector<float>& els_isoR03_pf_radialTight();
    const std::vector<float>& els_isoR03_pf_radialTight_bv();
    const std::vector<float>& els_isoR03_pf_radial_bv();
    const std::vector<float>& els_chi2();
    const std::vector<float>& els_ckf_chi2();
    const std::vector<float>& els_ckf_ndof();
    const std::vector<float>& els_conv_dcot();
    const std::vector<float>& els_conv_dist();
    const std::vector<float>& els_conv_old_dcot();
    const std::vector<float>& els_conv_old_dist();
    const std::vector<float>& els_conv_old_radius();
    const std::vector<float>& els_conv_radius();
    const std::vector<float>& els_d0();
    const std::vector<float>& els_d0Err();
    const std::vector<float>& els_d0corr();
    const std::vector<float>& els_dEtaIn();
    const std::vector<float>& els_dEtaOut();
    const std::vector<float>& els_dPhiIn();
    const std::vector<float>& els_dPhiInPhiOut();
    const std::vector<float>& els_dPhiOut();
    const std::vector<float>& els_deltaEtaEleClusterTrackAtCalo();
    const std::vector<float>& els_deltaPhiEleClusterTrackAtCalo();
    const std::vector<float>& els_e1x5();
    const std::vector<float>& els_e2x5Max();
    const std::vector<float>& els_e3x3();
    const std::vector<float>& els_e5x5();
    const std::vector<float>& els_eMax();
    const std::vector<float>& els_eOverPIn();
    const std::vector<float>& els_eOverPOut();
    const std::vector<float>& els_eSC();
    const std::vector<float>& els_eSCPresh();
    const std::vector<float>& els_eSCRaw();
    const std::vector<float>& els_eSeed();
    const std::vector<float>& els_eSeedOverPIn();
    const std::vector<float>& els_eSeedOverPOut();
    const std::vector<float>& els_ecalEnergy();
    const std::vector<float>& els_ecalEnergyError();
    const std::vector<float>& els_ecalIso();
    const std::vector<float>& els_ecalIso04();
    const std::vector<float>& els_etaErr();
    const std::vector<float>& els_etaSC();
    const std::vector<float>& els_etaSCwidth();
    const std::vector<float>& els_fbrem();
    const std::vector<float>& els_hOverE();
    const std::vector<float>& els_hcalDepth1OverEcal();
    const std::vector<float>& els_hcalDepth1TowerSumEt();
    const std::vector<float>& els_hcalDepth1TowerSumEt04();
    const std::vector<float>& els_hcalDepth2OverEcal();
    const std::vector<float>& els_hcalDepth2TowerSumEt();
    const std::vector<float>& els_hcalDepth2TowerSumEt04();
    const std::vector<float>& els_hcalIso();
    const std::vector<float>& els_hcalIso04();
    const std::vector<float>& els_ip3d();
    const std::vector<float>& els_ip3derr();
    const std::vector<float>& els_iso03_pf();
    const std::vector<float>& els_iso03_pf2012_ch();
    const std::vector<float>& els_iso03_pf2012_em();
    const std::vector<float>& els_iso03_pf2012ext_ch();
    const std::vector<float>& els_iso03_pf2012ext_em();
    const std::vector<float>& els_iso03_pf2012ext_nh();
    const std::vector<float>& els_iso03_pf2012_nh();
    const std::vector<float>& els_iso03_pf_ch();
    const std::vector<float>& els_iso03_pf_gamma05();
    const std::vector<float>& els_iso03_pf_nhad05();
    const std::vector<float>& els_iso04_pf();
    const std::vector<float>& els_iso04_pf2012_ch();
    const std::vector<float>& els_iso04_pf2012_em();
    const std::vector<float>& els_iso04_pf2012ext_ch();
    const std::vector<float>& els_iso04_pf2012ext_em();
    const std::vector<float>& els_iso04_pf2012ext_nh();
    const std::vector<float>& els_iso04_pf2012_nh();
    const std::vector<float>& els_iso04_pf_ch();
    const std::vector<float>& els_iso04_pf_gamma05();
    const std::vector<float>& els_iso04_pf_nhad05();
    const std::vector<float>& els_layer1_charge();
    const std::vector<float>& els_lh();
    const std::vector<float>& els_mva();
    const std::vector<float>& els_ndof();
    const std::vector<float>& els_pfChargedHadronIso();
    const std::vector<float>& els_pfNeutralHadronIso();
    const std::vector<float>& els_pfPhotonIso();
    const std::vector<float>& els_phiErr();
    const std::vector<float>& els_phiSC();
    const std::vector<float>& els_phiSCwidth();
    const std::vector<float>& els_ptErr();
    const std::vector<float>& els_r9();
    const std::vector<float>& els_sigmaEtaEta();
    const std::vector<float>& els_sigmaIEtaIEta();
    const std::vector<float>& els_sigmaIEtaIEtaSC();
    const std::vector<float>& els_sigmaIEtaIPhi();
    const std::vector<float>& els_sigmaIPhiIPhi();
    const std::vector<float>& els_sigmaIPhiIPhiSC();
    const std::vector<float>& els_sigmaIphiIphi();
    const std::vector<float>& els_sigmaPhiPhi();
    const std::vector<float>& els_tkIso();
    const std::vector<float>& els_tkIso04();
    const std::vector<float>& els_trackMomentumError();
    const std::vector<float>& els_trkdr();
    const std::vector<float>& els_trkshFrac();
    const std::vector<float>& els_z0();
    const std::vector<float>& els_z0Err();
    const std::vector<float>& els_z0corr();
    const std::vector<float>& gsftrks_chi2();
    const std::vector<float>& gsftrks_d0();
    const std::vector<float>& gsftrks_d0Err();
    const std::vector<float>& gsftrks_d0corr();
    const std::vector<float>& gsftrks_d0corrPhi();
    const std::vector<float>& gsftrks_d0phiCov();
    const std::vector<float>& gsftrks_etaErr();
    const std::vector<float>& gsftrks_layer1_charge();
    const std::vector<float>& gsftrks_ndof();
    const std::vector<float>& gsftrks_phiErr();
    const std::vector<float>& gsftrks_ptErr();
    const std::vector<float>& gsftrks_z0();
    const std::vector<float>& gsftrks_z0Err();
    const std::vector<float>& gsftrks_z0corr();
    const std::vector<float>& hyp_Ht();
    const std::vector<float>& hyp_dPhi_nJet_metMuonJESCorr();
    const std::vector<float>& hyp_dPhi_nJet_muCorrMet();
    const std::vector<float>& hyp_dPhi_nJet_tcMet();
    const std::vector<float>& hyp_dPhi_nJet_unCorrMet();
    const std::vector<float>& hyp_ll_chi2();
    const std::vector<float>& hyp_ll_d0();
    const std::vector<float>& hyp_ll_d0Err();
    const std::vector<float>& hyp_ll_d0corr();
    const std::vector<float>& hyp_ll_dPhi_metMuonJESCorr();
    const std::vector<float>& hyp_ll_dPhi_muCorrMet();
    const std::vector<float>& hyp_ll_dPhi_tcMet();
    const std::vector<float>& hyp_ll_dPhi_unCorrMet();
    const std::vector<float>& hyp_ll_etaErr();
    const std::vector<float>& hyp_ll_ndof();
    const std::vector<float>& hyp_ll_phiErr();
    const std::vector<float>& hyp_ll_ptErr();
    const std::vector<float>& hyp_ll_z0();
    const std::vector<float>& hyp_ll_z0Err();
    const std::vector<float>& hyp_ll_z0corr();
    const std::vector<float>& hyp_lt_chi2();
    const std::vector<float>& hyp_lt_d0();
    const std::vector<float>& hyp_lt_d0Err();
    const std::vector<float>& hyp_lt_d0corr();
    const std::vector<float>& hyp_lt_dPhi_metMuonJESCorr();
    const std::vector<float>& hyp_lt_dPhi_muCorrMet();
    const std::vector<float>& hyp_lt_dPhi_tcMet();
    const std::vector<float>& hyp_lt_dPhi_unCorrMet();
    const std::vector<float>& hyp_lt_etaErr();
    const std::vector<float>& hyp_lt_ndof();
    const std::vector<float>& hyp_lt_phiErr();
    const std::vector<float>& hyp_lt_ptErr();
    const std::vector<float>& hyp_lt_z0();
    const std::vector<float>& hyp_lt_z0Err();
    const std::vector<float>& hyp_lt_z0corr();
    const std::vector<float>& hyp_mt2_metMuonJESCorr();
    const std::vector<float>& hyp_mt2_muCorrMet();
    const std::vector<float>& hyp_mt2_tcMet();
    const std::vector<float>& hyp_sumJetPt();
    const std::vector<float>& hyp_FVFit_chi2ndf();
    const std::vector<float>& hyp_FVFit_prob();
    const std::vector<float>& hyp_FVFit_v4cxx();
    const std::vector<float>& hyp_FVFit_v4cxy();
    const std::vector<float>& hyp_FVFit_v4cyy();
    const std::vector<float>& hyp_FVFit_v4czx();
    const std::vector<float>& hyp_FVFit_v4czy();
    const std::vector<float>& hyp_FVFit_v4czz();
    const std::vector<float>& jets_approximatefHPD();
    const std::vector<float>& jets_approximatefRBX();
    const std::vector<float>& jets_cor();
    const std::vector<float>& jets_corL1FastL2L3();
    const std::vector<float>& jets_corL1L2L3();
    const std::vector<float>& jets_emFrac();
    const std::vector<float>& jets_fHPD();
    const std::vector<float>& jets_fRBX();
    const std::vector<float>& jets_fSubDetector1();
    const std::vector<float>& jets_fSubDetector2();
    const std::vector<float>& jets_fSubDetector3();
    const std::vector<float>& jets_fSubDetector4();
    const std::vector<float>& jets_hitsInN90();
    const std::vector<float>& jets_n90Hits();
    const std::vector<float>& jets_nECALTowers();
    const std::vector<float>& jets_nHCALTowers();
    const std::vector<float>& jets_restrictedEMF();
    const std::vector<float>& mus_met_deltax();
    const std::vector<float>& mus_met_deltay();
    const std::vector<float>& mus_eledr();
    const std::vector<float>& mus_jetdr();
    const std::vector<float>& mus_isoR03_chpf_radial();
    const std::vector<float>& mus_isoR03_chpf_radialTight();
    const std::vector<float>& mus_isoR03_empf_radial();
    const std::vector<float>& mus_isoR03_empf_radialTight();
    const std::vector<float>& mus_isoR03_nhpf_radial();
    const std::vector<float>& mus_isoR03_nhpf_radialTight();
    const std::vector<float>& mus_isoR03_pf_radial();
    const std::vector<float>& mus_isoR03_pf_radialTight();
    const std::vector<float>& mus_backToBackCompat();
    const std::vector<float>& mus_caloCompatibility();
    const std::vector<float>& mus_chi2();
    const std::vector<float>& mus_chi2LocalMomentum();
    const std::vector<float>& mus_chi2LocalPosition();
    const std::vector<float>& mus_cosmicCompat();
    const std::vector<float>& mus_d0();
    const std::vector<float>& mus_d0Err();
    const std::vector<float>& mus_d0corr();
    const std::vector<float>& mus_e_em();
    const std::vector<float>& mus_e_emS9();
    const std::vector<float>& mus_e_had();
    const std::vector<float>& mus_e_hadS9();
    const std::vector<float>& mus_e_ho();
    const std::vector<float>& mus_e_hoS9();
    const std::vector<float>& mus_etaErr();
    const std::vector<float>& mus_gfit_chi2();
    const std::vector<float>& mus_gfit_d0();
    const std::vector<float>& mus_gfit_d0Err();
    const std::vector<float>& mus_gfit_d0corr();
    const std::vector<float>& mus_gfit_ndof();
    const std::vector<float>& mus_gfit_qoverp();
    const std::vector<float>& mus_gfit_qoverpError();
    const std::vector<float>& mus_gfit_z0();
    const std::vector<float>& mus_gfit_z0Err();
    const std::vector<float>& mus_gfit_z0corr();
    const std::vector<float>& mus_glbKink();
    const std::vector<float>& mus_glbTrackProbability();
    const std::vector<float>& mus_globalDeltaEtaPhi();
    const std::vector<float>& mus_ip3d();
    const std::vector<float>& mus_ip3derr();
    const std::vector<float>& mus_iso03_emEt();
    const std::vector<float>& mus_iso03_hadEt();
    const std::vector<float>& mus_iso03_hoEt();
    const std::vector<float>& mus_iso03_pf();
    const std::vector<float>& mus_iso03_sumPt();
    const std::vector<float>& mus_iso04_pf();
    const std::vector<float>& mus_iso05_emEt();
    const std::vector<float>& mus_iso05_hadEt();
    const std::vector<float>& mus_iso05_hoEt();
    const std::vector<float>& mus_iso05_sumPt();
    const std::vector<float>& mus_isoR03_pf_ChargedHadronPt();
    const std::vector<float>& mus_isoR03_pf_ChargedParticlePt();
    const std::vector<float>& mus_isoR03_pf_NeutralHadronEt();
    const std::vector<float>& mus_isoR03_pf_NeutralHadronEtHighThreshold();
    const std::vector<float>& mus_isoR03_pf_PUPt();
    const std::vector<float>& mus_isoR03_pf_PhotonEt();
    const std::vector<float>& mus_isoR03_pf_PhotonEtHighThreshold();
    const std::vector<float>& mus_isoR04_pf_ChargedHadronPt();
    const std::vector<float>& mus_isoR04_pf_ChargedParticlePt();
    const std::vector<float>& mus_isoR04_pf_NeutralHadronEt();
    const std::vector<float>& mus_isoR04_pf_NeutralHadronEtHighThreshold();
    const std::vector<float>& mus_isoR04_pf_PUPt();
    const std::vector<float>& mus_isoR04_pf_PhotonEt();
    const std::vector<float>& mus_isoR04_pf_PhotonEtHighThreshold();
    const std::vector<float>& mus_iso_ecalvetoDep();
    const std::vector<float>& mus_iso_hcalvetoDep();
    const std::vector<float>& mus_iso_hovetoDep();
    const std::vector<float>& mus_iso_trckvetoDep();
    const std::vector<float>& mus_localDistance();
    const std::vector<float>& mus_ndof();
    const std::vector<float>& mus_overlapCompat();
    const std::vector<float>& mus_pfdeltaP();
    const std::vector<float>& mus_pfecalE();
    const std::vector<float>& mus_pfhcalE();
    const std::vector<float>& mus_pfmva_emu();
    const std::vector<float>& mus_pfmva_epi();
    const std::vector<float>& mus_pfmva_nothing_gamma();
    const std::vector<float>& mus_pfmva_nothing_nh();
    const std::vector<float>& mus_pfmva_pimu();
    const std::vector<float>& mus_pfpS1E();
    const std::vector<float>& mus_pfpS2E();
    const std::vector<float>& mus_pfrawEcalE();
    const std::vector<float>& mus_pfrawHcalE();
    const std::vector<float>& mus_phiErr();
    const std::vector<float>& mus_ptErr();
    const std::vector<float>& mus_qoverp();
    const std::vector<float>& mus_qoverpError();
    const std::vector<float>& mus_segmCompatibility();
    const std::vector<float>& mus_staRelChi2();
    const std::vector<float>& mus_sta_chi2();
    const std::vector<float>& mus_sta_d0();
    const std::vector<float>& mus_sta_d0Err();
    const std::vector<float>& mus_sta_d0corr();
    const std::vector<float>& mus_sta_ndof();
    const std::vector<float>& mus_sta_qoverp();
    const std::vector<float>& mus_sta_qoverpError();
    const std::vector<float>& mus_sta_z0();
    const std::vector<float>& mus_sta_z0Err();
    const std::vector<float>& mus_sta_z0corr();
    const std::vector<float>& mus_timeAtIpInOut();
    const std::vector<float>& mus_timeAtIpInOutErr();
    const std::vector<float>& mus_timeAtIpOutIn();
    const std::vector<float>& mus_timeAtIpOutInErr();
    const std::vector<float>& mus_timeCompat();
    const std::vector<float>& mus_trkKink();
    const std::vector<float>& mus_trkRelChi2();
    const std::vector<float>& mus_vertexCompat();
    const std::vector<float>& mus_vertexphi();
    const std::vector<float>& mus_z0();
    const std::vector<float>& mus_z0Err();
    const std::vector<float>& mus_z0corr();
    const std::vector<float>& pfjets_mvavalue();
    const std::vector<float>& pfjets_full53xmva_beta();
    const std::vector<float>& pfjets_full53xmva_betaStar();
    const std::vector<float>& pfjets_full53xmva_d0();
    const std::vector<float>& pfjets_full53xmva_dRMean();
    const std::vector<float>& pfjets_full53xmva_dZ();
    const std::vector<float>& pfjets_full53xmva_frac01();
    const std::vector<float>& pfjets_full53xmva_frac02();
    const std::vector<float>& pfjets_full53xmva_frac03();
    const std::vector<float>& pfjets_full53xmva_frac04();
    const std::vector<float>& pfjets_full53xmva_frac05();
    const std::vector<float>& pfjets_full53xmva_nCharged();
    const std::vector<float>& pfjets_full53xmva_nNeutrals();
    const std::vector<float>& pfjets_full53xmva_nvtx();
    const std::vector<float>& pfjets_full53xmvavalue();
    const std::vector<float>& pfjets_full5xmvavalue();
    const std::vector<float>& trkjet_met();
    const std::vector<float>& trkjet_metPhi();
    const std::vector<float>& trkjet_sumet();
    const std::vector<float>& trk_met();
    const std::vector<float>& trk_metPhi();
    const std::vector<float>& trk_sumet();
    const std::vector<float>& pfcands_deltaP();
    const std::vector<float>& pfcands_ecalE();
    const std::vector<float>& pfcands_hcalE();
    const std::vector<float>& pfcands_mva_emu();
    const std::vector<float>& pfcands_mva_epi();
    const std::vector<float>& pfcands_mva_nothing_gamma();
    const std::vector<float>& pfcands_mva_nothing_nh();
    const std::vector<float>& pfcands_mva_pimu();
    const std::vector<float>& pfcands_pS1E();
    const std::vector<float>& pfcands_pS2E();
    const std::vector<float>& pfcands_rawEcalE();
    const std::vector<float>& pfcands_rawHcalE();
    const std::vector<float>& pfels_deltaP();
    const std::vector<float>& pfels_ecalE();
    const std::vector<float>& pfels_hcalE();
    const std::vector<float>& pfels_iso04ChargedHadrons();
    const std::vector<float>& pfels_iso04NeutralHadrons();
    const std::vector<float>& pfels_iso04Photons();
    const std::vector<float>& pfels_isoChargedHadrons();
    const std::vector<float>& pfels_isoNeutralHadrons();
    const std::vector<float>& pfels_isoPhotons();
    const std::vector<float>& pfels_mva_emu();
    const std::vector<float>& pfels_mva_epi();
    const std::vector<float>& pfels_mva_nothing_gamma();
    const std::vector<float>& pfels_mva_nothing_nh();
    const std::vector<float>& pfels_mva_pimu();
    const std::vector<float>& pfels_pS1E();
    const std::vector<float>& pfels_pS2E();
    const std::vector<float>& pfels_rawEcalE();
    const std::vector<float>& pfels_rawHcalE();
    const std::vector<float>& pfjets_area();
    const std::vector<float>& pfjets_chargedEmE();
    const std::vector<float>& pfjets_chargedHadronE();
    const std::vector<float>& pfjets_cor();
    const std::vector<float>& pfjets_corL1Fast();
    const std::vector<float>& pfjets_corL1FastL2L3();
    const std::vector<float>& pfjets_corL1FastL2L3residual();
    const std::vector<float>& pfjets_corL1L2L3();
    const std::vector<float>& pfjets_electronE();
    const std::vector<float>& pfjets_hfEmE();
    const std::vector<float>& pfjets_hfHadronE();
    const std::vector<float>& pfjets_muonE();
    const std::vector<float>& pfjets_neutralEmE();
    const std::vector<float>& pfjets_neutralHadronE();
    const std::vector<float>& pfjets_photonE();
    const std::vector<float>& pfmus_deltaP();
    const std::vector<float>& pfmus_ecalE();
    const std::vector<float>& pfmus_hcalE();
    const std::vector<float>& pfmus_iso04ChargedHadrons();
    const std::vector<float>& pfmus_iso04NeutralHadrons();
    const std::vector<float>& pfmus_iso04Photons();
    const std::vector<float>& pfmus_isoChargedHadrons();
    const std::vector<float>& pfmus_isoNeutralHadrons();
    const std::vector<float>& pfmus_isoPhotons();
    const std::vector<float>& pfmus_mva_emu();
    const std::vector<float>& pfmus_mva_epi();
    const std::vector<float>& pfmus_mva_nothing_gamma();
    const std::vector<float>& pfmus_mva_nothing_nh();
    const std::vector<float>& pfmus_mva_pimu();
    const std::vector<float>& pfmus_pS1E();
    const std::vector<float>& pfmus_pS2E();
    const std::vector<float>& pfmus_rawEcalE();
    const std::vector<float>& pfmus_rawHcalE();
    const std::vector<float>& taus_pf_againstElectronDeadECAL();
    const std::vector<float>& taus_pf_againstElectronLoose();
    const std::vector<float>& taus_pf_againstElectronLooseMVA2();
    const std::vector<float>& taus_pf_againstElectronLooseMVA3();
    const std::vector<float>& taus_pf_againstElectronMVA();
    const std::vector<float>& taus_pf_againstElectronMVA2category();
    const std::vector<float>& taus_pf_againstElectronMVA2raw();
    const std::vector<float>& taus_pf_againstElectronMVA3category();
    const std::vector<float>& taus_pf_againstElectronMVA3raw();
    const std::vector<float>& taus_pf_againstElectronMedium();
    const std::vector<float>& taus_pf_againstElectronMediumMVA2();
    const std::vector<float>& taus_pf_againstElectronMediumMVA3();
    const std::vector<float>& taus_pf_againstElectronTight();
    const std::vector<float>& taus_pf_againstElectronTightMVA2();
    const std::vector<float>& taus_pf_againstElectronTightMVA3();
    const std::vector<float>& taus_pf_againstElectronVLooseMVA2();
    const std::vector<float>& taus_pf_againstElectronVTightMVA3();
    const std::vector<float>& taus_pf_againstMuonLoose();
    const std::vector<float>& taus_pf_againstMuonLoose2();
    const std::vector<float>& taus_pf_againstMuonMedium();
    const std::vector<float>& taus_pf_againstMuonMedium2();
    const std::vector<float>& taus_pf_againstMuonTight();
    const std::vector<float>& taus_pf_againstMuonTight2();
    const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw();
    const std::vector<float>& taus_pf_byCombinedIsolationDeltaBetaCorrRaw3Hits();
    const std::vector<float>& taus_pf_byDecayModeFinding();
    const std::vector<float>& taus_pf_byIsolationMVA2raw();
    const std::vector<float>& taus_pf_byIsolationMVAraw();
    const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& taus_pf_byLooseCombinedIsolationDeltaBetaCorr3Hits();
    const std::vector<float>& taus_pf_byLooseIsolationMVA();
    const std::vector<float>& taus_pf_byLooseIsolationMVA2();
    const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& taus_pf_byMediumCombinedIsolationDeltaBetaCorr3Hits();
    const std::vector<float>& taus_pf_byMediumIsolationMVA();
    const std::vector<float>& taus_pf_byMediumIsolationMVA2();
    const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& taus_pf_byTightCombinedIsolationDeltaBetaCorr3Hits();
    const std::vector<float>& taus_pf_byTightIsolationMVA();
    const std::vector<float>& taus_pf_byTightIsolationMVA2();
    const std::vector<float>& taus_pf_byVLooseCombinedIsolationDeltaBetaCorr();
    const std::vector<float>& photons_e1x5();
    const std::vector<float>& photons_e2x5Max();
    const std::vector<float>& photons_e3x3();
    const std::vector<float>& photons_e5x5();
    const std::vector<float>& photons_ecalIso03();
    const std::vector<float>& photons_ecalIso04();
    const std::vector<float>& photons_hOverE();
    const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR03();
    const std::vector<float>& photons_hcalDepth1TowerSumEtBcConeDR04();
    const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR03();
    const std::vector<float>& photons_hcalDepth2TowerSumEtBcConeDR04();
    const std::vector<float>& photons_hcalIso03();
    const std::vector<float>& photons_hcalIso04();
    const std::vector<float>& photons_hcalTowerSumEtBcConeDR03();
    const std::vector<float>& photons_hcalTowerSumEtBcConeDR04();
    const std::vector<float>& photons_ntkIsoHollow03();
    const std::vector<float>& photons_ntkIsoHollow04();
    const std::vector<float>& photons_ntkIsoSolid03();
    const std::vector<float>& photons_ntkIsoSolid04();
    const std::vector<float>& photons_sigmaEtaEta();
    const std::vector<float>& photons_sigmaIEtaIEta();
    const std::vector<float>& photons_swissSeed();
    const std::vector<float>& photons_tkIsoHollow03();
    const std::vector<float>& photons_tkIsoHollow04();
    const std::vector<float>& photons_tkIsoSolid03();
    const std::vector<float>& photons_tkIsoSolid04();
    const std::vector<float>& puInfo_trueNumInteractions();
    const std::vector<float>& convs_chi2();
    const std::vector<float>& convs_dl();
    const std::vector<float>& convs_ndof();
    const std::vector<float>& sparm_values();
    const std::vector<float>& scs_clustersSize();
    const std::vector<float>& scs_crystalsSize();
    const std::vector<float>& scs_e1x3();
    const std::vector<float>& scs_e1x5();
    const std::vector<float>& scs_e2nd();
    const std::vector<float>& scs_e2x2();
    const std::vector<float>& scs_e2x5Max();
    const std::vector<float>& scs_e3x1();
    const std::vector<float>& scs_e3x2();
    const std::vector<float>& scs_e3x3();
    const std::vector<float>& scs_e4x4();
    const std::vector<float>& scs_e5x5();
    const std::vector<float>& scs_eMax();
    const std::vector<float>& scs_eSeed();
    const std::vector<float>& scs_energy();
    const std::vector<float>& scs_eta();
    const std::vector<float>& scs_hoe();
    const std::vector<float>& scs_laserCorMax();
    const std::vector<float>& scs_laserCorMean();
    const std::vector<float>& scs_laserCorSeed();
    const std::vector<float>& scs_phi();
    const std::vector<float>& scs_preshowerEnergy();
    const std::vector<float>& scs_rawEnergy();
    const std::vector<float>& scs_sigmaEtaEta();
    const std::vector<float>& scs_sigmaEtaPhi();
    const std::vector<float>& scs_sigmaIEtaIEta();
    const std::vector<float>& scs_sigmaIEtaIEtaSC();
    const std::vector<float>& scs_sigmaIEtaIPhi();
    const std::vector<float>& scs_sigmaIEtaIPhiSC();
    const std::vector<float>& scs_sigmaIPhiIPhi();
    const std::vector<float>& scs_sigmaIPhiIPhiSC();
    const std::vector<float>& scs_sigmaPhiPhi();
    const std::vector<float>& scs_timeSeed();
    const std::vector<float>& svs_anglePV();
    const std::vector<float>& svs_chi2();
    const std::vector<float>& svs_dist3Dsig();
    const std::vector<float>& svs_dist3Dval();
    const std::vector<float>& svs_distXYsig();
    const std::vector<float>& svs_distXYval();
    const std::vector<float>& svs_ndof();
    const std::vector<float>& svs_prob();
    const std::vector<float>& svs_xError();
    const std::vector<float>& svs_yError();
    const std::vector<float>& svs_zError();
    const std::vector<float>& mus_tcmet_deltax();
    const std::vector<float>& mus_tcmet_deltay();
    const std::vector<float>& pfcands_dzpv();
    const std::vector<float>& pfcands_trkiso();
    const std::vector<float>& trks_chi2();
    const std::vector<float>& trks_d0();
    const std::vector<float>& trks_d0Err();
    const std::vector<float>& trks_d0corr();
    const std::vector<float>& trks_d0corrPhi();
    const std::vector<float>& trks_d0phiCov();
    const std::vector<float>& trks_etaErr();
    const std::vector<float>& trks_layer1_charge();
    const std::vector<float>& trks_ndof();
    const std::vector<float>& trks_phiErr();
    const std::vector<float>& trks_ptErr();
    const std::vector<float>& trks_validFraction();
    const std::vector<float>& trks_z0();
    const std::vector<float>& trks_z0Err();
    const std::vector<float>& trks_z0corr();
    const std::vector<float>& trkjets_cor();
    const std::vector<float>& trks_d0Errvtx();
    const std::vector<float>& trks_d0vtx();
    const std::vector<float>& vtxs_chi2();
    const std::vector<float>& vtxs_ndof();
    const std::vector<float>& vtxs_sumpt();
    const std::vector<float>& vtxs_xError();
    const std::vector<float>& vtxs_yError();
    const std::vector<float>& vtxs_zError();
    const std::vector<float>& bsvtxs_chi2();
    const std::vector<float>& bsvtxs_ndof();
    const std::vector<float>& bsvtxs_sumpt();
    const std::vector<float>& bsvtxs_xError();
    const std::vector<float>& bsvtxs_yError();
    const std::vector<float>& bsvtxs_zError();
    const std::vector<std::vector<float> >& els_convs_dcot();
    const std::vector<std::vector<float> >& els_convs_dist();
    const std::vector<std::vector<float> >& els_convs_radius();
    const std::vector<std::vector<float> >& mus_stationShowerDeltaR();
    const std::vector<std::vector<float> >& mus_stationShowerSizeT();
    const std::vector<std::vector<float> >& puInfo_instLumi();
    const std::vector<std::vector<float> >& puInfo_sump_highpt();
    const std::vector<std::vector<float> >& puInfo_sumpt_lowpt();
    const std::vector<std::vector<float> >& puInfo_zpositions();
    const std::vector<std::vector<float> >& vtxs_covMatrix();
    const std::vector<std::vector<float> >& bsvtxs_covMatrix();
    const int& evt_cscLooseHaloId();
    const int& evt_cscTightHaloId();
    const int& evt_ecalLooseHaloId();
    const int& evt_ecalTightHaloId();
    const int& evt_extremeTightHaloId();
    const int& evt_globalLooseHaloId();
    const int& evt_globalTightHaloId();
    const int& evt_hcalLooseHaloId();
    const int& evt_hcalTightHaloId();
    const int& evt_looseHaloId();
    const int& evt_nHaloLikeTracks();
    const int& evt_nHaloTriggerCandidates();
    const int& evt_tightHaloId();
    const int& evt_bsType();
    const int& evt_bunchCrossing();
    const int& evt_experimentType();
    const int& evt_isRealData();
    const int& evt_orbitNumber();
    const int& evt_storeNumber();
    const int& hcalnoise_GetRecHitCount();
    const int& hcalnoise_GetRecHitCount15();
    const int& hcalnoise_maxHPDHits();
    const int& hcalnoise_maxHPDNoOtherHits();
    const int& hcalnoise_maxRBXHits();
    const int& hcalnoise_maxZeros();
    const int& hcalnoise_noiseFilterStatus();
    const int& hcalnoise_noiseType();
    const int& hcalnoise_num10GeVHits();
    const int& hcalnoise_num25GeVHits();
    const int& hcalnoise_numFlatNoiseChannels();
    const int& hcalnoise_numIsolatedNoiseChannels();
    const int& hcalnoise_numProblematicRBXs();
    const int& hcalnoise_numSpikeNoiseChannels();
    const int& hcalnoise_numTS4TS5NoiseChannels();
    const int& hcalnoise_numTriangleNoiseChannels();
    const int& hcalnoise_passHighLevelNoiseFilter();
    const int& hcalnoise_passLooseNoiseFilter();
    const int& hcalnoise_passTightNoiseFilter();
    const int& l1_nemiso();
    const int& l1_nemnoiso();
    const int& l1_njetsc();
    const int& l1_njetsf();
    const int& l1_njetst();
    const int& l1_nmus();
    const int& ls_lumiSecQual();
    const int& pdfinfo_id1();
    const int& pdfinfo_id2();
    const int& sparm_subProcessId();
    const std::vector<int>& evt_ecaliPhiSuspects();
    const std::vector<int>& evt_globaliPhiSuspects();
    const std::vector<int>& evt_hcaliPhiSuspects();
    const std::vector<int>& els_mc3_id();
    const std::vector<int>& els_mc3idx();
    const std::vector<int>& els_mc3_motherid();
    const std::vector<int>& els_mc3_motheridx();
    const std::vector<int>& els_mc_id();
    const std::vector<int>& els_mcidx();
    const std::vector<int>& els_mc_motherid();
    const std::vector<int>& jets_mc3_id();
    const std::vector<int>& jets_mc3idx();
    const std::vector<int>& jets_mc_gpidx();
    const std::vector<int>& jets_mc_id();
    const std::vector<int>& jets_mcidx();
    const std::vector<int>& jets_mc_motherid();
    const std::vector<int>& mus_mc3_id();
    const std::vector<int>& mus_mc3idx();
    const std::vector<int>& mus_mc3_motherid();
    const std::vector<int>& mus_mc3_motheridx();
    const std::vector<int>& mus_mc_id();
    const std::vector<int>& mus_mcidx();
    const std::vector<int>& mus_mc_motherid();
    const std::vector<int>& pfjets_mc3_id();
    const std::vector<int>& pfjets_mc3idx();
    const std::vector<int>& pfjets_mc_gpidx();
    const std::vector<int>& pfjets_mc_id();
    const std::vector<int>& pfjets_mcidx();
    const std::vector<int>& pfjets_mc_motherid();
    const std::vector<int>& photons_mc3_id();
    const std::vector<int>& photons_mc3idx();
    const std::vector<int>& photons_mc3_motherid();
    const std::vector<int>& photons_mc3_motheridx();
    const std::vector<int>& photons_mc_id();
    const std::vector<int>& photons_mcidx();
    const std::vector<int>& photons_mc_motherid();
    const std::vector<int>& trk_mc3_id();
    const std::vector<int>& trk_mc3idx();
    const std::vector<int>& trk_mc3_motherid();
    const std::vector<int>& trk_mc3_motheridx();
    const std::vector<int>& trk_mc_id();
    const std::vector<int>& trk_mcidx();
    const std::vector<int>& trk_mc_motherid();
    const std::vector<int>& els_closestJet();
    const std::vector<int>& els_closestMuon();
    const std::vector<int>& els_pfelsidx();
    const std::vector<int>& els_category();
    const std::vector<int>& els_charge();
    const std::vector<int>& els_ckf_laywithmeas();
    const std::vector<int>& els_class();
    const std::vector<int>& els_conv_delMissHits();
    const std::vector<int>& els_conv_flag();
    const std::vector<int>& els_conv_gsftkidx();
    const std::vector<int>& els_conv_old_delMissHits();
    const std::vector<int>& els_conv_old_flag();
    const std::vector<int>& els_conv_old_gsftkidx();
    const std::vector<int>& els_conv_old_tkidx();
    const std::vector<int>& els_conv_tkidx();
    const std::vector<int>& els_exp_innerlayers();
    const std::vector<int>& els_exp_outerlayers();
    const std::vector<int>& els_fiduciality();
    const std::vector<int>& els_gsftrkidx();
    const std::vector<int>& els_layer1_det();
    const std::vector<int>& els_layer1_layer();
    const std::vector<int>& els_layer1_sizerphi();
    const std::vector<int>& els_layer1_sizerz();
    const std::vector<int>& els_lostHits();
    const std::vector<int>& els_lost_pixelhits();
    const std::vector<int>& els_nSeed();
    const std::vector<int>& els_sccharge();
    const std::vector<int>& els_scindex();
    const std::vector<int>& els_trk_charge();
    const std::vector<int>& els_trkidx();
    const std::vector<int>& els_type();
    const std::vector<int>& els_validHits();
    const std::vector<int>& els_valid_pixelhits();
    const std::vector<int>& genps_id();
    const std::vector<int>& genps_id_mother();
    const std::vector<int>& genps_status();
    const std::vector<int>& gsftrks_charge();
    const std::vector<int>& gsftrks_exp_innerlayers();
    const std::vector<int>& gsftrks_exp_outerlayers();
    const std::vector<int>& gsftrks_layer1_det();
    const std::vector<int>& gsftrks_layer1_layer();
    const std::vector<int>& gsftrks_layer1_sizerphi();
    const std::vector<int>& gsftrks_layer1_sizerz();
    const std::vector<int>& gsftrks_lostHits();
    const std::vector<int>& gsftrks_lost_pixelhits();
    const std::vector<int>& gsftrks_nlayers();
    const std::vector<int>& gsftrks_nlayers3D();
    const std::vector<int>& gsftrks_nlayersLost();
    const std::vector<int>& gsftrks_validHits();
    const std::vector<int>& gsftrks_valid_pixelhits();
    const std::vector<int>& hyp_ll_charge();
    const std::vector<int>& hyp_ll_id();
    const std::vector<int>& hyp_ll_index();
    const std::vector<int>& hyp_ll_lostHits();
    const std::vector<int>& hyp_ll_validHits();
    const std::vector<int>& hyp_lt_charge();
    const std::vector<int>& hyp_lt_id();
    const std::vector<int>& hyp_lt_index();
    const std::vector<int>& hyp_lt_lostHits();
    const std::vector<int>& hyp_lt_validHits();
    const std::vector<int>& hyp_njets();
    const std::vector<int>& hyp_nojets();
    const std::vector<int>& hyp_type();
    const std::vector<int>& hyp_FVFit_ndf();
    const std::vector<int>& hyp_FVFit_status();
    const std::vector<int>& hyp_ll_mc_id();
    const std::vector<int>& hyp_ll_mc_motherid();
    const std::vector<int>& hyp_lt_mc_id();
    const std::vector<int>& hyp_lt_mc_motherid();
    const std::vector<int>& pfjets_mcflavorAlgo();
    const std::vector<int>& pfjets_mcflavorPhys();
    const std::vector<int>& jets_closestElectron();
    const std::vector<int>& jets_closestMuon();
    const std::vector<int>& l1_emiso_ieta();
    const std::vector<int>& l1_emiso_iphi();
    const std::vector<int>& l1_emiso_rawId();
    const std::vector<int>& l1_emiso_type();
    const std::vector<int>& l1_emnoiso_ieta();
    const std::vector<int>& l1_emnoiso_iphi();
    const std::vector<int>& l1_emnoiso_rawId();
    const std::vector<int>& l1_emnoiso_type();
    const std::vector<int>& l1_jetsc_ieta();
    const std::vector<int>& l1_jetsc_iphi();
    const std::vector<int>& l1_jetsc_rawId();
    const std::vector<int>& l1_jetsc_type();
    const std::vector<int>& l1_jetsf_ieta();
    const std::vector<int>& l1_jetsf_iphi();
    const std::vector<int>& l1_jetsf_rawId();
    const std::vector<int>& l1_jetsf_type();
    const std::vector<int>& l1_jetst_ieta();
    const std::vector<int>& l1_jetst_iphi();
    const std::vector<int>& l1_jetst_rawId();
    const std::vector<int>& l1_jetst_type();
    const std::vector<int>& l1_mus_flags();
    const std::vector<int>& l1_mus_q();
    const std::vector<int>& l1_mus_qual();
    const std::vector<int>& l1_mus_qualFlags();
    const std::vector<int>& mus_met_flag();
    const std::vector<int>& mus_closestEle();
    const std::vector<int>& mus_closestJet();
    const std::vector<int>& mus_pfmusidx();
    const std::vector<int>& mus_charge();
    const std::vector<int>& mus_gfit_validHits();
    const std::vector<int>& mus_gfit_validSTAHits();
    const std::vector<int>& mus_gfit_validSiHits();
    const std::vector<int>& mus_goodmask();
    const std::vector<int>& mus_iso03_ntrk();
    const std::vector<int>& mus_iso05_ntrk();
    const std::vector<int>& mus_lostHits();
    const std::vector<int>& mus_muonBestTrackType();
    const std::vector<int>& mus_nOverlaps();
    const std::vector<int>& mus_nmatches();
    const std::vector<int>& mus_numberOfMatchedStations();
    const std::vector<int>& mus_overlap0();
    const std::vector<int>& mus_overlap1();
    const std::vector<int>& mus_pfcharge();
    const std::vector<int>& mus_pfflag();
    const std::vector<int>& mus_pfparticleId();
    const std::vector<int>& mus_pid_PFMuon();
    const std::vector<int>& mus_pid_TM2DCompatibilityLoose();
    const std::vector<int>& mus_pid_TM2DCompatibilityTight();
    const std::vector<int>& mus_pid_TMLastStationLoose();
    const std::vector<int>& mus_pid_TMLastStationTight();
    const std::vector<int>& mus_sta_validHits();
    const std::vector<int>& mus_timeDirection();
    const std::vector<int>& mus_timeNumStationsUsed();
    const std::vector<int>& mus_trk_charge();
    const std::vector<int>& mus_trkidx();
    const std::vector<int>& mus_type();
    const std::vector<int>& mus_validHits();
    const std::vector<int>& pfcands_charge();
    const std::vector<int>& pfcands_flag();
    const std::vector<int>& pfcands_particleId();
    const std::vector<int>& pfcands_pfelsidx();
    const std::vector<int>& pfcands_pfmusidx();
    const std::vector<int>& pfcands_trkidx();
    const std::vector<int>& pfcands_vtxidx();
    const std::vector<int>& pfels_elsidx();
    const std::vector<int>& pfels_charge();
    const std::vector<int>& pfels_flag();
    const std::vector<int>& pfels_particleId();
    const std::vector<int>& pfjets_chargedHadronMultiplicity();
    const std::vector<int>& pfjets_chargedMultiplicity();
    const std::vector<int>& pfjets_electronMultiplicity();
    const std::vector<int>& pfjets_hfEmMultiplicity();
    const std::vector<int>& pfjets_hfHadronMultiplicity();
    const std::vector<int>& pfjets_muonMultiplicity();
    const std::vector<int>& pfjets_neutralHadronMultiplicity();
    const std::vector<int>& pfjets_neutralMultiplicity();
    const std::vector<int>& pfjets_photonMultiplicity();
    const std::vector<int>& pfmus_musidx();
    const std::vector<int>& pfmus_charge();
    const std::vector<int>& pfmus_flag();
    const std::vector<int>& pfmus_particleId();
    const std::vector<int>& taus_pf_charge();
    const std::vector<int>& taus_pf_pfjetIndex();
    const std::vector<int>& photons_fiduciality();
    const std::vector<int>& photons_scindex();
    const std::vector<int>& puInfo_bunchCrossing();
    const std::vector<int>& puInfo_nPUvertices();
    const std::vector<int>& convs_algo();
    const std::vector<int>& convs_isConverted();
    const std::vector<int>& convs_quality();
    const std::vector<int>& scs_detIdSeed();
    const std::vector<int>& scs_elsidx();
    const std::vector<int>& scs_severitySeed();
    const std::vector<int>& svs_isKs();
    const std::vector<int>& svs_isLambda();
    const std::vector<int>& svs_mc3_id();
    const std::vector<int>& svs_nTrks();
    const std::vector<int>& mus_tcmet_flag();
    const std::vector<int>& trks_algo();
    const std::vector<int>& trks_charge();
    const std::vector<int>& trks_exp_innerlayers();
    const std::vector<int>& trks_exp_outerlayers();
    const std::vector<int>& trks_layer1_det();
    const std::vector<int>& trks_layer1_layer();
    const std::vector<int>& trks_layer1_sizerphi();
    const std::vector<int>& trks_layer1_sizerz();
    const std::vector<int>& trks_lostHits();
    const std::vector<int>& trks_lost_pixelhits();
    const std::vector<int>& trks_nLoops();
    const std::vector<int>& trks_nlayers();
    const std::vector<int>& trks_nlayers3D();
    const std::vector<int>& trks_nlayersLost();
    const std::vector<int>& trks_pvidx0();
    const std::vector<int>& trks_pvidx1();
    const std::vector<int>& trks_qualityMask();
    const std::vector<int>& trks_validHits();
    const std::vector<int>& trks_valid_pixelhits();
    const std::vector<int>& trks_elsidx();
    const std::vector<int>& trk_musidx();
    const std::vector<int>& trkjets_ntrks();
    const std::vector<int>& trkjets_vtxs_idx();
    const std::vector<int>& vtxs_isFake();
    const std::vector<int>& vtxs_isValid();
    const std::vector<int>& vtxs_tracksSize();
    const std::vector<int>& bsvtxs_isFake();
    const std::vector<int>& bsvtxs_isValid();
    const std::vector<int>& bsvtxs_tracksSize();
    const std::vector<std::vector<int> >& els_convs_delMissHits();
    const std::vector<std::vector<int> >& els_convs_flag();
    const std::vector<std::vector<int> >& els_convs_gsftkidx();
    const std::vector<std::vector<int> >& els_convs_tkidx();
    const std::vector<std::vector<int> >& genps_lepdaughter_id();
    const std::vector<std::vector<int> >& genps_lepdaughter_idx();
    const std::vector<std::vector<int> >& hlt_trigObjs_id();
    const std::vector<std::vector<int> >& hyp_jets_idx();
    const std::vector<std::vector<int> >& hyp_other_jets_idx();
    const std::vector<std::vector<int> >& mus_nStationCorrelatedHits();
    const std::vector<std::vector<int> >& mus_nStationHits();
    const std::vector<std::vector<int> >& pfjets_pfcandIndicies();
    const std::vector<std::vector<int> >& taus_pf_pfcandIndicies();
    const std::vector<std::vector<int> >& puInfo_ntrks_highpt();
    const std::vector<std::vector<int> >& puInfo_ntrks_lowpt();
    const std::vector<std::vector<int> >& convs_nHitsBeforeVtx();
    const std::vector<std::vector<int> >& convs_tkalgo();
    const std::vector<std::vector<int> >& convs_tkidx();
    const unsigned int& els_HLT_Ele17_Ele8_L1sL1DoubleEG137_version();
    const unsigned int& els_HLT_Ele17_Ele8_LeadingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_Mass50_LeadingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_Mass50_TrailingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_TrailingLeg_version();
    const unsigned int& els_HLT_Ele17_Ele8_version();
    const unsigned int& els_HLT_Ele20_SC4_Mass50_LeadingLeg_version();
    const unsigned int& els_HLT_Ele20_SC4_Mass50_TrailingLeg_version();
    const unsigned int& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22_version();
    const unsigned int& els_HLT_Ele27_WP80_version();
    const unsigned int& els_HLT_Ele32_SC17_Mass50_LeadingLeg_version();
    const unsigned int& els_HLT_Ele32_SC17_Mass50_TrailingLeg_version();
    const unsigned int& els_HLT_Mu17_Ele8_TrailingLeg_version();
    const unsigned int& els_HLT_Mu17_Ele8_version();
    const unsigned int& els_HLT_Mu8_Ele17_version();
    const unsigned int& evt_nels();
    const unsigned int& evt_detectorStatus();
    const unsigned int& evt_event();
    const unsigned int& evt_lumiBlock();
    const unsigned int& evt_run();
    const unsigned int& genps_flavorHistoryFilterResult();
    const unsigned int& evt_ngenjets();
    const unsigned int& genps_signalProcessID();
    const unsigned int& evt_njets();
    const unsigned int& l1_bits1();
    const unsigned int& l1_bits2();
    const unsigned int& l1_bits3();
    const unsigned int& l1_bits4();
    const unsigned int& l1_techbits1();
    const unsigned int& l1_techbits2();
    const unsigned int& ls_lsNumber();
    const unsigned int& ls_numOrbit();
    const unsigned int& ls_startOrbit();
    const unsigned int& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1_version();
    const unsigned int& mus_HLT_IsoMu24_eta2p1_version();
    const unsigned int& mus_HLT_Mu17_Ele8_LeadingLeg_version();
    const unsigned int& mus_HLT_Mu17_Ele8_version();
    const unsigned int& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen_version();
    const unsigned int& mus_HLT_Mu17_Mu8_LeadingLeg_version();
    const unsigned int& mus_HLT_Mu17_Mu8_TrailingLeg_version();
    const unsigned int& mus_HLT_Mu17_Mu8_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_LeadingLeg_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_TrailingLeg_version();
    const unsigned int& mus_HLT_Mu17_TkMu8_version();
    const unsigned int& mus_HLT_Mu8_Ele17_TrailingLeg_version();
    const unsigned int& mus_HLT_Mu8_Ele17_version();
    const unsigned int& evt_nphotons();
    const unsigned int& evt_ecalRecoStatus();
    const unsigned int& evt_nscs();
    const unsigned int& evt_ntrkjets();
    const unsigned int& evt_nvtxs();
    const unsigned int& evt_nbsvtxs();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_L1sL1DoubleEG137();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_Mass50_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Ele17_Ele8_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele20_SC4_Mass50_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Ele27_WP80();
    const std::vector<unsigned int>& els_HLT_Ele27_WP80_L1sL1SingleEG20ORL1SingleEG22();
    const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_LeadingLeg();
    const std::vector<unsigned int>& els_HLT_Ele32_SC17_Mass50_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Mu17_Ele8();
    const std::vector<unsigned int>& els_HLT_Mu17_Ele8_TrailingLeg();
    const std::vector<unsigned int>& els_HLT_Mu8_Ele17();
    const std::vector<unsigned int>& els_id2012ext_loose();
    const std::vector<unsigned int>& els_id2012ext_medium();
    const std::vector<unsigned int>& els_id2012ext_tight();
    const std::vector<unsigned int>& els_id2012ext_veto();
    const std::vector<unsigned int>& els_id2012_loose();
    const std::vector<unsigned int>& els_id2012_medium();
    const std::vector<unsigned int>& els_id2012_tight();
    const std::vector<unsigned int>& els_id2012_veto();
    const std::vector<unsigned int>& hlt_prescales();
    const std::vector<unsigned int>& l1_prescales();
    const std::vector<unsigned int>& l1_techtrigprescales();
    const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1();
    const std::vector<unsigned int>& mus_HLT_IsoMu24_eta2p1_L1sMu16Eta2p1();
    const std::vector<unsigned int>& mus_HLT_Mu17_Ele8();
    const std::vector<unsigned int>& mus_HLT_Mu17_Ele8_LeadingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_L1sL1DoubleMu10MuOpen();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_LeadingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_Mu8_TrailingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_LeadingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLeg();
    const std::vector<unsigned int>& mus_HLT_Mu17_TkMu8_TrailingLegTrkFiltered();
    const std::vector<unsigned int>& mus_HLT_Mu8_Ele17();
    const std::vector<unsigned int>& mus_HLT_Mu8_Ele17_TrailingLeg();
    const unsigned long long& evt_timestamp();

} // namespace tas

#endif //ifndef CMS2_USE_CMSSW

#ifndef __CINT__
extern CMS2 cms2;
#endif


#endif // CMS2_H
